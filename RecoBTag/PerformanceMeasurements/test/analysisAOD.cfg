process analysis = {

  #keep the logging output to a nice level
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  source = PoolSource {
	 untracked vstring fileNames = {
	 #'/store/mc/2007/7/11/CSA07-QCD_Pt_80_120-2027/0001/0001F088-9832-DC11-A133-000423DCF6B8.root'
	 #'/store/mc/2007/7/17/CSA07-QCD_Pt_50_80-2049/0003/002B6C8B-8D35-DC11-AAAA-001617C3B6A0.root'
	 #'/store/mc/2007/7/11/CSA07-QCD_Pt_80_120-2027/0001/0001F088-9832-DC11-A133-000423DCF6B8.root'
	'/store/CSA07/skims/2007/10/25/CSA07-CSA07AllEvents-Stew-B1-PDAllEvents-Skims0/0000/D2053D90-CC87-DC11-BC0B-001731AF687F.root'
	 }
  }
  
  untracked PSet maxEvents = { untracked int32 input = 10 }

  # rerun track counting to pickup new default
  #include "RecoBTag/TrackCounting/data/trackCounting.cff"
  # include track probability tagger, needed in 13X
  # include "RecoBTag/TrackProbability/data/trackProbability.cff"

  # jet corrections
  include "JetMETCorrections/MCJet/data/MCJetCorrections152.cff"
  es_prefer MCJetCorrectorIcone5 = MCJetCorrectionService {}

  include "RecoBTag/PerformanceMeasurements/data/JetPartonAssoc.cff"
  sequence jetPartonAssoc = {caloJetCollectionClone, tagJet}
  include "RecoBTag/PerformanceMeasurements/data/PerformanceAnalyzer.cff"
  replace Performance.outputFile = "results_muoninjet.root"
  # the following line is needed for RECO samples
  #replace Performance.GenJets = "iterativeCone5GenJets"
  # use the next line if you want to use HepMC collection for flavor ID
  #replace Performance.flavourMatchOption = "hepMC"

  ### MODIFIED TRACKCOUNTING, removed muons ###
  module modifiedjetTracksAssociator = jetTracksAssociator from "RecoBTau/JetTracksAssociator/data/jetTracksAssociator.cfi"
  replace modifiedjetTracksAssociator.RemoveMuonTrks = true
  module modifiedimpactParameterTagInfos = impactParameterTagInfos from "RecoBTag/ImpactParameter/data/impactParameter.cfi"
  replace modifiedimpactParameterTagInfos.jetTracks = "modifiedjetTracksAssociator"
  module modifiedtrackCountingTagInfos = trackCountingTagInfos from "RecoBTag/TrackCounting/data/trackCounting.cfi"
  module modifiedtrackCountingHighEffJetTags = trackCountingHighEffJetTags from "RecoBTau/JetTagProducer/data/trackCountingHighEffJetTags.cfi"
  replace modifiedtrackCountingHighEffJetTags.tagInfo = "modifiedimpactParameterTagInfos"
  module modifiedtrackCountingHighPurJetTags = trackCountingHighPurJetTags from "RecoBTau/JetTagProducer/data/trackCountingHighPurJetTags.cfi"
  replace modifiedtrackCountingHighPurJetTags.tagInfo = "modifiedimpactParameterTagInfos"
 

  # CSA07 EVENT WEIGHTS 
  module csaweightproducer = CSA07EventWeightProducer {
    InputTag src = source

    # verbosity
    untracked bool talkToMe = true

    # overall luminosity normalization  (in pb-1)
    double overallLumi = 1000.
  }

  ### NEGATIVE TAGS
  include "RecoBTag/TrackProbability/data/negativeOnlyJetProbabilityComputer.cfi"
  include "RecoBTag/TrackProbability/data/positiveOnlyJetProbabilityComputer.cfi"
  include "RecoBTau/JetTagProducer/data/jetTagRecord.cfi"
  include "RecoBTag/ImpactParameter/data/impactParameter.cff"
  include "RecoBTag/TrackCounting/data/trackCounting3D3rd.cfi"
  include "RecoBTag/TrackCounting/data/trackCounting3D2nd.cfi"


  module jetProbabilityJetTagsNegativeOnly =  JetTagProducerImpactParameter 
     { 
       InputTag tagInfo = impactParameterTagInfos
       string jetTagComputer = "negativeOnlyJetProbability"
      }
  
  module jetProbabilityJetTagsPositiveOnly =  JetTagProducerImpactParameter 
     { 
       InputTag tagInfo = impactParameterTagInfos
       string jetTagComputer = "positiveOnlyJetProbability"
      }



    es_module negativeTrackCounting3D2nd = NegativeTrackCountingESProducer {
	string ComponentName = "negativeTrackCounting3D2nd"
	PSet JetTagComputerPSet = {
	    int32 nthTrack = 2
	    int32 impactParamterType = 0
        }
    }
    
    module negativeTrackCounting2ndTrck =  JetTagProducerImpactParameter
    {
	InputTag tagInfo = impactParameterTagInfos
	string jetTagComputer = "negativeTrackCounting3D2nd"
    }
    
    es_module negativeTrackCounting3D3rd = NegativeTrackCountingESProducer {
	string ComponentName = "negativeTrackCounting3D3rd"
	PSet JetTagComputerPSet = {
	    int32 nthTrack = 3
	    int32 impactParamterType = 0
        }
    }
    
    module negativeTrackCounting3rdTrck =  JetTagProducerImpactParameter
    {
	InputTag tagInfo = impactParameterTagInfos
	string jetTagComputer = "negativeTrackCounting3D3rd"
    }
    
    module out = PoolOutputModule {
      untracked string fileName = "testtt.root"
      untracked vstring outputCommands = { 
	"drop *",
	"keep recoJetTags_*_*_*"
      }
    }
sequence modifiedbtagging = {modifiedjetTracksAssociator, modifiedimpactParameterTagInfos,modifiedtrackCountingHighEffJetTags,  modifiedtrackCountingHighPurJetTags}

  # enable next line if you want to apply weights to histograms and store them in the ntuple
  replace Performance.WeightHistograms = true
  replace Performance.StoreWeightsInNtuple = true
  

  path p = {
       MCJetCorJetIcone5,
       #trackCountingJetTags,
       #trackProbabilityJetTags,
       modifiedbtagging,
       impactParameterTagInfos,
       jetProbabilityJetTagsNegativeOnly,
       jetProbabilityJetTagsPositiveOnly,
       negativeTrackCounting2ndTrck,
       negativeTrackCounting3rdTrck,
       jetPartonAssoc,
       csaweightproducer,
       Performance
       #OUTPut
  }
	endpath output = { out }		
}
