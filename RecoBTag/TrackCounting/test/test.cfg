#! /bin/env cmsRun

process test1 = {
 
    # input file
    source = PoolSource {
        untracked vstring fileNames = { 
'/store/RelVal/2007/4/10/RelVal131BJets50-120/0000/9C7A9AC8-BBE7-DB11-AEB2-00304885A75C.root',
'/store/RelVal/2007/4/10/RelVal131BJets50-120/0000/F4722BC6-31E8-DB11-88B2-000E0C4D361C.root'
     }
	  untracked int32 maxEvents = 20 
    }

include 'Configuration/EventContent/data/EventContent.cff'
    module RECO = PoolOutputModule {
       untracked string fileName = 'file:Reco.root'
        using FEVTSIMEventContent
    }
    
    replace RECO.outputCommands += 'drop  recoJetTags_trackCountingJetTags__RECO130'
    replace RECO.outputCommands += 'drop  recoTrackCountingTagInfos_trackCountingJetTags__RECO130'
    replace RECO.outputCommands += 'drop  recoJetTags_trackCountingJetTags__Test'
    replace RECO.outputCommands += 'drop  recoTrackCountingTagInfos_trackCountingJetTags__Test'
   
    replace RECO.outputCommands += 'drop *_*_*_Rec'     # for PU_QCD
#   replace RECO.outputCommands += 'drop *_*_*_Test'     # for PU_QCD
    replace RECO.outputCommands += 'keep *_*_*_test1'     # for PU_QCD
  replace RECO.outputCommands += 'keep recoCaloJets_iterativeCone5CaloJets__*'
  replace RECO.outputCommands += 'keep TrackingRecHitsOwned_ctfWithMaterialTracks__*'
  replace RECO.outputCommands += 'keep Trajectorys_ctfWithMaterialTracks__*'
  replace RECO.outputCommands += 'keep recoTrackExtras_ctfWithMaterialTracks__*'
  replace RECO.outputCommands += 'keep recoTracks_ctfWithMaterialTracks__*'
  replace RECO.outputCommands += 'keep recoCaloJetsrecoTracksuintedmOneToManyedmAssociationMap_jetTracksAssociator__*'

    replace RECO.outputCommands += SimG4CoreFEVT.outputCommands
    replace RECO.outputCommands += SimTrackerFEVT.outputCommands
    replace RECO.outputCommands += SimMuonFEVT.outputCommands
    replace RECO.outputCommands += SimCalorimetryFEVT.outputCommands
    replace RECO.outputCommands += RecoGenJetsFEVT.outputCommands


    # Message Logger
#    include "FWCore/MessageLogger/data/MessageLogger.cfi"
 #   replace MessageLogger.cout.threshold = "INFO"
  
  service = MessageLogger
  {
  untracked vstring destinations   = { "debugmessages.txt" }
  untracked vstring categories     = { "BTagTools" }
  untracked vstring debugModules   = { "trackCountingJetTags" }
  untracked PSet debugmessages.txt = { untracked string threshold = "DEBUG"
                                       untracked PSet INFO            = { untracked int32 limit = 0 }
                                       untracked PSet DEBUG           = { untracked int32 limit = 0 }
                                       untracked PSet BTagTools       = { untracked int32 limit = 10000000}
                                     }
  }


     # Magnetic Field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

    include "TrackingTools/TransientTrack/data/TransientTrackBuilder.cfi" 
 #    include "RecoVertex/PrimaryVertexProducer/data/OfflinePrimaryVerticesFromCTFTracks.cff"


#    include "RecoBTag/TrackCounting/data/trackCounting.cff"
#    include "RecoBTau/JetTracksAssociator/data/jetTracksAssociator.cff"

   module trackCountingJetTags = TrackCounting {
      string jetTracks = "jetTracksAssociator"
      string primaryVertex = "offlinePrimaryVerticesFromCTFTracks"
      PSet AlgorithmPSet =  {
         int32    NthTrack = 2
         int32    ImpactParamterType = 0
         int32    MinimumNumberOfPixelHits = 2
         int32   MinimumNumberOfHits = 8
         double MaximumTransverseImpactParameter = 0.2
         double MinimumTransverseMomentum = 1.0
         double MaximumDecayLength = 5.0
         double MaximumChiSquared = 5.0
         double MaximumLongitudinalImpactParameter = 170.0
         double MaximumDistanceToJetAxis = 0.07
       }
    }
        module tkcnt = TrackCountingAnalyzer {
	    }

    module trackCountingJetTagsJTP = TrackCountingJetTagProducer {
       InputTag tagInfo = trackCountingJetTags
    }

#include "RecoBTag/TrackProbability/data/trackProbability.cfi"
#replace trackProbabilityJetTags.UseDB = false
	    
    # module execution


   # path p = {trackProbabilityJetTags,    trackCountingJetTags , tkcnt , trackCountingJetTagsJTP }
    path p = {trackCountingJetTags , tkcnt  }
     endpath outpath = { RECO }
}
