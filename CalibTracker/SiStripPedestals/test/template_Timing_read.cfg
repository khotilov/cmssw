process Test = {

        source = EmptySource {
				untracked int32 maxEvents = 1
				untracked uint32 firstRun = 1 	
				untracked uint32 numberEventsInRun = 1
			     }

	service = MessageLogger {
		untracked vstring destinations = { "insert_workdir/insert_logfile" }
		untracked PSet insert_logfile = { untracked string threshold = "INFO" }
	}

	service = Timing {}


	es_source = PoolDBESSource { 
#ped                       VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "mytest_p" }}
#noise                     VPSet toGet = {{ string record = "SiStripNoisesRcd"    string tag = "mytest_n" }}
#pednoise                  VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "mytest_p" }, { string record = "SiStripNoisesRcd" string tag = "mytest_n" }}

                                bool   loadAll = true
	                        string connect = "sqlite_file:insert_dbfile"    
	              untracked string catalog = "file:insert_dbcatalog"
                      string timetype = "runnumber" 
   		      untracked uint32 messagelevel = 3
#blob		      untracked bool loadBlobStreamer = true	
                    }

#ped              module prod =  SiStripPedestalsReader {
#noise            module prod =  SiStripNoisesReader {
#pednoise    	  module prod =  SiStripPedestalsNoisesReader {
	      		untracked string userEnv="me"
		      	untracked string passwdEnv="me"
#debug             	untracked bool   printDebug = true
	}

      path p = { prod }

	module print = AsciiOutputModule {}
	endpath ep = { print }
}