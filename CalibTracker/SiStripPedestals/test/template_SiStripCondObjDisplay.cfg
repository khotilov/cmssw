process TEST = {


   service = MessageLogger
   {
      untracked vstring destinations =  {"cout"}
      untracked PSet cout   =  { untracked string threshold = "INFO" }
   }

#++++++++++++
#Geometry
#++++++++++++

#geom_mtcc	
include "Geometry/CMSCommonData/data/cmsMTCCGeometryXML.cfi"

#geom_ideal	
#include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

#+++++++++++++++++++++++++++++++

es_module = TrackerGeometricDetESModule {}
es_module = TrackerDigiGeometryESModule {}



es_source = PoolDBESSource { 
	                  VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "SiStripPedestals_v1" }, { string record = "SiStripNoisesRcd" string tag = "SiStripNoises_v1" }, { string record = "SiStripFedCablingRcd" string tag = "SiStripFedCabling_v1" }}

#	                  VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "SiStripPedestals_v1" }, { string record = "SiStripNoisesRcd" string tag = "SiStripNoises_v1" }}

#	                  VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "mytest_p" }, { string record = "SiStripNoisesRcd" string tag = "mytest_n" }}


              bool loadAll = true
              string connect = "sqlite_file:insert_DBfile"
	      untracked string catalog = "file:insert_DBcatalog" 
              string timetype = "runnumber" 
              untracked uint32 messagelevel = 3
	      untracked bool loadBlobStreamer = true
            }


# produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
   es_module sistripconn = SiStripConnectivity {}


source = EmptySource {
			untracked int32 maxEvents = 1
			untracked uint32 firstRun = insert_runNb 
			untracked uint32 numberEventsInRun = 1
	}


module Display =  SiStripCondObjDisplay {
        untracked int32 VerbosityLevel = 1

           bool UseCalibDataFromDB = true


        double ElectronPerAdc      = 313.0 
        double EquivalentNoiseCharge300um = 2160.
        double BadStripProbability = 0.0
        uint32  PedestalValue      = 30
        double  LowThValue         =  2
        double  HighThValue        =  5

	string fileName = "insert_output_filename"
	string psfileName = "insert_ps_filename"
	int32 psfiletype = 121


    PSet TH1PedestalsProfile = {
			 	int32 Nbinx = 768	
				double xmin =  -0.5
				double xmax = 767.5
				}	

    PSet TH1NoisesProfile = {
			 	int32 Nbinx = 768	
				double xmin = -0.5
				double xmax = 767.5  
				}	

    PSet TH1BadStripsProfile = {
			 	int32 Nbinx = 768	
				double xmin = -0.5
				double xmax = 767.5.  
				}	

           PSet TH1Noises = {
			 	int32 Nbinx =  50	
				double xmin =   0.
				double xmax =  10.
				}	
           PSet TH1BadStrips = {
			 	int32 Nbinx =  2	
				double xmin = -0.5
				double xmax =  1.5
				}	
}

module AsciiOutput = AsciiOutputModule {}

path p = { Display }
endpath e = { AsciiOutput } 
}

