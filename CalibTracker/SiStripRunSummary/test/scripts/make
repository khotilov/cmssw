#! /usr/bin/env bash

#  Simplifies makeing some project. Put in working directory Makefile_<module>
#+ and make symbolic link to given script of the form:
#+   <arbitrary name>_<module>
#+ e.g.:
#+   1) gedit Makefile_tools
#+   2) ln -s <path>/make.sh make
#+   3) ln -s ./make make_tools
#+ script will automatically use needed Makefile /Makefile_tools in example/. 

#+ Acceptable Arguments:
#+   value  value will be used with Makefile:
#+             gmake Makefile_<suffix> <value>
#+   *      make all:
#+            - clean
#+            - shared
#+            - make vith empty value
#+ [By default no libraries compiled]

#  Requirements:
#    - works only with soft links

#  Author  : Samvel Khalatian (ksamdev at gmail dot com)
#  Date    : 06/06/06
#  Modified: 09/29/06

declare -r  nERR_COMPILE_LIBS=65
declare -r       nERR_COMPILE=66
declare -r nERR_NOT_SOFT_LINK=67
declare -r   nERR_NO_MAKEFILE=68

declare -r cDELIMETER="_"

cModule=`basename $0`
nError=0

if [[ -h $cModule ]]; then
  if [[ 0 != `expr index "$cModule" "$cDELIMETER"` ]]; then
    cModule=${cModule#*$cDELIMETER} 
    [[ -n $cModule ]] && cModule=$cDELIMETER$cModule
  else
    cModule=""
  fi

  cArgument=""
  cMakefile="Makefile${cModule}"

  if [[ -e $cMakefile ]]; then
    if [[ -n $1 ]]; then
      # Check if make everything was specified
      if [[ "all" == $1 ]]; then
    # Remove Shared Libraries
    make -f Makefile$cModule clean

	# Make Shared Libraries
	make -f Makefile$cModule shared

	if [[ 0 -ne $? ]]; then
	  echo "[error] Shared Libraries compilation faild" >&2
	  nError=$nERR_COMPILE
	fi
      else
	# Make program with given parameter
	cArgument=$1
      fi
    fi
  else
    echo "[error] '${cMakefile}' does not exist" >&2
    nError=$nERR_NO_MAKEFILE
  fi

  [[ 0 == $nError ]] && {
    # Make program
    make -f Makefile$cModule $cArgument
    [[ 0 != $? ]] && {
      nError=$nERR_COMPILE
      echo "[error] Compilation failed" >&2
    }
  }
else
  echo "[error] Only soft links to a given script should be used" >&2
  nError=$nERR_NOT_SOFT_LINK
fi

exit $nError
