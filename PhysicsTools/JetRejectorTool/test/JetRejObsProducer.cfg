process MYTEST  = {


   # input file
 #    source = PoolSource {
 #    untracked vstring fileNames = 
  #   {
#"/store/mc/2007/4/12/ttbar_gen_rec_allReco/0001/240F6302-97ED-DB11-94DA-0015C5E6B6CE.root"
#    }

#     untracked int32   maxEvents = 1500
#     untracked uint32 skipEvents = 0
 #   }

    include "PhysicsTools/JetRejectorTool/test/RecoInput.cfi"   #to adapt	
    replace PoolSource.maxEvents = 100
#   replace PoolSource.skipEvents =  0	

    # initialize MessageLogger
     include "FWCore/MessageLogger/data/MessageLogger.cfi"
     replace MessageLogger.cout.threshold = "ERROR"	//can be changed to "DEBUG" to see more output on the screen


     module seljets = Jet_default_sel{
          InputTag genjetsrc = iterativeCone5GenJets
          InputTag calojetsrc = iterativeCone5CaloJets
          InputTag jettagsrc = trackCountingJetTags 
          double jetEnergycut  = 5
          double jetNConstMin = 1
       }

     module JRobs = JetRejObsProducer{
#         InputTag selgenjetsrc = iterativeCone5GenJets
          InputTag selgenjetsrc = seljets
          InputTag selcalojetsrc = seljets 
          InputTag seljettagsrc =  seljets
	  double  jetNumNoRad  = 4.0
          double leptonIsolation = 0.2
          double DeltaRcut  = 0.3
	  uint32 signalDefinition = 1 // 1: partons, 2: GenJets, 3: PartonJets (only since CMSSW_1_5_0; not available in 1_3_1)
          }


   # define an output file and drop everything that you don't want. 
   # Make sure to KEEP your producer output
      module MyOutputModule = PoolOutputModule { 
          untracked string fileName = "JetRejObsProducer.root" 
          untracked vstring outputCommands = {
            "drop *",
            "keep recoCaloJets_*_*_*",
            "keep recoGenJets_*_*_*",
            "keep recoJetTags_*_*_*",
            "keep recoCandidatesOwned_*_*_*",
            "keep recoVertexs_*_*_*",
            "keep *_*_*_MYTEST"
          }
        }

 
# tell the framework to produce the objects
  path producer = { seljets, JRobs }

# and save everything
  endpath end = { MyOutputModule }   
}


 		
   # path of modules that will be executed (in this case only one)
 #    path p = { seljets}
   
}	

