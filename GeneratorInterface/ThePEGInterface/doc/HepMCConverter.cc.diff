14,25c14,35
< #include "HepMCConverter.h"
< #include "ThePEG/StandardModel/StandardModelBase.h"
< #include "ThePEG/Repository/EventGenerator.h"
< #include "ThePEG/EventRecord/Particle.h"
< #include "ThePEG/EventRecord/StandardSelectors.h"
< #include "ThePEG/EventRecord/Collision.h"
< #include "ThePEG/EventRecord/Step.h"
< #include "ThePEG/EventRecord/SubProcess.h"
< #include "ThePEG/Handlers/XComb.h"
< #include "ThePEG/Handlers/EventHandler.h"
< #include "ThePEG/PDF/PartonExtractor.h"
< #include "ThePEG/PDF/PDF.h"
---
> // C. Saout: Copied from ThePEG and slightly modified
> 
> #include <set>
> 
> #include <HepMC/GenEvent.h>
> #include <HepMC/GenVertex.h>
> #include <HepMC/GenParticle.h>
> #include <HepMC/Polarization.h>
> 
> #include <ThePEG/StandardModel/StandardModelBase.h>
> #include <ThePEG/Repository/EventGenerator.h>
> #include <ThePEG/EventRecord/Particle.h>
> #include <ThePEG/EventRecord/StandardSelectors.h>
> #include <ThePEG/EventRecord/Collision.h>
> #include <ThePEG/EventRecord/Step.h>
> #include <ThePEG/EventRecord/SubProcess.h>
> #include <ThePEG/Handlers/XComb.h>
> #include <ThePEG/Handlers/EventHandler.h>
> #include <ThePEG/PDF/PartonExtractor.h>
> #include <ThePEG/PDF/PDF.h>
> 
> #include "GeneratorInterface/ThePEGInterface/interface/HepMCConverter.h"
89d98
<   tcEHPtr eh;
94,96d102
<     Traits::setScaleAndAlphas(*geneve, eh->lastScale(),
< 			      eh->SM().alphaS(eh->lastScale()),
< 			      eh->SM().alphaEM(eh->lastScale()), energyUnit);
102a109
>   sortTopologically(all);
171a179,183
>   // Add the vertices.
>   for ( typename GenVertexMap::iterator it = vmap.begin();
> 	it != vmap.end(); ++it )
>     Traits::addVertex(*geneve, it->second);
> 
182,185d193
<   // Then add the rest of the vertices.
<   for ( typename GenVertexMap::iterator it = vmap.begin();
< 	it != vmap.end(); ++it )
<     Traits::addVertex(*geneve, it->second);
192,193d199
<   PdfInfo * pdf = createPdfInfo(ev);
<   Traits::setPdfInfo(*geneve,*pdf);
200c206,212
<   if ( !p->children().empty() || p->next() ) status = 2;
---
>   if ( !p->children().empty() || p->next() ) {
>     tStepPtr step = p->birthStep();
>     if ((!step || step && (!step->handler() || step->handler() == eh)) && p->id() != 82)
>       status = 3;
>     else
>       status = 2;
>   }
297a310,338
> template<typename HepMCEventT, typename Traits>
> void HepMCConverter<HepMCEventT, Traits>::sortTopologically(tcPVector &all)
> {
>   // order the particles topologically
>   std::set<tcPPtr> visited;
>   for(unsigned int head = 0; head < all.size(); head++) {
>     bool vetoed = true;
>     for(unsigned int cur = head; cur < all.size(); cur++) {
>       vetoed = false;
>       for(tParticleVector::const_iterator iter =
>         all[cur]->parents().begin();
>         iter != all[cur]->parents().end(); ++iter) {
>           if (visited.find(*iter) == visited.end()) {
>             vetoed = true;
>             break;
>           }
>         }
>       if (!vetoed) {
>         if (cur != head)
>           std::swap(all[head], all[cur]);
>         break;
>       }
>     }
>     visited.insert(all[head]);
>   }
>   visited.clear();
> }
> 
> template class ThePEG::HepMCConverter<HepMC::GenEvent>;
