#!/usr/bin/perl -w
#
# Created by: Shahram Rahatlou
#             University of Rome & INFN
#             11 September 2006
#  $Id: addpkg,v 1.4 2007/04/17 10:08:07 rahatlou Exp $
#
use strict;
use Getopt::Long;
use Cwd;

my $file;
my $doHelp;
my $pkgquery;
my $tc; # tag collector format: <package> <tag>

GetOptions("file|f=s" => \$file,
           "query|q" => \$pkgquery,
           "help|h" => \$doHelp);

#-- main start here

if( defined $doHelp )   {  usage(); }

# make sure cvs is setup
unless(defined $ENV{"CVSROOT"} ) {
  die "CVS not set. Do |project CMSSW| first\n";
}

die "CMSSW_RELEASE_BASE not defined! run scramv1 first!\n" unless defined $ENV{CMSSW_RELEASE_BASE};

# this is our release
die "CMSSW_VERSION not` defined! run scramv1 first!\n" unless defined $ENV{CMSSW_VERSION};
my $relver = $ENV{CMSSW_VERSION};

my $taglist = "$ENV{CMSSW_RELEASE_BASE}/src/PackageList.cmssw";

# addpkg <package> : use default tag for the release - 1 argument
# addpkg <package> <tag>: use tag provided by user. simple cvs co - 2 arguments
if(($#ARGV == 0)||($#ARGV == 1)) {
  my $package = $ARGV[0];
  die "Bad package. You must use Subsystem/Package format\n" unless $package =~ m#(.*)/(.*)#;

  my $tagrel = ""; my $tagco = ""; my $tagaction = "";
  # Get the release tag if the user has not provided a tag or if the user
  # is querying the release tag
  if ($#ARGV == 0 || (defined $pkgquery)) {
    #print "package: <$package> tag list: <$taglist>\n";
    open IN, "$taglist";
    my $l2="";
    while(my $l = <IN>) {
      chomp $l;
      if($l =~ m#$package#) { $l2 = $l; last; }
    }
    close IN;
    die "No package <$package> found in the release.\n" if($l2 eq "");
    my @v1 = split '\s+', $l2;
    $tagrel = $v1[1];
  }
  if ($#ARGV == 1) {
    $tagco = $ARGV[1];   # user provided tag
    $tagaction = "specified";
  } else {
    $tagco = $tagrel;    # using release tag
    $tagaction = "release";
  }
  if (!defined $pkgquery) { 
     system("cvs co -r $tagco $package"); 
     print STDOUT "Checked out $tagaction tag $tagco for package $package\n";
  } else {
     print STDOUT "Release $relver has tag $tagrel for package $package\n";
  }
  exit 0;
}

# addpkg -f file: checkout tags provided in the file
unless(defined $file) {
  die "no tags provided. use -f <file> or see --help\n";
}

# make sure file exists
unless(-f $file) {
  die "file <$file> does not exist\n";
}

# read in packages and tags from file
my %tags;
open IN, "<$file";
while(my $line = <IN>) {
  chomp $line;

  my ($tag, $package);
  ($package,$tag) = split '\s+', $line;
  if($tag =~ m#(.*)/(.*)#) { # exchange tag w/ package
    my $tt = $tag;
    $tag = $package;
    $package = $tt;
  }
  $tags{$package} = $tag;

  # run the cvs command
  my $cmd = "cvs co -r $tag $package";
  if(defined $pkgquery) {
    print STDOUT "$cmd\n";
  } else {
    system("$cmd");
  }

}
exit 0;
# -- main ends here

#-----------
sub usage {
#-----------
print STDOUT <<ENDHELP;
addpkg [option]

  usage:      --help|-h          Print this message
              --query|-q         Determine the tag used in the release and 
                                 print it. Do not run the actual cvs command. 
              --file|-f <file>   Checkout tags in <file>. Each line must 
                                 contain one tag and one package

  Typical use of addpkg:
      addpkg <package>       : Checkout tag of <package> used in the release
      addpkg <package> <tag> : Checkout the specified tag <tag>. Same as 
                               cvs co -r <tag> <package>
      addpkg -f <file>       : Checkout packages provided in <file>. Supports 
                               both formats:
                                 <package> <tag>
                                   or
                                 <tag> <package>

ENDHELP
exit 0;
}
