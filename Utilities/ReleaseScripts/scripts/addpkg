#!/usr/bin/perl -w
#
# Created by: Shahram Rahatlou
#             University of Rome & INFN
#             11 September 2006
#  $Id: $
#
use strict;
use Getopt::Long;
use Cwd;


my $file;
my $doHelp;
my $quiet;
my $tc; # tag collector format: <package> <tag>

GetOptions("file|f=s" => \$file,
           "quiet|q" => \$quiet,
           "help|h" => \$doHelp);

#-- main start here

if( defined $doHelp )   {  usage(); }

if(defined $quiet) {
  print STDOUT "--quiet: Will not execute the CVS commands.\n";
}

# make sure cvs is setup
unless(defined $ENV{"CVSROOT"} ) {
  die "CVS not set. Do |project CMSSW| first\n";
}

die "CMSSW_RELEASE_BASE not defined! run scramv1 first!\n" unless defined $ENV{CMSSW_RELEASE_BASE};

# this is our release
die "CMSSW_VERSION not` defined! run scramv1 first!\n" unless defined $ENV{CMSSW_VERSION};
my $relver = $ENV{CMSSW_VERSION};

my $taglist = "$ENV{CMSSW_RELEASE_BASE}/src/PackageList.cmssw";

# addpkg <package> : use default tag for the release
if(@ARGV == 1) {
  my $package = $ARGV[0];
  die "Bad package. You must use Subsystem/Package format\n" unless $package =~ m#(.*)/(.*)#;

  #print "package: <$package> tag list: <$taglist>\n";
  open IN, "$taglist";
  my $l2="";
  while(my $l = <IN>) {
    chomp $l;
    if($l =~ m#$package#) { $l2 = $l; last; }
  }
  close IN;
  die "No package <$package> found in the release.\n" if($l2 eq "");
  my @v1 = split '\s+', $l2;
  my $tag1 = $v1[1];
  unless(defined $quiet) { system("cvs co -r $tag1 $package"); }
  print STDOUT "Checked out tag $tag1 for package $package\n";
  exit 0;
}


# addpkg <package> <tag>: use tag provided by user. simple cvs co
if(@ARGV == 2) {
  my $package = $ARGV[0];
  die "Bad package. You must use Subsystem/Package format\n" unless $package =~ m#(.*)/(.*)#;

  my $tag1 = $ARGV[1];
  unless(defined $quiet) { system("cvs co -r $tag1 $package"); }
  print STDOUT "Checked out tag $tag1 for package $package\n";
  exit 0;
}

# addpkg -f file: checkout tags provided in the file
unless(defined $file) {
  die "no tags provided. use -f <file> or see --help\n";
}

# make sure file exists
unless(-f $file) {
  die "file <$file> does not exist\n";
}

# read in packages and tags from file
my %tags;
open IN, "<$file";
while(my $line = <IN>) {
  chomp $line;

  my ($tag, $package);
  ($package,$tag) = split '\s+', $line;
  if($tag =~ m#(.*)/(.*)#) { # exchange tag w/ package
    my $tt = $tag;
    $tag = $package;
    $package = $tt;
  }
  $tags{$package} = $tag;

  # run the cvs command
  my $cmd = "cvs co -r $tag $package";
  if(defined $quiet) {
    print STDOUT "$cmd\n";
  } else {
    system("$cmd");
  }

}
exit 0;
# -- main ends here

#-----------
sub usage {
#-----------
print STDOUT <<ENDHELP;
addpkg [option]

  usage:      --help|-h          print this message
              --quiet|-q         do not run the actual cvs command. simple printout
              --file|-f <file>   checkout tags in <file>. Each line must contain one tag and one package

  Typical use of addpkg:
      addpkg <package>       : checkout default tag of <package> in the release
      addpkg <package> <tag> : checkout the tag <tag>. Same as cvs co -r <tag> <package>
      addpkg -f <file>       : checkout packages provided in <file>. Supports both formats
                               <package> <tag>
                                 or
                               <tag> <package>

ENDHELP
exit 0;
}
