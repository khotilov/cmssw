#!/usr/bin/perl -w
#
# Created by: Shahram Rahatlou
#             University of Rome & INFN
#             23 Feb 2006
#
use strict;
use Getopt::Long;
use Cwd;

my $doCVS;
my $doDiff;
my $doHelp;
my $tagCollector;
GetOptions("check|c" => \$doCVS,
           "diff|d" => \$doDiff,
           "tagCollector|t" => \$tagCollector,
           "help|h" => \$doHelp);

#-- main start here

if( defined $doHelp )   {  usage(); }

# if asking for diff then CVS check is forced
if(defined $doDiff) { $doCVS = 1; }

my @subsys;
my @packages;
my $curr = cwd();
my %tagMap;

die "CMSSW_BASE not defined! run scramv1 first!\n" unless defined $ENV{CMSSW_BASE} ;
my $maindir = "$ENV{CMSSW_BASE}/src";
chdir "$maindir" or die "could not change directory to $maindir!\n";

die "CMSSW_RELEASE_BASE not defined! run scramv1 first!\n" unless defined $ENV{CMSSW_RELEASE_BASE};
my @v1 = split('/',$ENV{CMSSW_RELEASE_BASE});
my $nlast = @v1;

# this is our release
my $relver = $v1[$nlast-1];

print STDOUT "Test Release based on: $relver\n";
print STDOUT "Production release in: $ENV{CMSSW_RELEASE_BASE}\n";
print STDOUT "Your Test release in: $ENV{CMSSW_BASE}\n";

if(defined $doCVS) {
   print STDOUT "checking for differences for each package wrt tag $relver\n";
}

if(defined $doDiff) {
   print STDOUT "doing |cvs diff -r $relver| for all modified files\n";
}


my $c2 = cwd();
#print STDOUT "current directory: $c2\n";

# now get the list of subsystems
my @f1 = `ls`;

if(defined $tagCollector) {
  printf '%-40s %s', "-------- Package --------", "--- Tag ---\n";
} else {
  printf '%-14s %s', "--- Tag ---", "---------- Package ----------\n";
}

for my $f (@f1) {
  chomp($f);
  chdir("$maindir");
  if( -d $f && ($f ne "CVS") ) { 
    push @subsys, $f;
    chdir("$f");
    # list of packages in subystem
    my @f2 = `ls`;
    for my $ff (@f2) {
      chomp($ff);
      if(-d $ff && ($ff ne "CVS") ) {
        my $pack = "$f/$ff";
        push @packages, "$pack";
        my $tag = "NoCVS";
        if(-d "$ff/CVS" ) {
          my $tagfile = "$ff/CVS/Tag";
          if(-f $tagfile) { $tag = `cat $tagfile`; chomp($tag); $tag = substr($tag,1,1000);} # use exisiting tag
          else {            $tag = "NoTag"; }                                                # no tag available
        }
        #print "package: $pack\ttag: $tag\n";
        if(defined $tagCollector) {
          printf '%-40s %s',"$pack", "$tag\n";
        } else {
          printf '%-14s %s', $tag, "$pack\n";
        }

        $tagMap{"$pack"} = $tag;
        my $ocvs = "";

        # check against release version
        my @filesToDiff; # files to diff with CVS
        my @newFiles;    # files not in repo

        if( (defined $doCVS) && ($tag ne "NoTag") && ($tag ne "NoCVS") ) {

           #print STDOUT "-------- cvs diff : begin ---------\n";
           open CL, "cvs -n update -r $tag $ff 2>&1 |";
           while(my $l = <CL>) {
             chomp($l);
             next if($l =~ /^kserver/);
             print STDOUT "  $l\n";
             if($l =~ /M (.*)/) { push @filesToDiff, $1;}
             if($l =~ /\? (.*)/) { push @newFiles, $1;}
           }
           close CL;
           #print STDOUT "-------- cvs diff : end   ---------\n";
           my $ndiff = @filesToDiff;
           my $nnew = @newFiles;
           #if( $ndiff>0 ) { print STDOUT "Files modified: $ndiff\n"; }
           #if( $nnew>0 ) { print STDOUT "New files: $nnew\n"; }
        }

        # diff with CvS if requested
        if( (defined $doDiff) && (@filesToDiff>0) ) {
          #print STDOUT "running cvs diff -ub -r $relver\n";
          for my $nf ( @filesToDiff ) {
            open D, "cvs diff -ub -r $relver $nf 2>&1|";
            while(my $l = <D>) {
              chomp $l;
              next if($l =~/^kserver/);
              print STDOUT "$l\n";
            }
          }
          close D;
        }
      }
    }
  }

}
my $nsys = @packages;
print "---------------------------------------\n";
print STDOUT "total packages: $nsys\n";

# go back to user's initial directory
chdir $curr;

# -- main ends here

#-----------
sub usage {
#-----------
print STDOUT <<ENDHELP;
showtags [--check|-c] [--diff|-d] [--help|-h]

  usage:      --help|-h    print this message
              --check|-c   check for differences wrt tag in the release
              --diff|-d    do cvs diff with tag in the release
              --tagCollector|-t print "package   tag" instead of default "tag   package"

ENDHELP
exit 0;
}


