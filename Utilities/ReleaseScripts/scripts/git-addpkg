#!/bin/sh -ex
# Mimics addpkg behavior in git.
if [ $# -gt 2 ]; then
  echo Too many arguments
  exit 1
fi
if [ $# -lt 1 ]; then
  echo Not enough arguments
  exit 1
fi

if [ "X$#" == X1 ]; then
  CMSSW_TAG=$CMSSW_VERSION
else
  CMSSW_TAG=$2
fi

PKG_NAME="$1"

mkdir -p $CMSSW_BASE/src
cd $CMSSW_BASE/src
if [ ! -d "$CMSSW_BASE/src/.git" ]; then
  # If we have a reference repository, use it by copying locally all the files.
  if [ ! "X$CMSSW_REFERENCE" = X ]; then
    mkdir -p $CMSSW_BASE/src/.git
    rsync -a $CMSSW_REFERENCE/ $CMSSW_BASE/src/.git/
    touch $CMSSW_BASE/src/.git/info/sparse-checkout
    git config --local --bool core.sparsecheckout true
    git config --local --bool core.bare false
  else
    git init
  fi
fi
git config remote.cmssw-main.url git@github.com:cms-sw/cmssw.git
git config remote.cmssw-main-ro.url https://github.com/cms-sw/cmssw.git
git config core.sparsecheckout true
touch $CMSSW_BASE/src/.git/info/sparse-checkout
cp -f $CMSSW_BASE/src/.git/info/sparse-checkout $CMSSW_BASE/src/.git/info/sparse-checkout-new
echo $PKG_NAME >> $CMSSW_BASE/src/.git/info/sparse-checkout-new
cat .git/info/sparse-checkout-new | sort -u > $CMSSW_BASE/src/.git/info/sparse-checkout
if [ ! "X$CMSSW_MIRROR" = X ]; then
  git remote set-url cmssw-main-ro $CMSSW_MIRROR
  git fetch --tags $CMSSW_MIRROR
  git remote set-url cmssw-main-ro https://github.com/cms-sw/cmssw.git
fi
git fetch --tags cmssw-main-ro
git read-tree -mu HEAD
git stash save
git reset --hard $CMSSW_TAG
CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`
git rebase ORIG_HEAD
git stash apply
