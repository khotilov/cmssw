#ifndef ddNNEB_h
#define ddNNEB_h

class ddNNEB { 
public:
   ddNNEB() {}
   ~ddNNEB() {}
   double Value(int index,double in0,double in1,double in2,double in3,double in4,double in5,double in6,double in7);
   double Value(int index, double* input);
private:
   double input0;
   double input1;
   double input2;
   double input3;
   double input4;
   double input5;
   double input6;
   double input7;
   double neuron0x4a46790();
   double neuron0x4a46ad0();
   double neuron0x4a46e10();
   double neuron0x4a47150();
   double neuron0x4a47490();
   double neuron0x4a477d0();
   double neuron0x4a47b10();
   double neuron0x4a47e50();
   double input0x4a482c0();
   double neuron0x4a482c0();
   double input0x4a486f0();
   double neuron0x4a486f0();
   double input0x4a48c30();
   double neuron0x4a48c30();
   double input0x4a49200();
   double neuron0x4a49200();
   double input0x4a49740();
   double neuron0x4a49740();
   double input0x4a49ac0();
   double neuron0x4a49ac0();
   double input0x4a4a000();
   double neuron0x4a4a000();
   double input0x4a4a540();
   double neuron0x4a4a540();
   double input0x4a4aa80();
   double neuron0x4a4aa80();
   double input0x4a4b2e0();
   double neuron0x4a4b2e0();
   double input0x4a4b790();
   double neuron0x4a4b790();
   double input0x4a4bd50();
   double neuron0x4a4bd50();
   double input0x4a4c310();
   double neuron0x4a4c310();
   double input0x4a4c8d0();
   double neuron0x4a4c8d0();
   double input0x4a4ce90();
   double neuron0x4a4ce90();
   double input0x4a4af10();
   double neuron0x4a4af10();
   double synapse0x49a7190();
   double synapse0x4a4f390();
   double synapse0x4a48570();
   double synapse0x4a485b0();
   double synapse0x4a485f0();
   double synapse0x4a48630();
   double synapse0x4a48670();
   double synapse0x4a486b0();
   double synapse0x4a48a30();
   double synapse0x4a48a70();
   double synapse0x4a48ab0();
   double synapse0x4a48af0();
   double synapse0x4a48b30();
   double synapse0x4a48b70();
   double synapse0x4a48bb0();
   double synapse0x4a48bf0();
   double synapse0x4a48f70();
   double synapse0x42a5e50();
   double synapse0x42a5e90();
   double synapse0x4a490c0();
   double synapse0x4a49100();
   double synapse0x4a49140();
   double synapse0x4a49180();
   double synapse0x4a491c0();
   double synapse0x4a49540();
   double synapse0x4a49580();
   double synapse0x4a495c0();
   double synapse0x4a49600();
   double synapse0x4a49640();
   double synapse0x4a49680();
   double synapse0x4a496c0();
   double synapse0x4a49700();
   double synapse0x4a49a80();
   double synapse0x4a466c0();
   double synapse0x4a4f3d0();
   double synapse0x42a4990();
   double synapse0x4a48fb0();
   double synapse0x4a48ff0();
   double synapse0x4a49030();
   double synapse0x4a49070();
   double synapse0x4a49e00();
   double synapse0x4a49e40();
   double synapse0x4a49e80();
   double synapse0x4a49ec0();
   double synapse0x4a49f00();
   double synapse0x4a49f40();
   double synapse0x4a49f80();
   double synapse0x4a49fc0();
   double synapse0x4a4a340();
   double synapse0x4a4a380();
   double synapse0x4a4a3c0();
   double synapse0x4a4a400();
   double synapse0x4a4a440();
   double synapse0x4a4a480();
   double synapse0x4a4a4c0();
   double synapse0x4a4a500();
   double synapse0x4a4a880();
   double synapse0x4a4a8c0();
   double synapse0x4a4a900();
   double synapse0x4a4a940();
   double synapse0x4a4a980();
   double synapse0x4a4a9c0();
   double synapse0x4a4aa00();
   double synapse0x4a4aa40();
   double synapse0x4193db0();
   double synapse0x4193df0();
   double synapse0x42bf760();
   double synapse0x42bf7a0();
   double synapse0x42bf7e0();
   double synapse0x42bf820();
   double synapse0x42bf860();
   double synapse0x42bf8a0();
   double synapse0x4a4b590();
   double synapse0x4a4b5d0();
   double synapse0x4a4b610();
   double synapse0x4a4b650();
   double synapse0x4a4b690();
   double synapse0x4a4b6d0();
   double synapse0x4a4b710();
   double synapse0x4a4b750();
   double synapse0x4a4bad0();
   double synapse0x4a4bb10();
   double synapse0x4a4bb50();
   double synapse0x4a4bb90();
   double synapse0x4a4bbd0();
   double synapse0x4a4bc10();
   double synapse0x4a4bc50();
   double synapse0x4a4bc90();
   double synapse0x4a4bcd0();
   double synapse0x4a4bd10();
   double synapse0x4a4c090();
   double synapse0x4a4c0d0();
   double synapse0x4a4c110();
   double synapse0x4a4c150();
   double synapse0x4a4c190();
   double synapse0x4a4c1d0();
   double synapse0x4a4c210();
   double synapse0x4a4c250();
   double synapse0x4a4c290();
   double synapse0x4a4c2d0();
   double synapse0x4a4c650();
   double synapse0x4a4c690();
   double synapse0x4a4c6d0();
   double synapse0x4a4c710();
   double synapse0x4a4c750();
   double synapse0x4a4c790();
   double synapse0x4a4c7d0();
   double synapse0x4a4c810();
   double synapse0x4a4c850();
   double synapse0x4a4c890();
   double synapse0x4a4cc10();
   double synapse0x4a4cc50();
   double synapse0x4a4cc90();
   double synapse0x4a4ccd0();
   double synapse0x4a4cd10();
   double synapse0x4a4cd50();
   double synapse0x4a4cd90();
   double synapse0x4a4cdd0();
   double synapse0x4a4ce10();
   double synapse0x4a4ce50();
   double synapse0x4a4d1d0();
   double synapse0x4a4d210();
   double synapse0x4a4d250();
   double synapse0x4a4d290();
   double synapse0x4a4d2d0();
   double synapse0x4a4d310();
   double synapse0x4a4d350();
   double synapse0x4a4d390();
   double synapse0x4a4d3d0();
   double synapse0x4a4aed0();
   double synapse0x4a4b250();
   double synapse0x4a4b290();
   double synapse0x4a48190();
   double synapse0x4a481d0();
   double synapse0x4a48210();
};

#endif // ddNNEB_h

