<lcgdict>
<selection>
  <class name="reco::Particle">
    <field name="vertex_" iotype="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t> >" />
    <field name="p4Polar_" transient="true" />
    <field name="p4Cartesian_" transient="true" />
  </class>
  <class name="reco::Candidate">
    <field name="mothers_" transient="true"/>
  </class>
  <class name="reco::LeafCandidate" />
  <class name="reco::CompositeCandidate"/>
  <class name="reco::VertexCompositeCandidate"/>
  <class name="reco::CompositeRefCandidate" />
  <class name="reco::CompositePtrCandidate" />
  <class name="reco::CompositeRefBaseCandidate" />
  <class name="reco::ShallowCloneCandidate" />
  <class name="reco::ShallowClonePtrCandidate" />
  <class name="reco::NamedCompositeCandidate"/>
  <class name="reco::candidate::iterator" />
  <class name="reco::candidate::const_iterator" />
  <class name="reco::candidate::const_iterator_imp" />
  <class name="reco::candidate::iterator_imp" />

  <class name="reco::CandidateRef" />
  <class name="reco::CandidatePtr" />
  <class name="reco::CandidateRefVector" />
  <class name="reco::CompositeCandidateRefVector" />
  <class name="reco::VertexCompositeCandidateRefVector" />
  <class name="reco::CandidateRefProd" />

  <class name="edm::reftobase::BaseHolder<reco::Candidate>" />
  <class name="edm::reftobase::Holder<reco::Candidate, reco::CandidateRef>" />
  <class name="edm::reftobase::IndirectHolder<reco::Candidate>"/>
  <class name="edm::reftobase::RefHolder<reco::CandidateRef>"/>

  <class name="edm::RefToBase<reco::Candidate>" />
  <class name="std::vector<edm::RefToBase<reco::Candidate> >" />
  <class name="std::vector<edm::Ptr<reco::Candidate> >" />

  <class name="edm::reftobase::BaseVectorHolder<reco::Candidate>" />
  <class name="edm::reftobase::BaseVectorHolder<reco::Candidate>::const_iterator_imp" />
  <class name="edm::reftobase::BaseVectorHolder<reco::Candidate>::const_iterator" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::CandidateRefVector>" />
  <class name="edm::reftobase::IndirectVectorHolder<reco::Candidate>"/>
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::CandidateRefVector>::const_iterator_imp_specific" />
  <class name="edm::reftobase::RefVectorHolder<reco::CandidateRefVector>"/>

  <class name="edm::RefToBaseVector<reco::Candidate>" />

  <class name="edm::RefToBaseProd<reco::Candidate>">
    <field name="view_" transient="true" />
  </class>
  <class name="std::map<const reco::Candidate *, const reco::Candidate *>" />
  <class name="std::vector<const reco::Candidate *>" />

  <class name="edm::helpers::KeyVal<reco::CandidateRef, reco::CandidateRef>" /> 
  <class name="edm::helpers::KeyVal<reco::CandidateRefProd, reco::CandidateRefProd>" />
  <class name="edm::helpers::KeyVal<reco::CandidateBaseRefProd, reco::CandidateBaseRefProd>" />
  <class name="edm::helpers::KeyVal<reco::CandidateBaseRef, reco::CandidateBaseRef>" />
  <class name="std::map<unsigned int,edm::helpers::KeyVal<reco::CandidateBaseRef, reco::CandidateBaseRef> >" />
  <class name="edm::AssociationMap<edm::OneToOne<edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> >,edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> >,unsigned int> >">
    <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::AssociationMap<edm::OneToOneGeneric<edm::View<reco::Candidate>,edm::View<reco::Candidate>,unsigned int,edm::RefToBaseProd<reco::Candidate>,edm::RefToBaseProd<reco::Candidate>,edm::RefToBase<reco::Candidate>,edm::RefToBase<reco::Candidate> > >">
    <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::AssociationMap<edm::OneToManyWithQuality<edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> >,edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> >,double,unsigned int> >">
    <field name="transientMap_" transient="true" />
  </class>
  <class pattern="edm::AssociationVector<*>">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CandRefValueMap" /> 

  <class name="std::vector<reco::Particle>" />
  <class name="std::vector<reco::Candidate *>" />
  <class name="std::vector<reco::LeafCandidate>" />
  <class name="reco::CandidateCollection" />
  <class name="reco::CandidateBaseRef" />

  <class name="edm::Wrapper<reco::CandidateCollection>" />
  <class name="edm::Wrapper<std::vector<reco::Particle> >" />
  <class name="edm::Wrapper<std::vector<reco::LeafCandidate> >" />
  <class name="edm::Wrapper<reco::CandidateRefVector>"/>
  <class name="edm::Wrapper<reco::CandidateBaseRefVector>" />
  <class name="edm::Wrapper<reco::CandMatchMap>" />
  <class name="edm::Wrapper<reco::CandViewMatchMap>" />
  <class name="edm::Wrapper<reco::CandMatchMapMany>" /> 
  <class name="edm::Wrapper<reco::CandRefValueMap>" /> 
  <class pattern="edm::AssociationMap<*>::const_iterator" />
  <class pattern="edm::Wrapper<edm::AssociationVector<*>"/>
  <class name="edm::Association<edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> > >" />
  <class name="edm::Wrapper<edm::Association<edm::OwnVector<reco::Candidate,edm::ClonePolicy<reco::Candidate> > > >" />

  <class name="reco::CompositeCandidateCollection" />
  <class name="edm::Wrapper<reco::CompositeCandidateCollection>" />
  <class name="edm::reftobase::Holder<reco::Candidate, reco::CompositeCandidateRef>" />
  <class name="edm::reftobase::RefHolder<reco::CompositeCandidateRef>" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::CompositeCandidateRefVector>" />
  <class name="edm::reftobase::RefVectorHolder<reco::CompositeCandidateRefVector>" />

  <class name="reco::VertexCompositeCandidateCollection" />
  <class name="edm::Wrapper<reco::VertexCompositeCandidateCollection>" />
  <class name="edm::reftobase::Holder<reco::Candidate, reco::VertexCompositeCandidateRef>" />
  <class name="edm::reftobase::RefHolder<reco::VertexCompositeCandidateRef>" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::VertexCompositeCandidateRefVector>" />
  <class name="edm::reftobase::RefVectorHolder<reco::VertexCompositeCandidateRefVector>" />

  <class name="reco::NamedCompositeCandidateCollection" />
  <class name="edm::Wrapper<reco::NamedCompositeCandidateCollection>" />
  <class name="edm::reftobase::Holder<reco::Candidate, reco::NamedCompositeCandidateRef>" />
  <class name="edm::reftobase::RefHolder<reco::NamedCompositeCandidateRef>" />
  <class name="edm::reftobase::VectorHolder<reco::Candidate, reco::NamedCompositeCandidateRefVector>" />
  <class name="edm::reftobase::RefVectorHolder<reco::NamedCompositeCandidateRefVector>" />


  <class pattern="std::iterator<std::random_access_iterator_tag,edm::RefToBase<reco::Candidate>*>" />
</selection>
<exclusion>
  <class name="edm::OwnVector<reco::Candidate, edm::ClonePolicy<reco::Candidate> >">
    <method name="sort" />
  </class>
</exclusion>
</lcgdict>
