<lcgdict>
  <class name="TrajectorySeed" />
  <class name="edm::RefToBase<TrajectorySeed>"/>
  <class name="edm::reftobase::BaseHolder<TrajectorySeed>" />
  <class name="edm::reftobase::IndirectHolder<TrajectorySeed>" />

  <class name="std::vector<TrajectorySeed>" />
  <class name="edm::Wrapper<std::vector<TrajectorySeed> >" />
  <class name="edm::Ref<std::vector<TrajectorySeed>,TrajectorySeed,edm::refhelper::FindUsingAdvance<std::vector<TrajectorySeed>,TrajectorySeed> >"/>
  <class name="edm::RefProd<std::vector<TrajectorySeed> >"/>
  <class name="edm::RefVector<std::vector<TrajectorySeed>,TrajectorySeed,edm::refhelper::FindUsingAdvance<std::vector<TrajectorySeed>,TrajectorySeed> >"/>
  <class name="edm::RefVectorIterator<std::vector<TrajectorySeed>,TrajectorySeed,edm::refhelper::FindUsingAdvance<std::vector<TrajectorySeed>,TrajectorySeed> >"/>
  <class pattern="std::iterator<*edm::Ref*TrajectorySeed*>"/>

  <class name="edm::reftobase::RefHolder<edm::Ref<std::vector<TrajectorySeed>,TrajectorySeed,edm::refhelper::FindUsingAdvance<std::vector<TrajectorySeed>,TrajectorySeed> > >"/>
  <class name="edm::reftobase::Holder<TrajectorySeed,edm::Ref<std::vector<TrajectorySeed>,TrajectorySeed,edm::refhelper::FindUsingAdvance<std::vector<TrajectorySeed>,TrajectorySeed> > >"/>
</lcgdict>
