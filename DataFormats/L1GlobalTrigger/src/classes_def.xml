<lcgdict>
  <class name="L1GtfeWord"/>
  <class name="edm::Wrapper<L1GtfeWord>" splitLevel="0"/>

  <class name="L1GtfeExtWord"/>
  <class name="edm::Wrapper<L1GtfeExtWord>" splitLevel="0"/>

  <class name="L1TcsWord"/>
  <class name="edm::Wrapper<L1TcsWord>" splitLevel="0"/>

  <class name="L1GtFdlWord"/>
  <class name="edm::Wrapper<L1GtFdlWord>" splitLevel="0"/>
  
  <class name="std::vector<L1GtFdlWord>"/>
  <class name="edm::Wrapper<std::vector<L1GtFdlWord> >" splitLevel="0"/>

  <class name="L1GtPsbWord"/>
  <class name="edm::Wrapper<L1GtPsbWord>" splitLevel="0"/>
  
  <class name="std::vector<L1GtPsbWord>"/>
  <class name="edm::Wrapper<std::vector<L1GtPsbWord> >" splitLevel="0"/>
 
 
  <class name="L1GlobalTriggerReadoutSetup"/>
  <class name="edm::Wrapper<L1GlobalTriggerReadoutSetup>" splitLevel="0"/>
  
  <class name="L1GlobalTriggerReadoutRecord"/>
  <class name="edm::Wrapper<L1GlobalTriggerReadoutRecord>" splitLevel="0"/>
  
  <class name="L1GlobalTriggerEvmReadoutRecord"/>
  <class name="edm::Wrapper<L1GlobalTriggerEvmReadoutRecord>" splitLevel="0"/>

  <class name="L1GlobalTriggerObjectMap"/>
  <class name="edm::Wrapper<L1GlobalTriggerObjectMap>" splitLevel="0"/>

  <class name="std::vector<L1GlobalTriggerObjectMap>"/>
  <class name="edm::Wrapper<std::vector<L1GlobalTriggerObjectMap> >" splitLevel="0"/>

  <class name="L1GlobalTriggerObjectMapRecord"/>
  <class name="edm::Wrapper<L1GlobalTriggerObjectMapRecord>" splitLevel="0"/>

  <class name="L1GlobalTriggerRecord"/>
  <class name="edm::Wrapper<L1GlobalTriggerRecord>" splitLevel="0"/>

  <class name="L1GtTechnicalTrigger"/>
  <class name="edm::Wrapper<L1GtTechnicalTrigger>" splitLevel="0"/>

  <class name="std::vector<L1GtTechnicalTrigger>"/>
  <class name="edm::Wrapper<std::vector<L1GtTechnicalTrigger> >" splitLevel="0"/>

  <class name="L1GtTechnicalTriggerRecord"/>
  <class name="edm::Wrapper<L1GtTechnicalTriggerRecord>" splitLevel="0"/>

  <class name="std::vector<std::vector<int> >"/>
  <class name="std::vector<std::vector<std::vector<int> > >"/>
  
  <class name="std::vector<L1GtObject> "/>
  <class name="std::vector<std::vector<L1GtObject> >"/>

  <class name="L1GtLogicParser::OperandToken"/>
  <class name="std::vector<L1GtLogicParser::OperandToken> "/>

  <class name="L1GtLogicParser::TokenRPN"/>
  <class name="std::vector<L1GtLogicParser::TokenRPN> "/>

</lcgdict>
