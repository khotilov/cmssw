#!/bin/bash
#run standard condtions write/read 
#default source base $CMSSW_RELEASE_BASE, non-default $1 

eval `scramv1 runtime -sh`
runbasedir="$CMSSW_RELEASE_BASE"
echo "$runbasedir"
if [ -z "$1" ]
then   
   echo "test code base $runbasedir"
else
   runbasedir="$1"
   echo "test code base $runbasedir"
fi
echo "populate test.db PedestalsRcd/Pedestals  mytest tag"
if [ -d runCondTests ]
then
   rm -rf ./runCondTests
fi

mkdir runCondTests
cd runCondTests

cmsRun $runbasedir/src/CondCore/DBOutputService/test/python/testIOVPayloadAnalyzer_cfg.py
echo "read back"
cmsRun $runbasedir/src/CondCore/ESSources/test/python/print_ped_cfg.py

echo "test blob"
pool_setup_database -f $runbasedir/src/CondFormats/Calibration/xml/mySiStripNoises_basic_0.xml -d CondFormatsCalibration -c sqlite_file:blob.db
pool_retrieve_object_relational_mapping -c sqlite_file:blob.db -n mySiStripNoises -d CondFormatsCalibration -o mapping1.xml
cmsRun $runbasedir/src/CondCore/DBOutputService/test/python/writeBlob_cfg.py
pool_retrieve_object_relational_mapping -c sqlite_file:blob.db -n mySiStripNoises -d CondFormatsCalibration -o mapping2.xml
diff mapping1.xml mapping2.xml
echo "read back blob"
cmsRun $runbasedir/src/CondCore/ESSources/test/python/load_ped_strip_cfg.py

echo "test Keyed sequence"

cmsRun $runbasedir/src/CondCore/DBOutputService/test/python/writeKeyed_cfg.py
cmscond_list_iov -c sqlite:keys.db -t KeyTest -s
cmscond_list_iov -c sqlite:keys.db -t ConfTest
pool_list_object_relational_mapping -c sqlite_file:keys.db


cd ..
exit 0
