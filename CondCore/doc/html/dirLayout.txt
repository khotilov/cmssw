CondCore  //conditions service code
  --DBCommon  //code common to service implementations
  --ESSources //pool db ESSource implementation of the conditions service
  --IOVService //IOV service code
  --MetaDataService //MetaData service code
  --PluginsSystem //code that handles the dynamic loading of the plugins 
  --EcalPlugins //instantiates the Ecal related plugins needed to deliver the Ecal objects/Records
  --XXXPlugins //instantiates the XXX detector related plugins needed to deliver the XXX related objects/Records
  

CondFormats //hold persistent conditions data object definitions and their associated event setup data record definitions
  --DataRecord //holds ALL definitions of the Records used by the EventSetup
  --EcalObjects //holds ALL Ecal related persistent object definitions, their dictionary files and EventSetup data registration macros  
  --XXXObjects  //holds ALL XXX related persistent object definitions, their dictionary files and EventSetup data registration macros

CondTools //hold tools for online-to-offline procedure
  --Utilities //commandline applications needed in the o2o procedure

Guidelines and rationals:
 -- The package granularity of CondCore/XXXPlugins and CondFormats/XXXObjects should match
 -- The plugins, conditions objects, and Data Records are placed in different librarie. The Record classes(in CondFormats/DataRecord) are decoupled from the Plugins(in CondCore/XXXPlugins) because 'clientcode' (i.e., code that does a 'get' from the EventSetup) needs to link with the Record library but should not link with the Plugin library; multiple objects can be delivered by one Record therefore objects and Records are not forced in the same library
 -- The guideline for the granularity of the data record is: each detector has its own sets of records; one record per IOV set.
