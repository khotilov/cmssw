[CRAB]

jobtype = cmssw
scheduler = glite
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari

[CMSSW]

### The data you want to access (to be found on DBS)
#datasetpath=/ttbar_inclusive_TopRex/CMSSW_1_3_1-Spring07-1122/GEN-SIM-DIGI-RECO
#datasetpath=/H115_ZZ_4l/CMSSW_1_6_12-2e2mu_MCGen/USER

datasetpath = /Ztautau/Summer08_IDEAL_V11_redigi_v1/GEN-SIM-RECO

# dbs_url= http://cmsdbsprod.cern.ch/cms_dbs_ph_analysis_02/servlet/DBSServlet 

### The ParameterSet you want to use
#pset=/afs/cern.ch/user/n/ndefilip/scratch0/CMSSW_2_2_3/src/SM_H_2Z_4l_14TeV_cff_py_GEN_SIM_DIGI_L1_DIGI2RAW_HLT_IDEAL.py

pset= /afs/cern.ch/user/l/lusito/scratch0/CMSSW_2_2_3/src/TauAnalysis/Skimming/test/skimMuTau_cfg.py


### Splitting parameters
total_number_of_events=-1
events_per_job = 5000
#number_of_jobs = 10

### The output files (comma separated list)
#output_file = SM_H_2Z_4l_14TeV_cff_py_GEN_SIM_DIGI_L1_DIGI2RAW_HLT.root
output_file = muTauSkim.root

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /afs/cern.ch/user/n/ndefilip/scratch0/CMSSW_2_2_3/src/2e2mu/Higgs115_ZZ_4l

ui_working_dir= /afs/cern.ch/user/l/lusito/scratch0/CMSSW_2_2_3/src/TauAnalysis/Skimming/test/ZtautauPub4

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
storage_element = T2_IT_Bari

### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered

user_remote_dir = ZtautauSkimMuCaloPFTau

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint 
#user_remote_dir = name_directory_you_want


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=1
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
#publish_data_name = CMSSW_2_2_3-2e2mu_GEN_SIM_DIGI_L1_DIGI2RAW_HLT

publish_data_name = CMSSW_2_2_3_SkimMuCaloPFTau_GEN_SIM_DIGI_L1_DIGI2RAW_HLT

### Specify the URL of DBS istance where CRAB has to publish the output files
# dbs_url_for_publication=  https://cmsdbsprod.cern.ch:8443/cms_dbs_physics_analysis_01_writer/servlet/DBSServlet
#dbs_url_for_publication= https://vocms31.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet

dbs_url_for_publication= https://cmsdbsprod.cern.ch:8443/cms_dbs_prod_local_09_writer/servlet/DBSServlet


### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
eMail = faelivrin19@gmail.com

[EDG]

## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list =
#ce_white_list =
#ce_black_list=cclcgceli03.in2p3.fr, cclcgceli04.in2p3.fr
ce_black_list = brunel.ac.uk

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

