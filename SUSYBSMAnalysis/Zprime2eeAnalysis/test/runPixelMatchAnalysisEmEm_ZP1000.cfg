#
#  run on collection of ecal super clusters and perform simple
#  analysis w/ EgammaSimpleAnalyzer
#  you must have run clusterin previously and stored the output
#  in the input collection to this job
#
#  Author: Shahram Rahatlou, University of Rome & INFN
#  $Id: runPixelMatchAnalysisEmEm_ZP1000.cfg,v 1.1 2007/10/10 15:58:35 mmozer Exp $
#
process pixelMatchAnalysisEmEm =
{

  source = PoolSource {
    # Number of events program should run
    untracked vstring fileNames = 
{
'/store/CSA07/mc/2007/10/6/CSA07-CSA07Electron-Tier0-Express00-A01/0001/08B0E487-6574-DC11-8C2B-001617E30F58.root',
'/store/CSA07/mc/2007/10/6/CSA07-CSA07Electron-Tier0-Express00-A01/0001/0AF0FB5F-4D74-DC11-8E3A-001617DBD342.root'
}
  }

############ initialize magnetic field #########################
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
############### initialize geometry #####################
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
####also need to get the es source for geometry of CMS (needed for the rechits)###
include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
include "Geometry/CaloEventSetup/data/CaloTopology.cfi"

## rather put it here:
##include "RecoEgamma/PixelMatchAnalysis/data/runPixelMatchAnalysis.cfi"

  untracked PSet maxEvents = {untracked int32 input = 5000}

  module pixelmatchanalemem = PixelMatchAnalysisEmEm
  {

        #bool drellyan = false
        #bool jet = true
        bool drellyan = true
        bool jet = false

        string analprocess = "ZP_1000"
        #string analprocess = "DY_600"
        #string analprocess = "DY_200"
        #string analprocess = "GR"
        #string analprocess = "SG"

        string electronproducer = "pixelMatchGsfElectrons"
        string electronlabel = ""

        string hybridsuperclusterproducer = "hybridSuperClusters"
        string hybridsuperclusterlabel = ""

        string endcapsuperclusterproducer = "correctedEndcapSuperClustersWithPreshower"
        string endcapsuperclusterlabel = ""


        double ecalconesize = 0.5        # D=0.5
        double hcalconesizemin = 0.15    # D=0.15
        double hcalconesizemax = 0.3     # D=0.3
        double hcalptMin = 0.            # D=0.
        double trackptMin = 1.5          # D=1.5
        double trackconesize = 0.2       # D=0.2
        double rspan = 999999.           # D=999999.
        double zspan = 0.1               # D=0.1
        double vetoConesize = 0.02       # D=0.02  

       double ptrecmin = 20.            
       double etarecmin = 2.4          
       double ntrackisol_max = 4.  
       double trackisol_max = 100.  # attention! remove this cut for EmEm
       double hcalisol_max = 0.2
       double ecalisol_max = 0.5

  }
 
module	weight = CSA07EventWeightProducer {
    InputTag src	 = source
    
    # verbosity
    untracked bool talkToMe = false
    
    # overall luminosity normalization  (in pb-1) 
    double overallLumi = 1000.
 }

  path p = {weight &  pixelmatchanalemem }


  service = MessageLogger {
    untracked vstring destinations = { "cout","Zprime2ee.log" }
    untracked vstring categories =  {  "Zprime2eeAnaEmEm" }
    //untracked vstring debugModules =  { "pixelmatchanalemem" }  #enable for eventwise info
    untracked PSet Zprime2ee.log = {untracked string threshold = "INFO"  #switch to DEBUG for event-info
                                   untracked bool noLineBreaks = true
                                   untracked PSet default = { untracked int32 limit = 0 }
                                   untracked PSet Zprime2eeAnaEmEm  = { untracked int32 limit = 10000000000}
    }
    untracked PSet cout = { untracked string threshold = "INFO"
                                   untracked PSet default = { untracked int32 limit = 0 }
                                   untracked PSet Zprime2eeAnaEmEm  = { untracked int32 limit = 10000000000}
    }
  }

  service = TFileService {
        #string fileName = "rfio:/castor/cern.ch/cms/store/cmscaf/physics/analysis/Zprime2ee/caftest.root"
        string fileName = "caftest.root"
        #string fileName = "pixelmatchanal_DY_600.root"
        #string fileName = "pixelmatchanal_DY_200.root"
  }




}

