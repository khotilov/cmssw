#  run on collection of ecal super clusters and perform simple
#  analysis w/ EgammaSimpleAnalyzer
#  you must have run clusterin previously and stored the output
#  in the input collection to this job
#  Author: Shahram Rahatlou, University of Rome & INFN
#  $Id: runPixelMatchAnalysisGsfEm_ZP1000.cfg,v 1.2 2007/10/29 15:01:30 mmozer Exp $
#
process pixelMatchAnalysisGsfEm =
{
    
    source = PoolSource {
	# Number of events program should run
	untracked vstring fileNames = 
	{
	    
	    #'file:/tmp/palmale/bckSkim_1.root',
	    #'file:/tmp/palmale/bckSkim_2.root'
	    
#	    'file:/tmp/palmale/DYee_run1_M200_full_1.root'
	    
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_1.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_2.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_3.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_4.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_6.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_7.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_8.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_9.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_10.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_11.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_12.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_13.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_14.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_15.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_16.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_18.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_19.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_20.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_21.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_22.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_23.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_24.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_25.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_26.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_27.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_28.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_29.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_30.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_31.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_32.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_33.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_34.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_35.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_36.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_37.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_38.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_39.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_40.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_41.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_42.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_43.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_44.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_45.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_46.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_47.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_48.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_49.root',
# 	    'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/DYee_run1_M200_full_50.root'
	    
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_1.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_2.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_3.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_4.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_5.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_6.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_7.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_8.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_9.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_10.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_11.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_12.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_13.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_14.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_15.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_16.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_17.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_18.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_19.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_20.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_21.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_22.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_23.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_24.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_25.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_26.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_27.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_28.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_29.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_30.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_31.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_32.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_33.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_34.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_35.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_36.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_37.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_38.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_39.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_40.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_41.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_42.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_43.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_44.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_45.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_46.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_47.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_48.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_49.root',
'rfio:/castor/cern.ch/user/p/palmale/CRAB_OUTPUT_SUSYBSM/bckSkim_50.root'
	    
	}
    }
    
############ initialize magnetic field #########################
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    ############### initialize geometry #####################
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
    ####also need to get the es source for geometry of CMS (needed for the rechits)###
    include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
    include "Geometry/CaloEventSetup/data/CaloTopology.cfi"
    
    ## rather put it here:
    ##include "RecoEgamma/PixelMatchAnalysis/data/runPixelMatchAnalysis.cfi"
    
    untracked PSet maxEvents = {untracked int32 input = 5000 }
    
    module pixelmatchanalgsfem = TrackingEfficiencyAnalysis
    {
	
	string electronproducer = "pixelMatchGsfElectrons"
	string electronlabel = ""
	string hybridsuperclusterproducer = "hybridSuperClusters"
	string hybridsuperclusterlabel = ""
	string endcapsuperclusterproducer = "correctedEndcapSuperClustersWithPreshower"
	string endcapsuperclusterlabel = ""
	
	double trackConeSize = 0.3
	double vetoConeSize = 0.1
	double minTagProbeInvMass = 200.
	double tagEtMin = 20.     
	double probeEtMin = 20.
	double zVertexCut = 0.1

    }
    
    
    path p = { pixelmatchanalgsfem }
    
    service = MessageLogger {
	untracked vstring destinations = { "cout","TrackingEfficiencyLog.log" }
	untracked vstring categories =  {  "myAnalysis" }
	untracked vstring debugModules =  { "pixelmatchanalgsfem" }  #enable for eventwise info
	untracked PSet Zprime2ee.log = {untracked string threshold = "INFO"  #switch to DEBUG for event-info
	    untracked bool noLineBreaks = true
	    untracked PSet default = { untracked int32 limit = 0 }
	    untracked PSet myAnalysis = { untracked int32 limit = 10000000000}
	}
	
	
	untracked PSet cout = { untracked string threshold = "INFO"
	    untracked PSet default = { untracked int32 limit = 0 }
	    untracked PSet myAnalysis  = { untracked int32 limit = 10000000000}
	}
    }
    
    service = TFileService {
        string fileName = "TrackingEfficiencyOutput.root"
	
    }
    
    
}

