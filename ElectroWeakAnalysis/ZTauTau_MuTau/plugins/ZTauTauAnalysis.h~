
#ifndef ZTauTauAnalysis_h
#define ZTauTauAnalysis_h

// system include files
#include <memory>
#include <iostream>

// user include files
#include "FWCore/Framework/interface/Frameworkfwd.h"
#include "FWCore/Framework/interface/EDAnalyzer.h"
#include "FWCore/Framework/interface/Event.h"
#include "FWCore/Framework/interface/MakerMacros.h"
#include "FWCore/ParameterSet/interface/ParameterSet.h"

#include "TLorentzVector.h"

#include "FWCore/ParameterSet/interface/InputTag.h"
#include "FWCore/Framework/interface/EventSetup.h"

#include "FWCore/Framework/interface/ESHandle.h"

#include "Math/GenVector/BitReproducible.h"
#include "DetectorDescription/Core/interface/DDCompactView.h"
#include "Geometry/Records/interface/IdealGeometryRecord.h"
#include "Geometry/TrackerNumberingBuilder/interface/GeometricDet.h"
#include "SimDataFormats/TrackingHit/interface/PSimHit.h"
#include "SimDataFormats/TrackingHit/interface/PSimHitContainer.h"
#include "Geometry/Records/interface/TrackerDigiGeometryRecord.h"

#include "DataFormats/Candidate/interface/Particle.h"
#include "SimDataFormats/EncodedEventId/interface/EncodedEventId.h"

#include "SimDataFormats/HepMCProduct/interface/HepMCProduct.h"
#include "SimDataFormats/Track/interface/SimTrack.h"
#include "SimDataFormats/Track/interface/SimTrackContainer.h"
#include "SimDataFormats/Vertex/interface/SimVertex.h"
#include "SimDataFormats/Vertex/interface/SimVertexContainer.h"
#include "FWCore/MessageLogger/interface/MessageLogger.h"
#include "DataFormats/TrackReco/interface/Track.h"

#include "DataFormats/TrackReco/interface/TrackFwd.h"
#include "SimDataFormats/TrackingAnalysis/interface/TrackingParticle.h"
#include "SimDataFormats/TrackingAnalysis/interface/TrackingVertex.h"
#include "MagneticField/Engine/interface/MagneticField.h" 
#include "MagneticField/Records/interface/IdealMagneticFieldRecord.h" 
#include "DataFormats/Common/interface/RefVector.h"
#include "TrackingTools/GeomPropagators/interface/HelixExtrapolatorToLine2Order.h"

#include "DataFormats/MuonReco/interface/Muon.h"
#include "DataFormats/METReco/interface/CaloMETCollection.h"
#include "DataFormats/METReco/interface/GenMETCollection.h"
#include "DataFormats/METReco/interface/CaloMET.h"
#include "DataFormats/METReco/interface/MET.h"
#include "DataFormats/METReco/interface/METCollection.h"
#include "DataFormats/Common/interface/EDProduct.h"
#include "SimGeneral/HepPDTRecord/interface/ParticleDataTable.h"

#include "DataFormats/TauReco/interface/Tau.h"
#include "DataFormats/TauReco/interface/PFTau.h"

#include "Geometry/CaloGeometry/interface/CaloGeometry.h"
#include "Geometry/CaloGeometry/interface/CaloCellGeometry.h"
#include "Geometry/Records/interface/IdealGeometryRecord.h"





#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"

#include <TROOT.h>
#include <TSystem.h>
#include <TCanvas.h>
#include <cmath>
#include "TStyle.h"

#include "HepMC/GenEvent.h"
#include "Math/GenVector/VectorUtil.h"
#include "TLorentzVector.h"
#include "DataFormats/Common/interface/Handle.h"
#include <string>
#include <vector>
#include <set>
#include "DataFormats/BTauReco/interface/JetTag.h"
using namespace edm;
using namespace std;
using namespace reco;
using namespace HepMC; 


//
// class declaration
//

class ZTauTauAnalysis : public edm::EDAnalyzer {
public:
  explicit ZTauTauAnalysis(const edm::ParameterSet&);
  ~ZTauTauAnalysis();
  
  
private:
  virtual void beginJob(const edm::EventSetup&) ;
  virtual void analyze(const edm::Event&, const edm::EventSetup&);
  virtual void endJob() ;
  float DeltaRMin(const reco::PFTau&,const reco::MuonCollection& ); 
float DeltaRMinTBjet(const reco::PFTau&,const reco::JetTagCollection& );
 float getTauCharge(const PFTau& tau) const ;
  //float BDisc_softMuonJetTags(const edm::Event& );
  //float BDisc_trackCountingHighEffJetTags(const edm::Event& );
  //BDisc_softMuonJetTags

  CandidateRef MCTruthMatching(const edm::Event&);
 
  // ----------member data ---------------------------

  int irun, ievt;  
  edm::InputTag TracksTag; 
  edm::InputTag MuonTag;
  
  edm::InputTag  MuonCand, TrackCand,GenMatch,GenMatchL;
  
  edm::InputTag theHCALIsoDepositLabel;
  edm::InputTag theECALIsoDepositLabel;
  edm::InputTag   theHOCALIsoDepositLabel; 
  edm::InputTag theTrackerIsoDepositLabel;  
  
  
  double  radiusConeExtHCALIso_, radiusConeIntHCALIso_, eTMin_, cutHCALIso_;
  //string hcalrhitsLabel_;
  
  edm::ESHandle<CaloGeometry> theCaloGeom_;
  
  edm::InputTag src_;
  

   typedef std::vector<const reco::Muon*> container;
  container selected_;
 
  
  string rootfile_;
  string PFTau_;
  string PFTauDiscriminatorByIsolation_;
  string CaloMet_;
  //string tracksLabel_; 
  double radiusConeExt_;
  double radiusConeInt_;
  double pTMin_;
  double lip_;
  double cut_;
  
  bool skip;
  int eventCount_;
  TTree* tree_;
  TFile* file_;  
  
  TLorentzVector tauneut, tauh_ap, taul_ap , mu, neutau, neumu, jetMom;
  
  double matchingCone_;
  double isolationCone_;
  double signalCone_;
  double leadingTrackPt_;
  double minimumTrackPt_;
  double clusterTrackMatchingCone_;
  
  edm::ESHandle<MagneticField> theMF;
  GlobalVector magField;   
  
  float neumuener, neumuenertr, neutauener, neutauenertr, neutaupx, neutaupy, neutaupz, neumupx, neumupy, neumupz, neutaupt, neumupt;
  float jetMomener, jetMomenertr, jetMompt, jetMometa, jetMommass, jetMommasstr, jetMompx, jetMompy, jetMompz, jetMomtheta;
  float muener, muenertr, mupt, mueta, mumass, mumasstr, mupx, mupy, mupz, mutheta;   
  float tauhener_ap, tauhenertr_ap, tauhpt_ap, tauheta_ap, tauhmass_ap, tauhmasstr_ap, taulener_ap, taulenertr_ap, taulpt_ap, tauleta_ap, taulmass_ap, taulmasstr_ap;
  float tauneutener, tauneutenertr, tauneutpx, tauneutpy, tauneutpz, tauneutpt,pxtaul_bp, pytaul_bp,pztaul_bp, pxtauh_bp, pytauh_bp, pztauh_bp, etaul_bp, etauh_bp; 
  
  float pxtaul_ap, pytaul_ap,pztaul_ap, pxtauh_ap, pytauh_ap, pztauh_ap, etaul_ap, etauh_ap, tauh_aptheta, taul_aptheta;
 
  float Zeta_fin_px, Zeta_fin_py, Zeta_fin_pz, Zeta_fin_pt,Z_eta,Z_rap, Z_rapidity,energiatrasvZ;
  float Zeta_fin_ener, Zeta_fin_enertr, Zeta_fin_eta, Zeta_fin_rapidity;
 
  float ptleadingtrack, ptparticle,charged;
  int barcodemulept,barcodemujet,countchpartjet;
 
  float Zvisibletransversemass_relat2,trvismass1  ;
 


  //////// ZETA  
  float PFRecoVisMassZ, PFRecoInvMassZ_A, PFRecoInvMassZ_B,  PFRecoInvMassZ_C, PFRecoP_TZ, PFRecoEnergyZ, PFRecoTrEnergyZ, PFRecoTrVisEnergyZ,PFRecoVisEnergyZ, PFRecoP_XZ, PFRecoP_YZ, PFRecoP_ZZ, PFRecoP_Z, PFRecoTrMassZ_A, PFRecoTrMassZ_B,PFRecoTrMassZ_C, PFRecoTrVisMassZ,PFRecoTrVisMassZ_rel ;  
  float  PFRecoVisP_XZ,PFRecoVisP_YZ, PFRecoVisP_ZZ, PFRecoVisP_Z; 

  float GenEnergyZ, GenTrEnergyZ,GenVisTrEnergyZ,GenP_XZ, GenP_YZ, GenP_ZZ, GenP_TZ, GenInvMassZ, GenTrMassZ_rel, GenTrMassZ_A, GenVisMassZ;
  float GenVisTrMassZ_A,GenVisTrMassZ_rel,energiatrasvvisZ, GenVisEnergyZ;   


  ////////////////   RECO MU
  /// controllati
  
  int NumNewIsolMu, NumOldIsolMu;
  bool FlagOldMuIsol, FlagOldRecoMu, FlagNewMuIsol,FlagNewRecoMu;
 
  float delpx, delpy, delpz,delsumet;
  //float EcalM_Tot,HcalM_Tot,HoM_Tot,TrkM_Tot;
 //float HcalM_Frac25,HoM_Frac25,TrkM_Frac25,TrkIsoM_N25,EcalM_Frac25;
 float HcalM_Frac40,HoM_Frac40,TrkM_Frac40,TrkIsoM_N40,EcalM_Frac40;
 
 //float mhcalfrac25,mtrackfrac25,mhofrac25,mecalfrac25,calfrac25;
 float mhcalfrac40,mtrackfrac40,mhofrac40,mecalfrac40,calfrac40;
 float OldIsoPTMu, OldIsoEnMu, OldIsoTrEnMu, OldIsoInvMassMu, OldIsoEtaMu, OldIsoTrMassMu, OldIsoPXMu, OldIsoPYMu, OldIsoPZMu, OldIsoChMu, OldIsoPhiMu, OldIsoImpParMu;
 float NewIsoPTMu, NewIsoEnMu, NewIsoTrEnMu, NewIsoInvMassMu, NewIsoEtaMu, NewIsoTrMassMu, NewIsoPXMu, NewIsoPYMu, NewIsoPZMu, NewIsoChMu, NewIsoPhiMu, NewIsoImpParMu;
 
 /// vedi se servono
  
 int NumMuons, NumGloMuons;  
 float PTSum, isoValue;
 float dr,drtmp, dr_a; 
 int  sizeRM; 
 
  
  //float MuTrEnH, MuTrEnE, MuPtT; 

  
  float NumIsolTracks;
  //float MuSumEtH02,MuSumEtH03,MuSumEtE02,MuSumEtE03,MuSumPtT02, MuSumPtT03, MuNTrksT02,MuNTrksT03;
  

  ////////////////   RECO TAU
  
  //nuove variabili tau
  float tau_disc;
  float tau_eta,tau_leading_trk_pt,tau_had_energy, tau_inv_mass, tau_sumpt_iso_ch_hadrons, tau_sumpt_iso_photons, leading_trk_sipt,  tau_inv_mass2, chHadEnergyJet;
  int tau_ch_hadrons,tau_neu_hadrons,tau_photons,tau_sig_ch_hadrons,tau_iso_ch_hadrons, tau_iso_photons,tau_iso_neu_hadrons, tau_sig_photons, tau_sig_neu_hadrons;       
  float tau_pt, tau_px, tau_py, tau_pz, tau_energy, tau_et, TauCharge;
  double tau_zvertex,tau_charge; 
  float tau_em_energy,neuHadEnergyJet,  chEMEnergyJet,chMuEnergyJet,neuEMEnergyJet, chMultJet,neuMultJet,muMultJet;
  
  float maximumHCALPFClusterEt, tau_chargeTrue, phiT;
  
  bool QualityEvent; 
  int n_tau_candidate, nPFjet; 
  float PFJetET;
  float TauImpPar;
 ////////////////   RECO MET

  bool FlagRecoMET;
  float CaloMETMissTrEner, CaloMETSumMissTrEner, CaloMETSignificance, CaloMET_E_long, CaloMET_x, CaloMET_y, CaloMET_time;
  
    
  ////////////////  MC-MATCHING
  
  float pdgId_cand, pdgId_moth, size_moth,pdgId_candLT[20], pdgId_mothLT[20], size_mothLT[20],pdgId_candM[20], pdgId_mothM[20], size_mothM[20]; 
  
  
  ////////////////  X
  float deltaphiTM, cosDeltaPhiTM, phiMET, deltaphiTauMET, cosDeltaPhiTauMET;
  float deltaphiTMtmp, cosdeltaphiTMtmp, deltaphiTauMETtmp, deltaphiMuMET, deltaphiMuMETtmp, cosDeltaPhiMuMET;
  
  

  
  ////////////////   B-TAGGING
  float drTB, drMB;
  float DRMINTBSM, DRMINMBSM,DRMAXMBSM, DRMINTBSMNoIP, DRMINMBSMNoIP, DRMINTBJP, DRMINMBJP,DRMINTBTCHE, DRMINMBTCHE, DRMINTBTCHP, DRMINMBTCHP;  
  int nJetBSM,nJetBSMNoIP,nJetBJP,nJetBTCHE,nJetBTCHP ;
  float  b_discSM, b_discSMNoIP, b_discTCHE, b_discJP, b_discSL,b_discTCHP ;
  float BDiscSumSM, BDiscSumSMNoIP,BDiscMeanSL, BDiscSumTCHE, BDiscSumTCHP, BDiscSumJP; 
  float enerTrBjetSM1,enerTrBjetSM2,enerTrBjetSM3,enerTrBjetSM4;
  float enerTrBjetSMNoIP1,enerTrBjetSMNoIP2,enerTrBjetSMNoIP3,enerTrBjetSMNoIP4;
  float enerTrBjetJP1,enerTrBjetJP2,enerTrBjetJP3,enerTrBjetJP4;
  float enerTrBjetTCHE1,enerTrBjetTCHE2,enerTrBjetTCHE3,enerTrBjetTCHE4;
  float enerTrBjetTCHP1,enerTrBjetTCHP2,enerTrBjetTCHP3,enerTrBjetTCHP4;
  
  
  float b_discSM1,b_discSM2,b_discSM3,b_discSM4;
  float b_discSMNoIP1,b_discSMNoIP2,b_discSMNoIP3,b_discSMNoIP4;
  float b_discJP1,b_discJP2,b_discJP3,b_discJP4;
  float b_discTCHE1,b_discTCHE2,b_discTCHE3,b_discTCHE4;
  float b_discTCHP1,b_discTCHP2,b_discTCHP3,b_discTCHP4;
  
  float drTBSM1,drTBSM2,drTBSM3,drTBSM4;
  float drTBSMNoIP1,drTBSMNoIP2,drTBSMNoIP3,drTBSMNoIP4;
  float drTBJP1,drTBJP2,drTBJP3,drTBJP4;
  float drTBTCHE1,drTBTCHE2,drTBTCHE3,drTBTCHE4;
  float drTBTCHP1,drTBTCHP2,drTBTCHP3,drTBTCHP4;
  
  float b_discTSM, b_discTSMNoIP, b_discTJP, b_discTTCHE,b_discTTCHP ;
  float b_discPosFirstSM, b_discPosSecondSM, b_discPosThirdSM, b_discPosFourSM;
  float b_discPosFirstSMNoIP, b_discPosSecondSMNoIP, b_discPosThirdSMNoIP, b_discPosFourSMNoIP;
  float b_discPosFirstJP, b_discPosSecondJP, b_discPosThirdJP, b_discPosFourJP;
  float b_discPosFirstTCHE, b_discPosSecondTCHE, b_discPosThirdTCHE, b_discPosFourTCHE;
  float b_discPosFirstTCHP, b_discPosSecondTCHP, b_discPosThirdTCHP, b_discPosFourTCHP;
  
  float drTBMintmpSM,  drMB1tmpSM, drMB1SM, drMB2tmpSM, drMB2SM, drMB3tmpSM, drMB3SM, drMB4tmpSM,drMB4SM;
  
  float bdiscM1SM,bdiscM2SM,bdiscM3SM,bdiscM4SM;
  int nBjetMSM;
  int Njet10ITC5, Njet15ITC5, Njet20ITC5, nJetITC5; 
  int Njet10SM, Njet15SM, Njet20SM, Njet10SMNoIP, Njet15SMNoIP, Njet20SMNoIP, Njet10JP, Njet15JP, Njet20JP,Njet10TCHE, Njet15TCHE, Njet20TCHE, Njet10TCHP,Njet15TCHP,Njet20TCHP; int njetITC5, njet15ITC5;
  float PT1,PT2,PT3,PT4;


  //////////  TRACCE

  float NumRecHitsMin, NumRecHitsMax,NumValRecHitsMin, NumValRecHitsMax;  
 float SumTrackPt8,SumTrackPt10;
int NumTracks_8, NumTracks_10;

/////////////  VETTORI

int NPFJETMAX,NCALOJETMAX,NMUMAX,NTRACKMAX, NTAUMAX;
int NMuCand, NPFJetCand, NCaloJetCand, NTrackCand, NTauCand;
 int NCaloJetCandSM, NCaloJetCandSMNoIP, NCaloJetCandJP, NCaloJetCandTCHE, NCaloJetCandTCHP,NMuCandSM,NMuCandSMNoIP, NMuCandJP, NMuCandTCHE, NMuCandTCHP;
 int TrackSize, PFJetSize, MuSize, CaloJetSize, TauSize;
 float Muon_pt[20], Muon_eta[20], Muon_p[20], Muon_px[20], Muon_py[20], Muon_pz[20], Muon_en[20], Muon_tren[20], Muon_phi[20], Muon_theta[20], Muon_charge[20], MuonDz[20], MuonIP[20], Muonvty[20], Muonvtx[20], Muonvtz[20];

 float Tk_ValRecHits[30], Tk_NumRecHits[30],  Tk_ChiSqr[30],  Tk_Pt[30], Tk_d0[30],  Tk_dxy[30],  Tk_dz[30],  Tk_LostHits[30]; 

 float PFJet_Pt[20],  PFJet_P[20],  PFJet_E[20],  PFJet_Et[20]; 

float CaloJet_Pt[20],  CaloJet_P[20],  CaloJet_E[20],  CaloJet_Et[20];

 
 double SMCaloJet_Bdisc[20], SMCaloJet_DrT[20],  SMCaloJet_DPhiT[20]; 
 double SMNoIPCaloJet_Bdisc[20], SMNoIPCaloJet_DrT[20], SMNoIPCaloJet_DrM[20][20], SMNoIPCaloJet_DPhiT[20], SMNoIPCaloJet_DPhiM[20][20];
 double JPCaloJet_Bdisc[20], JPCaloJet_DrT[20], JPCaloJet_DrM[20][20],JPCaloJet_DPhiT[20], JPCaloJet_DPhiM[20][20];
 double TCHECaloJet_Bdisc[20], TCHECaloJet_DrT[20], TCHECaloJet_DrM[20][20], TCHECaloJet_DPhiT[20], TCHECaloJet_DPhiM[20][20];
  double TCHPCaloJet_Bdisc[20], TCHPCaloJet_DrT[20], TCHPCaloJet_DrM[20][20], TCHPCaloJet_DPhiT[20], TCHPCaloJet_DPhiM[20][20];
  double SMCaloJet_BdiscF[20];

double SMCaloJet_DrM[20][20],SMCaloJet_DPhiM[20][20];


 float EcalM_Tot[20],HcalM_Tot[20],HoM_Tot[20],TrkM_Tot[20];
 float EcalM_Frac[20][5],HcalM_Frac[20][5],HoM_Frac[20][5], TrkM_Frac[20][5], TrkIsoM_N[20][5];


float VisMassZ[20][20], InvMassZ_A[20][20], InvMassZ_B[20][20],  InvMassZ_C[20][20], PTZ[20][20], EnZ[20][20], TrEnZ[20][20], TrVisEnZ[20][20],VisEnZ[20][20], PXZ[20][20], PYZ[20][20], PZZ[20][20], PZ[20][20], TrMassZ_A[20][20], TrMassZ_B[20][20], TrMassZ_C[20][20], TrVisMassZ[20][20], TrVisMassZ_rel[20][20];  
  float  VisPXZ[20][20], VisPYZ[20][20], VisPZZ[20][20], VisPZ[20][20]; 


  float Tau_disc[20];
  float Tau_eta[20], Tau_leading_trk_pt[20], Tau_had_energy[20], Tau_inv_mass[20], Tau_sumpt_iso_ch_hadrons[20], Tau_sumpt_iso_photons[20], Leading_trk_sipt[20],  Tau_inv_mass2[20], ChHadEnergyJet[20];
  int Tau_ch_hadrons[20], Tau_neu_hadrons[20], Tau_photons[20], Tau_sig_ch_hadrons[20], Tau_iso_ch_hadrons[20], Tau_iso_photons[20], Tau_iso_neu_hadrons[20], Tau_sig_photons[20], Tau_sig_neu_hadrons[20];       
  float Tau_pt[20], Tau_px[20], Tau_py[20], Tau_pz[20], Tau_energy[20], Tau_et[20], Tau_Charge[20];
  float Tau_zvertex[20], Tau_charge[20]; 
  float Tau_em_energy[20], NeuHadEnergyJet[20],  ChEMEnergyJet[20], ChMuEnergyJet[20], NeuEMEnergyJet[20], ChMultJet[20], NeuMultJet[20], MuMultJet[20];
  float Tau_ImpPar[20];

 
  float MaximumHCALPFClusterEt[20], Tau_chargeTrue[20], PhiT[20], TauNTr[20];

  float DeltaphiTM[20][20], CosDeltaPhiTM[20][20]; 
float  DeltaphiTauMET[20], CosDeltaPhiTauMET[20],DeltaphiMuMET[20],CosDeltaPhiMuMET[20];
//float deltaphiTMtmp, cosdeltaphiTMtmp, deltaphiTauMETtmp,  deltaphiMuMETtmp, 


 float pthat;
 int sizeT;
 float id_process;
};

#endif
