#!/usr/bin/env perl


# get environment variables
#my $java_home = get_env_variable("JAVA_HOME");

# build the ConfDbGUI jar file if necessary
my $confdb_gui_jar = "lib/cmssw-evf-confdb-gui.jar";
my $classpath      = $confdb_gui_jar;

if (!-e $confdb_gui_jar)
{
    print "\nBuilding $confdb_gui_jar ...\n";
    `ant`;

    if (-e $confdb_gui_jar)
    {
	print "$confdb_gui_jar successfully built.\n";
    }
    else { die ("Failed to build $confdb_gui_jar\n"); }
}

# add MySQL JDBC Driver to claspath
$classpath = $classpath . ":ext/mysql-connector-java-5.0.5-bin.jar";

# add Oracle JDBC Driver to classpath
$classpath = $classpath . ":ext/ojdbc14.jar";

# add swing-layout-1.0.jar to classpath for org.jdesktop.layout.* support
$classpath = $classpath . ":ext/swing-layout-1.0.jar";

# add standalone jython.jar for PythonInterpreter support
$classpath = $classpath . ":ext/jython-2.5.2.jar";

# add other libraries for the Python importer tool.
$classpath = $classpath . ":ext/antlr-runtime-3.1.3.jar";
$classpath = $classpath . ":ext/asm-3.1.jar";
$classpath = $classpath . ":ext/asm-commons-3.1.jar";
$classpath = $classpath . ":ext/asm-util-3.1.jar";
$classpath = $classpath . ":ext/constantine-0.4.jar";
$classpath = $classpath . ":ext/jna.jar";
$classpath = $classpath . ":ext/jna-posix.jar";

## the ones bellow are not needed.
##$classpath = $classpath . ":ext/junit-3.8.2.jar";
##$classpath = $classpath . ":ext/libreadline-java-0.8.jar";
##$classpath = $classpath . ":ext/postgresql-8.3-603.jdbc4.jar";
##$classpath = $classpath . ":ext/servlet-api-2.5.jar";
##$classpath = $classpath . ":ext/stringtemplate-3.2.jar";
##$classpath = $classpath . ":ext/xercesImpl-2.9.1.jar";
##$classpath = $classpath . ":ext/antlr-3.1.3.jar";
##$classpath = $classpath . ":ext/jarjar-0.7.jar";
##$classpath = $classpath . ":ext/jline-0.9.95-SNAPSHOT.jar";

# start the GUI
`rm -f ConfDbGUI.log`;
system("java -classpath $classpath confdb.gui.ConfDbGUI");

exit 0;


#-------------------------------------------------------------------------------
# subroutines
#-------------------------------------------------------------------------------

#_______________________________________________________________________________
sub get_env_variable
{
    my ($varname) = @_;
    my $result;
    if (defined $ENV{$varname}) 
    {
	$result = $ENV{$varname};
	print "\$" . $varname . " = $result\n";
    }
    else { print ("WARNING: \$" . $varname . " undefined!"); }
    return $result;
}
