2006-11-09  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-05
	* fix bug regarding the FRL_LAST_SEGM flag not being set
	  appropriately in rare cases, spotted by Emilio
	* To distribute all valid feds among all superfragments, allow for
	  two different numbers of feds per superfragment. See
	  initFedBuffers(nFed), which is looking at (and possibly
	  changing!) nSuperFrag_ to distribute all FED Ids into
	  superfragments.

2006-11-03  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-04
	* add monitor parameters monitored by the 'real' BU
	* in "RANDOM" mode, only generate 'valid' FED IDs
	(DataFormats/FEDRawData/FEDNumbering); equaly distribute all valid
	FED IDs over superfragments. Don't use FED IDs which are 'left'
	due to the fact that nFEDs%nSF!=0.
	

2006-10-28  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-03
	* use new methods of Utilities/WebGUI V00-11-03 concerning the
	addition of ItemListener callbacks

2006-10-24  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-02
	* turn nbMBPerSec_ from xdata::UnsignedInteger32 into a
	  xdata::Double

2006-10-23  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-01
	* fix memory leak: in playback mode, evf::BU must assume ownership
          of the FEDRawDataCollection received from the
	  PlaybackRawDataProvider and properly clean it up, which it now does.

2006-10-23  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-00
	* introduce namespace evf::
	* evf::BU is now a statemachine
	  (Configure - Enable - Halt, Suspend - Resume,
	  see EventFilter/Utilities/EPStateMachine)
	* evf::BU contains a WebGUI (see EventFilter/Utilities) to take
          care of managing exported parameters and displaying them on
	  HyperDAQ webpages
	* evf::BU measures the number of events and number of MB per
	  second sent
	* evf::BU listens to the *change* of the 'mode' parameter and
          intercepts it, as the mode of the module (RANDOM/PLAYBACK) is
	  (only!) automatically determined by the absence/presence of a
	  PlaybackRawDataProvider (see EventFilter/Playback).
	* changed the internal memory managment, fedData_ and fedSize_ are
	  now simpler data structures that are allocated only once
	

2006-09-26  Philipp Schieferdecker  <philipp.schieferdecker@cern.ch>

	* tag V00-01-01
	* bug fix: set buResourceId in message (value is irrelevant)

2006-09-26  Philipp Schieferdecker  <philipp.schieferdecker@cern.ch>

	* tag V00-01-00
	* fedData_ is a member of BU now; it is a vector of fed buffers,
	the length of each buffer is kept in fedSize_. Now, the fed header
	and trailer (and their sizes!) are included in fedData_ and
	fedSize_ (used to be payload only).
	* BU::createSuperFrag creates the i2o message to send the
	superfragment to the requestor. The feds are taken from fedData_,
	considering fedSize_. The fed headers and trailers are filled with
	meaningful content, including the same crc check
	(EventFilter/Utilities/inteface/Crc.h) performed online.
	* for randomely generated FED data, the parameter names have
	changed to fedSizeMean_ and fedSizeWidth_. useFixedSize_ is now
	useFixedFedSize_.
	* BU::buAllocateNMsg is now going to look for the presence of a
	static pointer to a PlaybackRawDataProvider, see
	EventFilter/Playback. If it is non zero, fed data is not going
	to be generated randomely but read from this interface, which
	retrieves the fed collection of events recorded in a file.

