#!/bin/sh

command=$1

if [[ $SMDEV_FU_PROCESS_COUNT -gt 8 ]] ; then
    echo "Cannot handle more than 8 FUs."
    SMDEV_FU_PROCESS_COUNT=8
fi

# This map is ordered accoriding to the starting sequence of the applications.
# The order of stopping is different
app_name[1]=pt::atcp::PeerTransportATCP ; app_host[1]=STMGR_DEV_BU_HOST      ; app_port[1]=STMGR_DEV_BU_PORT
app_name[2]=pt::atcp::PeerTransportATCP ; app_host[2]=STMGR_DEV_SM_HOST      ; app_port[2]=STMGR_DEV_SM_PORT
app_name[3]=SMProxyServer               ; app_host[3]=STMGR_DEV_SMPROXY_HOST ; app_port[3]=STMGR_DEV_SMPROXY_PORT
app_name[4]=StorageManager              ; app_host[4]=STMGR_DEV_SM_HOST      ; app_port[4]=STMGR_DEV_SM_PORT
app_name[5]=evf::BU                     ; app_host[5]=STMGR_DEV_BU_HOST      ; app_port[5]=STMGR_DEV_BU_PORT
app_name[6]=evf::FUResourceBroker       ; app_host[6]=STMGR_DEV_BU_HOST      ; app_port[6]=STMGR_DEV_BU_PORT
app_name[7]=evf::FUEventProcessor       ; app_host[7]=STMGR_DEV_FU_HOST      ; app_port[7]=STMGR_DEV_FU_PORT
app_name[8]=evf::FUEventProcessor       ; app_host[8]=STMGR_DEV_FU2_HOST     ; app_port[8]=STMGR_DEV_FU2_PORT
app_name[9]=evf::FUEventProcessor       ; app_host[9]=STMGR_DEV_FU3_HOST     ; app_port[9]=STMGR_DEV_FU3_PORT
app_name[10]=evf::FUEventProcessor      ; app_host[10]=STMGR_DEV_FU4_HOST    ; app_port[10]=STMGR_DEV_FU4_PORT
app_name[11]=evf::FUEventProcessor      ; app_host[11]=STMGR_DEV_FU5_HOST    ; app_port[11]=STMGR_DEV_FU5_PORT
app_name[12]=evf::FUEventProcessor      ; app_host[12]=STMGR_DEV_FU6_HOST    ; app_port[12]=STMGR_DEV_FU6_PORT
app_name[13]=evf::FUEventProcessor      ; app_host[13]=STMGR_DEV_FU7_HOST    ; app_port[13]=STMGR_DEV_FU7_PORT
app_name[14]=evf::FUEventProcessor      ; app_host[14]=STMGR_DEV_FU8_HOST    ; app_port[14]=STMGR_DEV_FU8_PORT
app_name[15]=evf::FUEventProcessor      ; app_host[15]=STMGR_DEV_CONSFU_HOST ; app_port[15]=STMGR_DEV_CONSFU_PORT

# ATCP can only be configured/enabled once (emulating connect)
for appcount in 1 2 ; do
    state=`./paramGet.pl ${app_host[$appcount]} ${app_port[$appcount]} ${app_name[$appcount]} 0 stateName string`
    if [[ $state == "Halted" ]] ; then
        echo ""
        echo "========================================"
        echo "Connecting pt::atcp..."
        echo "========================================"
        ./sendSimpleCmdToApp ${app_host[$appcount]} ${app_port[$appcount]} ${app_name[$appcount]} 0 Configure
        ./sendSimpleCmdToApp ${app_host[$appcount]} ${app_port[$appcount]} ${app_name[$appcount]} 0 Enable
    fi
done

# if we're running the playback system, we need to send commands to the playback FUEP,
# and we should skip sending commands to the SMProxyServer.  So, we'll replace the
# SMPS in the application maps.
isPlayback=`echo $STMGR_CONFIG | grep -c 'sm_playback.xml'`
if [[ $isPlayback -gt 0 ]] ; then
    app_name[3]=evf::FUEventProcessor  ; app_host[3]=STMGR_DEV_BU_HOST ; app_port[3]=STMGR_DEV_BU_PORT
fi

if [[ $command == "Configure" || 
      $command == "Enable" ]] ; then
    sequence="$( seq 3 $(($SMDEV_FU_PROCESS_COUNT+6)) ) 15"
elif [[ $command == "Halt" ||
        $command == "Stop" ]] ; then
    sequence="5 $( seq 7 $(($SMDEV_FU_PROCESS_COUNT+6)) ) 6 4 3 15"
else
    echo "Unknown state machine command: $command"
    exit 1
fi


for appcount in $sequence ; do
    # the effect of this "if" is skip the consumer FU when running playback
    if [[ $isPlayback -eq 0 || $appcount != 15 ]] ; then
        echo ""
        echo "========================================"
        echo "Sending $command to ${app_name[$appcount]}..."
        echo "========================================"

        # Special delays
        if [[ $appcount == 15 && $command == "Enable" ]] ; then sleep 15 ; fi
        if  [[ $isPlayback -gt 0 && $appcount == 3 && $command == "Enable" ]] ; then sleep 10 ; fi

        ./sendSimpleCmdToApp ${app_host[$appcount]} ${app_port[$appcount]} ${app_name[$appcount]} 0 $command
        echo ""
        if [[ $command == "Stop" ]] ; then
            if [[ ${app_name[$appcount]} == "evf::BU" ]] ; then
                sleep 5
            elif [[ ${app_name[$appcount]} == "evf::FUResourceBroker" ]] ; then
                sleep 1
            elif [[ ${app_name[$appcount]} == "StorageManager" ]] ; then
                sleep 10
            elif [[ ${app_name[$appcount]} != "evf::FUEventProcessor" ]] ; then
                sleep 2
            fi
        else
            sleep 2
        fi
    fi
done
