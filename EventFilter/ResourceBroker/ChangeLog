2007-12-20  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-08-00
	* based on EventFilter/ShmBuffer V00-05-00
	* add 'watching' workloop: detect dead EP processes and kill EP
	processes if an event is being processed longer than 30s
	* use ShmBuffer process id to account for the number of client EPs
	* add custom webpage which displays client process status and shm
	cell status

2007-11-30  Emilio Meschi  <emilio.meschi@cern.ch>

	* tag V00-07-08
	* bugfix: modify FUResource to produce warning when fedid is 
	not in range, generate error message indicating duplicated fedids

2007-11-28  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-07-07
	* bugfix: lost events (events the total size of which exceed the
	size of a single raw shm cell) are correctly handled now.

2007-09-25  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-07-06
	* add parameter 'reasonForFailed'
	* FUResourceTable: throw an exception if the creation of the
	shared memory segment fails
	* therefore, FUResourceBroker now correctly goes to 'FAILED' state
	in this scenario

2007-08-28  Philipp Schieferdecker  <philipp.schieferdecker@cern.ch>

	* tag V00-07-05
	* adjust to new XMAS-ready version of Utilties/WebGUI

2007-08-21  Emilio Meschi  <emilio.meschi@cern.ch>
	* tag V00-07-04
	* FUResource.cc uses board_sense to avoid crash when running with
	fake data (inconsistent GTFE block) 

	
2007-08-21  Emilio Meschi  <emilio.meschi@cern.ch>
	* tag V00-07-03
	* Modified FUResource to set event number using 32-bit trigger
	no. from GTP Daq record 
	
2007-06-06  Emilio Meschi  <emilio.meschi@cern.ch>

	* tag V00-07-02
	* First pass modifications for xdaq 3.9 (mainly include paths of
	xdaq headers) 
	
2007-05-30  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-07-01
	* yet another bug fix which prevented a clean stop from time to
	time. But I am getting there ...

2007-05-24  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-07-00
	* requires EventFilter/ShmBuffer V00-04-00
	* add std::queue<uint> FUShmResourceTable::freeResourceIds_;
	FUShmResourceTable::allocateResource draws an id from it, but
	doesn't call FUResource::allocate(cell) yet; only upon receiving
	the first data msg from the BU will allocate be called and thus
	the shm lock be taken. Thus, the pending requests block maximally
	one shm (write-raw) lock.
	* this design fixes the halting/stopping problem, where no locks
	were available to post the ZERO event upon RB shut-down.

2007-05-22  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-14
	* have I finally fixed the syncronization properly? We'll see ...

2007-05-16  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-13
	* protect FUResourceTable::nbPending_ by lock()/unlock() when
	being incremented.

2007-05-15  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-12
	* possibly fixed the dead-lock problem: instead of locking both
	the application- and monitor-infospace via
	WebBUI::lockInfoSpaces() [dangerous!], only lock the
	monitor-inofspace instead.

2007-05-14  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-11
	* add check that each fedid ins encountered only once per event
	* remove useless semaphore from FUResourceBroker class

2007-05-08  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-10
	* bug fix: propagate doDumpEvents to FUResourceTable correctly.
	* bug fix: R-bit in FED trailer is 0x4, not 0x2.

2007-04-27  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-09
	* fix stopping/halting
	* remove counter nbProcessed (is aequivalent to nbDiscarded, the
	FUEventProcessor knows the real number)

2007-04-05  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-08
	* fix 'nbShmClients()' calculation, which is now assuming that
	each process attaches 3x: reader,output,dqm.
	* If FUShmOutputModule and/or FUShmDQMOutputService are not
	present, 'halt' will fail!
	
2007-04-02  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>
	
	* tag V00-06-07
	* set defaults of nbRecoCells and nbDqmCells to 8

2007-03-29  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-06
	* bugfix to SMProxy: add '\0' add the end of hltURL / hltClassName
	in the I2O message struct.

2007-03-28  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-05
	* fixed synchronization issue, broker has been witnessed to
	successfully send data to the storage manager now! :)
	* add option to dump events: doDumpEvents parameter (uint, one out
	of doDumpEvents will be dumped to /tmp/evtnumber.dump)
	* fixed doCrcCheck option

2007-03-27  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-04
	* adjust monitoring variable names. time to write a flash list!
	* report exception history in case state transition fails.
	
2007-03-26  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-03
	* based on EventFilter/ShmBuffer V00-03-03, which provides some
	crucial fixes!
	* initialize nRecoCells_ and nDqmCells_ to 1, 0 currently not
	allowed!
	* the sendData and sendDqm threads are now cleanly exited upon
	halt/stop.

2007-03-24  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-02
	* call startSendDataWorkLoop() and startSendDqmWorkLoop() in
	enabling()
	* replace TimerListener interface with a WorkLoop for monitoring
	* change monitoring variables according to what is done in BU

2007-03-22  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-01
	* fix to the handling of discards from the SM
	* tested with EventFilter/ShmBuffer V00-03-01

2007-03-21  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-00
	* based on EventFilter/ShmBuffer V00-03-00
	* based on EventFilter/Utilities V00-12-01
	* add SMProxy class to send (Event/DQM) data to the storage manager
	
2007-03-11  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-05-00
	* remove shmMode option: from now on, *only* FUShmReader is
	supported to consumer built events, the support of FUStdReader is
	stopped.
	* As a consequence, the FEDProvider interface is removed.
	* FUResourceTable::dropEvent() added.

2007-03-11  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-04-00
	* remove shared memory relevant classes from package, are
	transfered to EventFilter/ShmBuffer (V00-00-01)

2007-03-10  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-01
	* fix to discard-workloop in FUResourceTable, cleanly handle
	shutdown of connected processors now.

2007-03-08  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-00
	* compliant with FWCore reorganization of 140 series
	* based on evf::StateMachine available from EventFilter/Utilities
	V00-12-00
	
	
2007-02-24  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-01
	* add rcmsStateNotifier from xdaq2rc package: used to notify run
	control of the self-triggered transition into the target state.

2007-02-20  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-00
	* new asynchronous state model: upon receiving a command
	(e.g. 'configure'), a transitional state is entered; at
	the end of the transitional state (e.g. 'configuring'), the
	transition into the target state (e.g. 'ready') is
	auto-triggered.
	* missing: the run control function manager needs to be notified
	of the transition into the target state. This will be done using
	the xdaq2rc package, which will be part of xdaq in version
	3.8. Until xdaq 2.8. is part of the CMSSW release, this tag and
	following tags are not going to be published to the TC.
	* The stop and halt commands have been tested and verified to work
	well. After halt, the allocated shared memory will be released
	cleanly.
	

2007-02-12  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-01-02
	* add stopAction() to FUResourceBroker.
	* add shutDownClients() method to FUResourceTable: a bunch of
	empty events are going to be scheduled which indicate the
	FUShmReader to shut down operation.
	* if the FUEventProcessor is 'halted' *before* the Broker is
	halted, the allocated shared memory should be released now.

2007-01-18  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-01-01
	* add xdaq parameter 'doFedIdCheck' to FUResourceBroker, default
	is true, should be set to false if the processed events are known
	not to comply with the fedIds of the real CMS detector. This is
	e.g. the case for the eFEDs. 

2007-01-17  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-01-00
	* add integer 'buIdToBeDiscarded_' and two binary semaphores to
	FUShmBuffer. Via the methods 'scheduleForDiscard()' and
	'buIdToBeDiscarded()', another thread can wait for a buId to be
	registered, access that number thread-safely, and send a discard
	to the builder unit.
	* the above mentioned 'other thread' is implemented as a WorkLoop
	in FUResourceTable. FUResourceTable is now in charge of all
	communication with the builder unit. the method 'workLoopAction()'
	contains the code which (in shm mode only!) discards the last
	event processed, checks if more events should be requested, and if
	so, send the request.
	* the FUResourceTable object of the FUResourceBroker is now
	attempted to be destroyed in 'haltAction'. This fails if other
	processes (the ShmReaders) are still attached to the shared memory
	segments.

2006-11-29  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-00-04
	* fixed stopTimer()/initTimer() (crashed before when configuring a
	second time).
	* add FUResourceTable::reset(), call it when configuring a second
	time.
	* add FUResourceBroker::reset(), to set all counters *and*
	non-counters to their 'configured' state
	

2006-11-28  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-00-03
	* add parameter 'eventBufferSize' to FUResourceBroker, default is
	'4194304' (4MB).

2006-11-28  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-00-02
	* check if new events should be allocated in 'timeExpired' to
	avoid synchronization problem in shm mode. debug counter
	nbTimeExpired counts how often this takes place.
	* add 'nbShmClients' monitor variable, indicates the number of
	connected clients (processors) in shm mode.
	
2006-11-22  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-00-01
	* first import into CVS
	

