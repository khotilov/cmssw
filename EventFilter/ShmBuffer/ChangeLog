2008-10-14  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-07-00
	* add Kurt's changes
	* add fuProcessId and fuGuid to reco and dqm cell records
	* incorporate both fields in FUShmBuffer
	* add lumi block number (as a placeholder for now) to FUShmBuffer
	* add version number for error event data format
	

2008-06-13  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-06
	* fix to error event sending: set the discard counter to 1 (not
	2), since no client will ever schedule the raw cell for
	discard.

2008-06-02  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-05
	* update FUShmBuffer/FUShmRecoCell, pass outModId when the INIT
	message is written

2008-05-30  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-04
	* update to FUShmBuffer::writeErrorEventData()

2008-03-12  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-03
	* bugfix: remove assert statement from
	FUShmBuffer::discardRecoEvent()

2008-03-11  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-02
	* bug fix for deregistration of client process ids

2008-03-10  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-01
	* fix registration of several EP process ids: nClients_ set to 0
	in reset(), _NOT_ ctor

2008-01-26  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-06-00
	* add 'outModId' to FUShmRecoCell
	* add outModId to interface of FUShmBuffer::writeRecoEventData()
	* add new function 'FUShmBuffer::writeErrorEventData'

2008-01-25  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-05-01
	* fix to allow for the same (raw) event to be written (reco)
	several times.

2007-12-20  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-05-00
	* add process id and timestamp for raw cells

2007-09-25  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-04-01
	* remove some unnecessary functions from FUShmBuffer
	* accomodate the allocation of several FURecoCells for one single
	event

2007-05-24  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-04-00
	* add FUShmRawCell::index_, which is not necessarily equal to
	FUShmRawCell::fuResourceId_ anymore.
	* add method FUShmRawCell::setFuResourceId(uint).
	* call cell->clear() in FUShmBuffer::releaseRawCell();
	* remove FUShmRawCell::nSkip_ and anything related.

2007-03-29  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-04
	* bugfix: reco and dqm cells were not 'clear'ed before being
	declared 'free'.

2007-03-26  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-03
	* important bug fixes!

2007-03-24  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-02
	* fix waitRecoRead() and waitDqmRead()

2007-03-22  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-01
	* implement nice suggestion from Markus to have raw event cells
	properly discarded regardless of the event being selected or
	rejected.
	* fix to the discard chain for data events being acknowledged by
	the SM
	

2007-03-21  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-03-00
	* if I had a nickel for every change I made ...

2007-03-19  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-02-00
	* new API
	* remove class FUShmBufferCell
	* add classes FUShmRawCell, FUShmRecoCell, and FUShmDqmCell
	* add 'segmentationMode' flag, indicating if the buffer should be
	layout as one large shared memory segment ('false') or if each
	cell should be allocated in its own segment ('true').

2007-03-11  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-01-00
	* remove option 'ownsMemory': before, a FUShmBuffer[Cell] could be
	constructed in regular memory. Not anymore!
	* there should be no use case for this anymore, but if (?!)
	anybody would ever be tempted to construct a FUShmBufferCell
	outside the static accessors of FUShmBuffer, it *must* be via a
	'placement new': cell = new (addr) FUShmBufferCell(..), where addr
	better point to a valid chunk of shared memory. DON'T DO IT!
	* fixed typo in API: shm_dettach -> shm_detach (spotted by
	Emilio:)

2007-03-11  Philipp SCHIEFERDECKER  <philipp.schieferdecker@cern.ch>

	* tag V00-00-01
	* first import into CVS
	* the classes FUShmBuffer and FUShmBufferCell are being transfered
	from the EventFilter/ResourceBroker package, from which they are
	being removed.
	* The EventFilter/ResourceBroker/bin content is being transfered
	as well: it contains simple test applications to check the
	synchronization issues when concurrently writing/reading to the
	shared memory buffer.
	

