process GENSIM  = {
                                                                                                                                          
  # initialize  MessageLogger                                                                                                                                                                                                                                                                       
  include "FWCore/MessageService/data/MessageLogger.cfi"
  replace MessageLogger.cout.threshold = "ERROR"
  replace MessageLogger.cerr.default.limit = 10
  
  # initialize random number seeds
  service = RandomNumberGeneratorService
  {
     untracked uint32 sourceSeed = 123456789
     PSet moduleSeeds =
     {
        untracked uint32 VtxSmeared = 98765432
        untracked uint32 g4SimHits  = 11       }
  }
  
  
  # generation parameters
  source = PythiaSource 
  { 
    untracked int32 maxEvents = 2
    untracked int32 pythiaPylistVerbosity = 0
    untracked bool pythiaHepMCVerbosity = false
    untracked int32 maxEventsToPrint = 0

    PSet PythiaParameters = {

      # This is a vector of ParameterSet names to be read, in this order
      vstring parameterSets = {
        "pythiaUESettings", 
	"myParameters"
      }

      include "Configuration/Generator/data/PythiaUESettings.cfi"


   # User cards - name is "myParameters"
    vstring myParameters = {
      'MSEL=39         ! inclusive SUSY',
      'MSTP(51)=7      ! CTEQ 5L in pythia 6.2',
#      'IMSS(1)=2       ! mSUGRA',
#      'RMSS(4)=1.      ! SIGN(MU)',
#      'RMSS(5)=35.     ! TAN(BETA)',
#      'RMSS(16)=0.     ! A0',
#      'RMSS(1)=325.    ! M12',
#      'RMSS(8)=180.    ! M0'
       "IMSS(1) = 1               ! MSSM",
       "IMSS(3) = 1               ! gluino treatment",
       "IMSS(9) = 1               ! squark treatment ",
       "RMSS(1) = 164.46           ! m1  U1 Gaugino Mass",
       "RMSS(2) = 319.4           ! m2 SU2 Gaugino Mass",
       "RMSS(3) = 940.65           ! m gluino",
       "RMSS(4) = 507.26           ! mu",
       "RMSS(5) = 35                  ! tan b",
       "RMSS(6) = 339.67           ! slepton left",
       "RMSS(7) = 252.23           ! slepton right",
       "RMSS(8) = 882.62           ! left squark",
       "RMSS(9) = 848.06           ! right sdown",
       "RMSS(22) = 850.5           ! right sup",
########################################
       "RMSS(10) = 784.07          ! left squark 3 generation",
       "RMSS(11) = 815.22          ! sbottom right",
       "RMSS(12) = 686.19          ! stop right ",
       "RMSS(14) =  207.8           ! right  stau",
       "RMSS(13) =  321.         ! left  stau ",
#########################################
       "RMSS(15) = -964.92         ! Ab",
       "RMSS(16) = -694.18         ! At",
       "RMSS(17) = -172.75         ! Atau",
       "RMSS(19) = 546.              ! MA"
      }
   }
  }                                                                                                                                       
  
                                                                                                                                          
  # simulation parameters
  include "Configuration/StandardSequences/data/Simulation.cff"
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"

  path p1 = {psim}  # simulation
                                                                                                                                          
  # Event output
  include "Configuration/EventContent/data/EventContent.cff"
  module GEN-SIM = PoolOutputModule 
  { 
    using FEVTSIMEventContent
    untracked string fileName = "file:test.root"
    untracked PSet datasets ={
	untracked PSet dataset1 = {
	    untracked string dataTier = "GEN-SIM"
	}
    }
  }                                                                                                                                      
  endpath outpath = {GEN-SIM}
                                                                                                                                          
  schedule = { p1, outpath }
                                                                                                                                          
                                                                                                                                          
}
