# Configuration file for production of Z'-->mu+ mu-.
# Zprime2mu part is translation to CMSSW language of control cards used
# in PYTHIA and CMKIN since 2002; the rest is standard.
#
# 1 TeV Zssm, full interference, with a low-mass cutoff at 0.4 TeV.

process GENSIM = {

    # initialize MessageLogger
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.cout.threshold = "ERROR"
    replace MessageLogger.cerr.default.limit = 10

    # initialize random number seeds
    service = RandomNumberGeneratorService {
	untracked uint32 sourceSeed = 98765432
	PSet moduleSeeds = {
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 g4SimHits  = 11
	}
    }

    # event generation
    source = PythiaSource { 
	untracked int32 maxEvents = 10

# to printout pythia event record (call pylist)
	untracked int32 pythiaPylistVerbosity = 0
# to printout HepMC::GenEvent record (HepMC::GenEvent::print())
	untracked bool pythiaHepMCVerbosity = false
	untracked int32 maxEventsToPrint = 0

	PSet PythiaParameters = {

	    # This is a vector of ParameterSet names to be read, in this order
	    vstring parameterSets = {
		"pythiaUESettings",
		"Zprime2mu"
	    }

	    include "Configuration/Generator/data/PythiaUESettings.cfi"

	    vstring Zprime2mu = {
		"MSEL = 21            ! generate Zprime according to ISUB = 141",
# Treatment of Z'0/Z0/gamma interference
#	        "MSTP(44) = 2         ! only Z0 included",
#	        "MSTP(44) = 3         ! only Zprime included",
#	        "MSTP(44) = 4         ! only Z0/gamma interference included",
	        "MSTP(44) = 7         ! complete Zprime/Z/gamma interference",
# Z' mass
	        "PMAS(32,1) = 1000.0  ! PMAS(KC,1) is mass of particle KC",
# Range of allowed M values
#               "CKIN(1) =  200.      ! lower mass limit",
                "CKIN(1) =  400.      ! ",
#	        "CKIN(1) = 1000.      ! ",
#	        "CKIN(1) = 1500.      ! ",
#	        "CKIN(1) = 2000.      ! ",
#	        "CKIN(1) = 3000.      ! ",
#	        "CKIN(2) =  500.      ! upper mass limit",
# Decay modes
		"MDME(289,1) = 0      ! d + dbar",
		"MDME(290,1) = 0      ! u + ubar",
		"MDME(291,1) = 0      ! s + sbar",
		"MDME(292,1) = 0      ! c + cbar",
		"MDME(293,1) = 0      ! b + bbar",
		"MDME(294,1) = 0      ! t + tbar",
		"MDME(295,1) =-1      ! 4th generation q + qbar",
		"MDME(296,1) =-1      ! 4th generation q + qbar",
		"MDME(297,1) = 0      ! e-     + e+",
		"MDME(298,1) = 0      ! nu_e   + nu_ebar",
		"MDME(299,1) = 1      ! mu-    + mu+",
		"MDME(300,1) = 0      ! nu_mu  + nu_mubar",
		"MDME(301,1) = 0      ! tau-   + tau+",
		"MDME(302,1) = 0      ! nu_tau + nu_taubar",
		"MDME(303,1) =-1      ! 4th generation l- + l+",
		"MDME(304,1) =-1      ! 4th generation nu + nubar",
		"MDME(305,1) =-1      ! W+ + W-",
		"MDME(306,1) =-1      ! H+ + H-",
		"MDME(307,1) =-1      ! Z0 + gamma",
		"MDME(308,1) =-1      ! Z0 + h0",
		"MDME(309,1) =-1      ! h0 + A0",
		"MDME(310,1) =-1      ! H0 + A0"
	    }
	}
    }

    # simulation parameters
    include "Configuration/StandardSequences/data/Simulation.cff"
    include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"

    path p1 = {psim}  # simulation

    # Event output
    include "Configuration/EventContent/data/EventContent.cff"
    module GEN-SIM = PoolOutputModule {
     	using FEVTSIMEventContent
	untracked string fileName = "file:output.root"
	untracked PSet datasets = {
	    untracked PSet dataset1 = {
		untracked string dataTier = "GEN"
	    }
	    untracked PSet dataset2 = {
		untracked string dataTier = "SIM"
	    }
	}
    }

    endpath outpath = {GEN-SIM}

    schedule = {p1, outpath}
}

