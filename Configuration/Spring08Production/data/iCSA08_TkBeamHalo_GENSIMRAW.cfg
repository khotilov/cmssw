process GENSIMRAW =
{

  #include "Configuration/ReleaseValidation/data/Services.cff"
  include "Configuration/StandardSequences/data/SimulationRandomNumberGeneratorSeeds.cff"  
  include "Configuration/StandardSequences/data/FakeConditions.cff"
  include "FWCore/MessageService/data/MessageLogger.cfi"

  untracked PSet maxEvents = {untracked int32 input = 100}

  source = BeamHaloSource
  {
	untracked int32 GENMOD = 1
	untracked int32 LHC_B1 = 1
	untracked int32 LHC_B2 = 1
	untracked int32 IW_MUO = 1
	untracked int32 IW_HAD = 0
 	untracked double EG_MIN = 10.
	untracked double EG_MAX = 5000.

	untracked int32 shift_bx  = 0   // e.g. -2, -1 for previous bunch-crossing
	untracked double BXNS = 25.      // time between 2 bx s, in ns
  }

   module out = PoolOutputModule {
	untracked string fileName = "beamHalo.20X.raw.root"
	untracked PSet SelectEvents = { vstring SelectEvents = { "pPlus", "pMinus" }} 
   }


  include "Configuration/StandardSequences/data/Generator.cff"
  include "Configuration/StandardSequences/data/Reconstruction.cff"
  include "Configuration/StandardSequences/data/Simulation.cff"
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
  include "Configuration/StandardSequences/data/DigiToRaw.cff"
  sequence DigiToRawTrackerOnly = {  siPixelRawData , SiStripDigiToRaw , rawDataCollector }

#  include "Configuration/StandardSequences/data/L1Emulator.cff"

  include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 

  
  module minusSideFilter = BeamHaloGenFilter from "GeneratorInterface/GenFilters/data/BeamHaloGenFilter.cfi"
     replace minusSideFilter.trig_type          = -1
     replace minusSideFilter.scintillators_type = 0

  module plusSideFilter = BeamHaloGenFilter from "GeneratorInterface/GenFilters/data/BeamHaloGenFilter.cfi"
     replace plusSideFilter.trig_type          = 1
     replace plusSideFilter.scintillators_type = 0

  sequence afterGen = {psim , pdigi , DigiToRawTrackerOnly}

  path gen = { pgen }
  path pPlus  = { plusSideFilter  & afterGen}
  path pMinus = { minusSideFilter & afterGen}

  endpath e = { out }

  schedule = {gen , pPlus , pMinus, e}
}

