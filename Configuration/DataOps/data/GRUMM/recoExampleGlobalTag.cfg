process Rec = {
  untracked PSet maxEvents = {untracked int32 input = 1000}
#    service = Tracer {}

    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    include "CondCore/DBCommon/data/CondDBSetup.cfi"

#   service = MessageLogger {
#     untracked vstring destinations = { "cout" }
#     untracked PSet cout = {
#       untracked string threshold = "DEBUG"
#     }
#     untracked PSet log4cplus = {
#       untracked string threshold = "WARNING"
#     }
#   }


#
### input
#
#
## rootified raw data
#
    source = PoolSource {
       untracked vstring fileNames = {'file:GlobalMar08_37965_A.root'}
  }
#MLM}

### output module
#

   module FEVT = PoolOutputModule {
	untracked string fileName = 'reco-gr.root'
    untracked PSet dataset =
    {   
      untracked string dataTier = "RECO"
    }
    }

   untracked PSet configurationMetadata = 
  {
    untracked string version = "$Revision: 1.5.2.1 $"
    untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/Configuration/GlobalRuns/data/recoExampleGlobalTag.cfg,v $"
    untracked string annotation = "GRUMM Prompt Reco"
   }

   untracked PSet options = {
        untracked bool wantSummary = true  # default is false
     }

 # service = Timing {}

### Conditions (Global Tag is used here):
include "Configuration/GlobalRuns/data/FrontierConditionsGRGlobalTag.cff"
replace GlobalTag.connect = "oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
replace GlobalTag.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
replace GlobalTag.timetype = "runnumber"
replace GlobalTag.globaltag = "GRUMM::All"

### Magnetic fiuld: force mag field to be 0.0 tesla
#MLM include "Configuration/GlobalRuns/data/ForceZeroTeslaField.cff"
   es_module localUniform = UniformMagneticFieldESProducer {
      double ZFieldInTesla = 0.0
    }
   es_prefer localUniform = UniformMagneticFieldESProducer{}
   replace SteppingHelixPropagatorAny.useMagVolumes = false
   replace SteppingHelixPropagatorAlong.useMagVolumes = false
   replace SteppingHelixPropagatorOpposite.useMagVolumes = false


## reconstruction sequence for Global Run
include "Configuration/GlobalRuns/data/ReconstructionGR.cff"

## offline raw to digi
include "Configuration/GlobalRuns/data/RawToDigiGR.cff"


#    module testMagneticField = testMagneticField {}

    path allPath = {  RawToDigi , reconstructionGR  }

    endpath outpath = {FEVT}
}
