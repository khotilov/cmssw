process T = 
{
   # include services
   include "Configuration/ReleaseValidation/data/Services.cfi"

   # initialize  MessageLogger
   include "FWCore/MessageService/data/MessageLogger.cfi"

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 987654321
      }
   }

   untracked PSet options = {
     untracked bool makeTriggerResults = false
     vstring listOfTriggers = {}
   }

   source = PythiaSource 
   { 
     untracked int32 maxEvents = 100000
     untracked int32 pythiaPylistVerbosity = 0
     untracked bool pythiaHepMCVerbosity = false
     untracked int32 maxEventsToPrint = 0

     PSet PythiaParameters = {

       # This is a vector of ParameterSet names to be read, in this order
       vstring parameterSets = {
         "pythiaUESettings", 
         "pythiaDefault",
         "processParameters"
       }

       include "Configuration/Generator/data/PythiaUESettings.cfi"
       include "IOMC/GeneratorInterface/data/pythiaDefault.cff"

       vstring processParameters = {
           "MSEL=0                  !(D=1) to select between full user control (0, then use MSUB) and some preprogrammed alternative: QCD hight pT processes (1, then ISUB=11, 12, 13, 28, 53, 68), QCD low pT processes (2, then ISUB=11, 12, 13, 28, 53, 68, 91, 92, 94, 95)",
           "MSUB(14)=1             !f + fbar -> g + gamma",
           "MSUB(29)=1             !f + g -> f + gamma",
           "CKIN(3)=30.            !(D=0. GeV)  (CKIN 3,CKIN 4) = range of allowed values for pt hat for hard interactions, the upper limit is inactive if 'CKIN 4' is negative (D=-1. GeV)"

       }
     }
   }

   module genfilter = PythiaFilter
   {
     untracked int32 ParticleID = 22
     untracked double MinPt = 20. 
     untracked double MinPhi = -3.14159265358979323846 # in radians
     untracked double MaxPhi =  3.14159265358979323846
     untracked double MinEta = -2.7
     untracked double MaxEta = 2.7
     untracked int32 Status = 3
   }
   path p = {genfilter}

   # Vertex smearing	
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"

   # Geant4-based CMS Detector simulation
   include "SimG4Core/Application/data/SimG4Object.cfi"

   # Digitization of the simulated hits
   include "Configuration/Examples/data/DIGI.cff"

   # Reconstruction of physics objects
   include "Configuration/Examples/data/RECO.cff"

   # Order of execution
   path p1 = { genfilter, VtxSmeared, g4SimHits, digitization, reconstruction }

   # Event output
   include "Configuration/Egamma/data/EgammaOutput.cff"
   module GEN-SIM-DIGI-RECO = PoolOutputModule 
   { 
     untracked string fileName = "eg_gamjet_detsim_digi_reco.root"
     using EgammaOutput
     untracked PSet SelectEvents = {
        vstring SelectEvents = {"p"}
     }
   }

   endpath outpath = {GEN-SIM-DIGI-RECO}
}		
