process HiggsTau1lSKIM = {
#
# Z->ll (l=e,mu,tau) production selection plus "single lepton trigger"
#
# skim job to be run on EWK soup for:
#    jet->tau missid analysis of Tau group
#    Z+jets bkg. for qqh, h->invis. analysis
#
# filter efficiency for EWK soup is 0.141: ee+mumu - 0.131, tautau - 0.01
#
#   tested by A. Nikitenko  23 Sept. 2006
#   
#
 include "FWCore/MessageLogger/data/MessageLogger.cfi"
#  include "Configuration/EventContent/data/RECOOutput.cff"
#  include "Configuration/EventContent/data/AODOutput.cff"
 include "Configuration/EventContent/data/RECOSIMOutput.cff"
#  include "Configuration/EventContent/data/AODSIMOutput.cff"
#  include "Configuration/EventContent/data/FEVTOutput.cff"
#  include "Configuration/EventContent/test/objectCounting.cff"
 source = PoolSource {
                  untracked vstring fileNames = {'file:ewk_gen.root'}
		  untracked string catalog = 'PoolFileCatalog.xml'
		  untracked int32 maxEvents = -1
		  }

 module Zfilter  = MCProcessFilter
    {

     # vector of accepted processID's (logical OR)-- if absent all processID are accepted
      untracked vint32 ProcessID = {1}
 }

 module skim1lfilter  = MCSingleParticleFilter
    {

      # vector of accepted particles (logical OR)(charge is relevant)
      untracked vint32 ParticleID =  {11, -11, 13, -13}

      # vector of min pt values corresponding to above particles -- if absent values are 0
      untracked vdouble MinPt =  {15,15, 15,15}

      # vector of min pt values corresponding to above particles -- if absent values are -5
      untracked vdouble MinEta =  {-2.4,-2.4, -2.4,-2.4}

      # vector of min pt values corresponding to above particles -- if absent values are +5
      untracked vdouble MaxEta =  {2.4,2.4, 2.4,2.4}

     # vector of status codes corresponding to above particles -- if absent, all are accepted
      untracked vint32 Status =  {1, 1, 1, 1}

    }

 path p = { Zfilter, skim1lfilter }
 
 module out = PoolOutputModule {
    untracked string fileName = "ewk_gen_skim.root"
    using RECOSIMOutput
#   using AODSIMOutput
    untracked PSet SelectEvents = {
      vstring SelectEvents = {"p"}
    }
 }
 endpath outpath = { out}	
}
