process Zmumufilter = {

  ### keep the logging output to a nice level ###
  include "FWCore/MessageService/data/MessageLogger.cfi"

  source = PoolSource { 
    untracked vstring fileNames ={'file:/home/cmsprod/NewAnalysis/RECO_1_0_1_ZMuMu/FC68163E-2C38-DB11-B166-000E0C3F145A.RECO.root'}
    untracked int32 maxEvents = -1
  }

   module zmumu = MCParticlePairFilter
    {
      # vector of accepted particle ID for particle 1 (logical OR)(abslolute values of the ID's)
      untracked vint32 ParticleID1 = {13}
      # vector of accepted particle ID for particle 2 (logical OR)(abslolute values of the ID's)
      untracked vint32 ParticleID2 = {13}
      # accepted particle pair charge: -1 = Opposite Sign, +1 = Same Sign, 0 = both, default: 0)
      untracked int32 ParticleCharge = -1
  
      # vector of min pt values corresponding to above particles -- if absent values are 0
      untracked vdouble MinPt =  {5,5}
  
      # vector of min pt values corresponding to above particles -- if absent values are -5
      untracked vdouble MinEta =  {-2.55,-2.55}
  
      # vector of min pt values corresponding to above particles -- if absent values are +5
      untracked vdouble MaxEta =  {2.55, 2.55}
  
      # vector of status codes corresponding to above particles -- if absent, all are accepted
      untracked vint32 Status =  {1, 1}
  
      # minimum invariant mass of the pair
      untracked double MinInvMass = 50.
      
      # maximum invariant mass of the pair
      untracked double MaxInvMass = 130.
     
      # minimum delta phi (angle in transverse plain) between the pair (in radians)
      untracked double MinDeltaPhi = 0.
      
      # maximum delta phi (angle in transverse plain) between the pair (in radians)
      untracked double MaxDeltaPhi = 6.3
    }

  path p = {zmumu}

  include "Configuration/EventContent/data/RECOSIMOutput.cff"
    module out = PoolOutputModule {
    untracked string fileName = "recosimcsa06.root"
    untracked PSet SelectEvents = {
      vstring SelectEvents = { "p" }
    }
    using RECOSIMOutput
  }

  endpath o1 = { out }
}
