process BSMmc2eSkim = {

  source = PoolSource {
    untracked vstring fileNames = {"file:input.root"}
    untracked int32 maxEvents = -1
  }

  module  skimfilter1  = MCParticlePairFilter {

    # vector of accepted particle ID for particle 1 (logical OR)(abslolute values of the ID's)
    untracked vint32 ParticleID1 = {11}

    # vector of accepted particle ID for particle 2 (logical OR)(abslolute values of the ID's)
    untracked vint32 ParticleID2 = {11}

    # particle pairs charge flag -- (-1 = opposite sign, +1 = same sign, 0 = both, default: 0)
    untracked int32 ParticleCharge = 0

    # vector of min pt values corresponding to above particles -- if absent values are 0
    untracked vdouble MinPt =  {15,15}

    # vector of min pt values corresponding to above particles -- if absent values are -5
    untracked vdouble MinEta =  {-3,-3}

    # vector of min pt values corresponding to above particles -- if absent values are +5
    untracked vdouble MaxEta =  {3, 3}

    # vector of status codes corresponding to above particles -- if absent, all are accepted
    untracked vint32 Status =  {3, 3}

    # minimum invariant mass of the pair
    untracked double MinInvMass = 10
      
    # maximum invariant mass of the pair
    untracked double MaxInvMass = 10000
     
    # minimum delta phi (angle in transverse plain) between the pair (in radians)
    untracked double MinDeltaPhi = 0.
      
    # maximum delta phi (angle in transverse plain) between the pair (in radians)
    untracked double MaxDeltaPhi = 6.29
  }

path p = {skimfilter1}
 
  module out = PoolOutputModule {

    untracked string fileName = "CSA06_BSM_mc2e_Filter.root"
    untracked PSet SelectEvents = {
      vstring SelectEvents = {"p"}
    }
 }

 endpath outpath = { out}	
}
