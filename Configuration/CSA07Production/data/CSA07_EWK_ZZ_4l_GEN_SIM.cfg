process GENSIM  = {
 
    untracked PSet maxEvents = {untracked int32 input = 20000}

    untracked PSet configurationMetadata = {
	untracked string version = "$Revision: 1.1 $"
	untracked string name = "$Source: $"
	untracked string annotation = "EWK ZZ to leptons sample"
    }

    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.cout.threshold = "ERROR"
    replace MessageLogger.cerr.default.limit = 10
    
    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 1234567
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 9876543
	    untracked uint32 g4SimHits  = 11
	    untracked uint32 mix        = 12345 
	}
    }
    
    service = TimerService {
	untracked bool useCPUtime = true // set to false for wall-clock-time
    }
    
    source = PythiaSource 
    { 
	untracked int32 pythiaPylistVerbosity = 0
	untracked bool pythiaHepMCVerbosity = false
	untracked int32 maxEventsToPrint = 0
	
	# put here the cross section of your process (in pb)
	untracked double crossSection = 70.38
	# put here the efficiency of your filter (1. if no filter)
	untracked double filterEfficiency = 0.4177

	PSet PythiaParameters = {
	    
	    # This is a vector of ParameterSet names to be read, in this order
	    vstring parameterSets = {
		"pythiaUESettings", 
		"processParameters"
	    }
	    
	    include "Configuration/Generator/data/PythiaUESettings.cfi"
	    
	    vstring processParameters = {
                'MSEL=0                  !0=full user control (then use MSUB)',
                'MSUB(22)=1              !ffbar->Z/gamma Z/gamma',
                'MDME(174,1)=0           !Z decay into d dbar',
                'MDME(175,1)=0           !Z decay into u ubar',
                'MDME(176,1)=0           !Z decay into s sbar',
                'MDME(177,1)=0           !Z decay into c cbar',
                'MDME(178,1)=0           !Z decay into b bbar',
                'MDME(179,1)=0           !Z decay into t bbar',
                'MDME(182,1)=1           !Z decay into e- e+',
                'MDME(183,1)=0           !Z decay into nu_e nu_ebar',
                'MDME(184,1)=1           !Z decay into mu- mu+',
                'MDME(185,1)=0           !Z decay into nu_mu nu_mubar',
                'MDME(186,1)=0           !Z decay into tau- tau+',
                'MDME(187,1)=0           !Z decay into nu_tau nu_taubar'
	    }
 	}
    }
    
    module filter = ZZ4lFilter
    {
        untracked bool    Verbosity = true
        untracked vint32  LeptonID = {11, 13}
        untracked vdouble MaxPt = {10000., 10000.}
        untracked vdouble MinPt = {5., 3.}
        untracked vdouble MaxEta = {2.6, 2.5}
        untracked vdouble MinEta = {-2.6, -2.5}
        untracked int32   MaxEvents = 8000
    }

    include "Configuration/StandardSequences/data/Simulation.cff"
    include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff"
    
    path p1 = { filter, psim }

    # Event output
    include "Configuration/EventContent/data/EventContent.cff"
    
    module GEN-SIM = PoolOutputModule 
    { 
	using FEVTSIMEventContent
	untracked string fileName = "file:ZZ_4l.root"
	untracked PSet dataset ={
	    untracked string dataTier = "GEN-SIM"
        }
        untracked PSet SelectEvents = {
	    vstring SelectEvents = {"p1"}
	}       
    }
    
    endpath outpath = {GEN-SIM}
    
    schedule = { p1, outpath }
}
