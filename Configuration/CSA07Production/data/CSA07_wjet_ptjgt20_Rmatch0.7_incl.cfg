process Sim = {

   untracked PSet maxEvents = {untracked int32 input = 10}

   untracked PSet configurationMetadata = {
           untracked string version = "$Revision: 1.2 $"
           untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/Configuration/CSA07Production/data/CSA07_wjet_ptjgt20_Rmatch0.7_incl.cfg,v $"
           untracked string annotation = "W+jets inclusive sample with ptjet gt 20GeV and Rmatch eq 0.7"
   }

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10
    
   service = RandomNumberGeneratorService
   { 
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits  = 11
         untracked uint32 mix        = 12345
      }
   }
   # physics event generation
   #

  source = AlpgenSource
  { 
     
   untracked vstring fileNames = {"file:alpgen"}
  
   untracked int32 pythiaPylistVerbosity = 1
   untracked bool pythiaHepMCVerbosity = false


   PSet PythiaParameters = {

    # This is a vector of ParameterSet names to be read, in this order
    vstring parameterSets = { 
        "pythiaUESettings",
        "pythia"
    }
    include "Configuration/Generator/data/PythiaUESettings.cfi"
    vstring pythia = {
        'MSEL=0              !(D=1)',
        'MSTP(143)=1         !Call the matching routine in ALPGEN'
    }	
  }

# Alpgen parameters
    PSet GeneratorParameters = { 
      vstring parameterSets =  { "generator" }
      vstring generator = 
       {         
        "IXpar(2) = 0            ! inclus./exclus. sample: 0/1",
        "RXpar(1) = 20.          ! ETCLUS : minET(CLUS)",
        "RXpar(2) = 0.7          ! RCLUS  : deltaR(CLUS)"
      }
    }
  }



#this filters out empty (rejected by matching) events from the PoolOutputModule
   module filter = AlpgenEmptyEventFilter {}

   include "Configuration/StandardSequences/data/Simulation.cff"
   include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
   include "Configuration/StandardSequences/data/MixingNoPileUp.cff"

   path p1 = {filter,psim} # simulation

# Event output
   block ALPGENEventContent = {
    untracked vstring outputCommands = {
     "keep edmAlpgenInfoProduct_source_*_*",
     "keep edmAlpWgtFileInfoProduct_source_*_*"  
    }
   }
   include "Configuration/EventContent/data/EventContent.cff"
   replace FEVTSIMEventContent.outputCommands += ALPGENEventContent.outputCommands
  
  
   module GEN-SIM = PoolOutputModule 
   { 
     	using FEVTSIMEventContent
	untracked string fileName = "test.root"
    	untracked PSet dataset ={	
        	untracked string dataTier = "GEN-SIM"
    		}
        untracked PSet SelectEvents = {
           vstring SelectEvents = {"p1"}
        }
   }

   endpath outpath = {GEN-SIM}

}
