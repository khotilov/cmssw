# tested in CMSSW_1_6_7
process Reco = {
    untracked PSet configurationMetadata = {
	untracked string version = "$Revision: 1.3 $"
	untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/Configuration/ReleaseValidation/data/CosmicMuonsUndergroundTrackerDigiReco.cfg,v $"
	untracked string annotation = "cosmic reaching tracker: digi+reco"
    }

    # initialize  MessageLogger
    include "FWCore/MessageService/data/MessageLogger.cfi"
##    replace MessageLogger.statistics += "infos"
##    replace MessageLogger.infos = {
##	untracked string threshold = "INFO"
##	untracked PSet INFO =       { untracked int32 limit = 100  }
#    replace MessageLogger.statistics += "warnings" # "cout"
#    replace MessageLogger.warnings = {
#	untracked string threshold = "WARNING"
#	untracked PSet WARNING =   { untracked int32 limit = 100  }
#
#	untracked PSet default =    { untracked int32 limit = 10000000  }
#	untracked PSet FwkReport =  { untracked int32 limit = 10 }# 10000000 
#	untracked PSet Root_NoDictionary = { untracked int32 limit = 0 }
#    }
    # Monitor
    untracked PSet options = {
	untracked bool wantSummary = true
    }

    service = RandomNumberGeneratorService {
	PSet moduleSeeds = {
#	    untracked uint32 mix = 3456
	    untracked uint32 siPixelDigis = 132435
	    untracked uint32 siStripDigis = 465768
	}
    }
    
    untracked PSet  maxEvents = {
	untracked int32 input = 100
    }
    
    source = PoolSource {
	untracked uint32 skipEvents = 0
	untracked vstring fileNames = {
	    # in total there are six files or the cosmics sample generated with CMSSW_1_4_4
	    '/store/mc/2007/7/10/CSA07-CosmicMuonsUndergroundTrackerSim-2023/0007/6C33D185-0A30-DC11-A300-003048322C52.root' #,
	    #'/store/mc/2007/7/10/CSA07-CosmicMuonsUndergroundTrackerSim-2023/0007/C6B7DA23-4330-DC11-AC2F-003048892289.root',
	    #'/store/mc/2007/7/10/CSA07-CosmicMuonsUndergroundTrackerSim-2023/0007/C89F9BE8-8C30-DC11-BCA7-00304870DB05.root',
	    #'/store/mc/2007/7/10/CSA07-CosmicMuonsUndergroundTrackerSim-2023/0007/DA6A844C-E12F-DC11-9365-003048322C52.root',
	    #'/store/mc/2007/7/10/CSA07-CosmicMuonsUndergroundTrackerSim-2023/0008/18AF1883-5F32-DC11-AC25-001731A2870D.root',
	    #'/store/mc/2007/7/10/CSA07-CosmicMuonsUndergroundTrackerSim-2023/0008/2EA2B92A-DC31-DC11-8A17-003048892649.root'
	}
    }
# 
# include for conditions
#
# This complains in 168 (still!!) about missing 'DTParametrizedDriftAlgo_CSA07':
#    include "Configuration/StandardSequences/data/FakeConditions.cff"
# so I include stuff for pixel and strip, copied from it:
########################################################################
## start of copy from FakeConditions
    include "CalibTracker/Configuration/data/Tracker_FakeAlignment.cff"
    #
    # Pixel calib
    #
    include "CalibTracker/Configuration/data/SiPixel_FakeGain.cff"
    # the following is in reality not needed because the default is false,
    # need to put the "true" replace in Frontier.....
    replace siPixelClusters.UseCalibDataFromDB = false
    #
    # Strip calib
    #
    include "CalibTracker/Configuration/data/SiStrip_FakeGain.cff"
    include "CalibTracker/Configuration/data/SiStrip_FakeNoise.cff"
    # Adjust to noise in peakmode:
    replace SiStripNoiseFakeESSource.NoiseStripLengthSlope = 38.8
    replace SiStripNoiseFakeESSource.NoiseStripLengthQuote = 414.
    include "CalibTracker/Configuration/data/SiStrip_FakePedestals.cff"
    include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"
## end of copy from FakeConditions
########################################################################

#
# Includes for digi step:
#
    include "SimTracker/Configuration/data/SimTracker.cff"
    include "SimGeneral/Configuration/data/SimGeneral.cff"
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 

#
# Adjustments for digitisation:
#
    # Note for siPixelDigis: 
    # Mean tof in pixel is about 0 since generator time stamp is shifted by 30,
    # so it is fine to have the normal +/-12.5ns window for digitisation.
    # We will not get all pixel hits, but such is life: 
    #  "In reality it might be hard to adjust the
    #   clock for the cosmics precise enough to get the full
    #   25ns, so the effective window might be even smaller." (Danek Kotlinski)
    # In future, when the generator time stamp is not shifted, one might
    # use the new feature that the start and end of the read out window can be
    # configured in siPixelDigis

    replace siStripDigis.APVpeakmode = true 
    # From Patrizia Azzi for peak mode (Kerstin does not use it!), was {0.86,0.07} for 15X:
    replace siStripDigis.CouplingCostantPeak  = {0.94,0.03}
    # Already shifted by 30 in generator, but cf. note about siPixelDigis above:
    # replace siStripDigis.CosmicDelayShift = 30.

#
# Includes for local tracker reco
#
    include "RecoLocalTracker/Configuration/data/RecoLocalTracker.cff"
    # Should be default (and peak mode noise via SiStripNoiseFakeESSource): 
    #    replace siStripClusters.ChannelThreshold    = 2.0
    #    replace siStripClusters.SeedThreshold       = 3.0
    #    replace siStripClusters.ClusterThreshold    = 5.0
    # no changes for pixel clustering

##
## Includes for cosmic track finding (RS not ready for cosmics at P5)
##
## Should use triplets in B-field, but in 1_6_8 still produces a lot of nan in CosmicTrackFinderP!
##    include "RecoTracker/SpecialSeedGenerators/data/CosmicSeedP5Triplets.cff"
    include "RecoTracker/SpecialSeedGenerators/data/CosmicSeedP5Pairs.cff"
    include "RecoTracker/SingleTrackPattern/data/CosmicTrackFinderP5.cff"
    sequence cosmicsP5 = {cosmicseedfinderP5, cosmictrackfinderP5}

    # GF: The following include works - but not with 1_6_8 python parser!
    # So we have to do a lot of copy and paste here... ;-(
    # include "RecoTracker/SpecialSeedGenerators/data/CombinatorialSeedGeneratorForCosmicsP5.cff"
    ### replace combinatorialcosmicseedfinderP5.Charges = {-1, 1} GF: Would that make sense?
    ### => GF: No, at least if only seeding in TEC, I spend a bit more CPU, but do not gain seeds!
    #######################################################################################
    # magnetic field
    #include "Geometry/CMSCommonData/data/cmsMagneticFieldXML.cfi"
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    # cms geometry
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    # tracker geometry
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    # tracker numbering
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    #stripCPE
    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
    #pixelCPE
    include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
    #TransientTrackingBuilder
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilderWithoutRefit.cfi"
    #recHitMatcher
    #include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
    #seeding module
    # GF: Again the following 'module .. from ..' does not work with buggy python parser.
    # So copy/paste also from CombinatorialSeedGeneratorForCosmics.cfi, but change 'SetMomentum',
    #    'UseScintillatorsConstraint', 'OrderedHitsFactoryPSets' (and skip to define unused scintillators)
    # module combinatorialcosmicseedfinderP5 = combinatorialcosmicseedfinder from "RecoTracker/SpecialSeedGenerators/data/CombinatorialSeedGeneratorForCosmics.cfi"
    ######################################################################################
    block layerInfo = {
	PSet TIB = {
	    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
	    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
	    string TTRHBuilder = "WithTrackAngle"
	}
	PSet TOB = {
	    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
	    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
	    string TTRHBuilder = "WithTrackAngle"
	}
	PSet TEC = {
	    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
	    InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
	    string TTRHBuilder = "WithTrackAngle"
	    untracked bool useRingSlector = false
	    int32 minRing = 5
	    int32 maxRing = 7
	}
    }
  
    module combinatorialcosmicseedfinderP5 = CtfSpecialSeedGenerator {
	bool SetMomentum = false # true
	vint32 Charges = {-1} # {-1, 1} does not help, cf. above
	double SeedMomentum = 1    #initial momentum in GeV !!!set to a lower value for slice test data     
	string TTRHBuilder = "WithTrackAngle"       
	bool UseScintillatorsConstraint = false # true
	bool CheckHitsAreOnDifferentLayers = false
	bool SeedsFromPositiveY = true
	PSet RegionFactoryPSet = {
	    #string ComponentName = "RectangularEtaPhiTrackingRegionProducer"
	    #include "RecoTracker/TkTrackingRegions/data/RectangularEtaPhiTrackingRegion.cfi"
	    string ComponentName = "GlobalRegionProducer" 
	    include "RecoTracker/TkTrackingRegions/data/GlobalTrackingRegion.cfi"
	}
  
	VPSet OrderedHitsFactoryPSets = {
	    {   string ComponentName = "GenericTripletGenerator"
		string NavigationDirection  = "outsideIn"
		string PropagationDirection = "alongMomentum"
		PSet LayerPSet = {
		    vstring layerList = { "TOB4+TOB5+TOB6",
			"TOB3+TOB5+TOB6",
			"TOB3+TOB4+TOB5",
			"TOB2+TOB4+TOB5",
			"TOB3+TOB4+TOB6",
			"TOB2+TOB4+TOB6"
		    }
		    using layerInfo
		}
	    },    #also some pairs in the barrel, in case the triplet fail. If the triplet secceds, the pairs should be skipped by the trajectory builder 
	    {   string ComponentName = "GenericPairGenerator"
		string NavigationDirection  = "outsideIn"
		string PropagationDirection = "alongMomentum"
		PSet LayerPSet = {
		    vstring layerList = {   "TOB5+TOB6",
			"TOB4+TOB5"
		    }
		    using layerInfo
		}
	    },   #for the TEC we use pairs (Fasthelix not working properly with ss TEC hits)
	    # genereator for TEC+ outsideIn
	    {   string ComponentName = "GenericPairGenerator"
		string NavigationDirection  = "outsideIn"
		string PropagationDirection = "alongMomentum"
		PSet LayerPSet = {
		    vstring layerList = {   "TEC1_pos+TEC2_pos",
			"TEC2_pos+TEC3_pos",
			"TEC3_pos+TEC4_pos",
			"TEC4_pos+TEC5_pos",
			"TEC5_pos+TEC6_pos",
			"TEC6_pos+TEC7_pos",
			"TEC7_pos+TEC8_pos",
			"TEC8_pos+TEC9_pos"
		    }
                 #using layerInfo
		    PSet TEC = {
			InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
			InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
			string TTRHBuilder = "WithTrackAngle"
			untracked bool useRingSlector = true
			int32 minRing = 5
			int32 maxRing = 7
		    }
		}
	    },   #generator for TEC+ insideOut
	    {   string ComponentName = "GenericPairGenerator"
		string NavigationDirection  = "insideOut"
		string PropagationDirection = "alongMomentum"
		PSet LayerPSet = {
		    vstring layerList = {   "TEC1_pos+TEC2_pos",
			"TEC2_pos+TEC3_pos",
			"TEC3_pos+TEC4_pos",
			"TEC4_pos+TEC5_pos",
			"TEC5_pos+TEC6_pos",
			"TEC6_pos+TEC7_pos",
			"TEC7_pos+TEC8_pos",
			"TEC8_pos+TEC9_pos"
		    }
		    #using layerInfo
		    PSet TEC = {
			InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
			InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
			string TTRHBuilder = "WithTrackAngle"
			untracked bool useRingSlector = true
			int32 minRing = 5
			int32 maxRing = 7
		    }
		}
	    },    #generator for TEC- outsideIn
	    {   string ComponentName = "GenericPairGenerator"
		string NavigationDirection  = "outsideIn"
		string PropagationDirection = "alongMomentum"
		PSet LayerPSet = {
		    vstring layerList = {   "TEC1_neg+TEC2_neg",
			"TEC2_neg+TEC3_neg",
			"TEC3_neg+TEC4_neg",
			"TEC4_neg+TEC5_neg",
			"TEC5_neg+TEC6_neg",
			"TEC6_neg+TEC7_neg",
			"TEC7_neg+TEC8_neg",
			"TEC8_neg+TEC9_neg"
		    }
		    #using layerInfo
		    PSet TEC = {
			InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
			InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
			string TTRHBuilder = "WithTrackAngle"
			untracked bool useRingSlector = true
			int32 minRing = 5
			int32 maxRing = 7
		    }
		}
	    },   #generator for TEC- insideOut 
	    {   string ComponentName = "GenericPairGenerator"
		string NavigationDirection  = "insideOut"
		string PropagationDirection = "alongMomentum"
		PSet LayerPSet = {
		    vstring layerList = {   "TEC1_neg+TEC2_neg",
			"TEC2_neg+TEC3_neg",
			"TEC3_neg+TEC4_neg",
			"TEC4_neg+TEC5_neg",
			"TEC5_neg+TEC6_neg",
			"TEC6_neg+TEC7_neg",
			"TEC7_neg+TEC8_neg",
			"TEC8_neg+TEC9_neg"
		    }
		    #using layerInfo
		    PSet TEC = {
			InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
			InputTag rphiRecHits    = siStripMatchedRecHits:rphiRecHit
			string TTRHBuilder = "WithTrackAngle"
			untracked bool useRingSlector = true
			int32 minRing = 5
			int32 maxRing = 7
		    }
		}
	    }
	}
#	# PSet UpperScintillatorParameters = {} # skip copy: UseScintillatorsConstraint = false
#	# PSet LowerScintillatorParameters = {} # dito
    }
#    # GF end replace from CombinatorialSeedGeneratorForCosmics.cfi
#    #####################################################################
#    # GF: end copy and paste from CombinatorialSeedGeneratorForCosmicsP5.cff
#    #######################################################################################
    include "RecoTracker/CkfPattern/data/CkfTrackCandidatesP5.cff"
    include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterialP5.cff"
    replace GroupedCkfTrajectoryBuilderP5.maxLostHit = 2
    replace GroupedCkfTrajectoryBuilderP5.maxConsecLostHit = 2

    sequence ckfCosmicsP5 = {
	combinatorialcosmicseedfinderP5, ckfTrackCandidatesP5,
	ctfWithMaterialTracksP5
    }

#
# Event output
#
    include "Configuration/EventContent/data/EventContent.cff"
    replace FEVTSIMEventContent.outputCommands += "keep *_source_*_*"
    replace FEVTSIMEventContent.outputCommands += "keep *_*P5_*_*"
    replace FEVTSIMEventContent.outputCommands += "drop TrajectorysrecoTracksushortedmOneToOneedmAssociationMap_*_*_*"

    module FEVTSIM = PoolOutputModule { 
	using FEVTSIMEventContent
	untracked string fileName = 
	"file:/tmp/cosmics_tracker_gen_sim_digi_reco.root"
        untracked PSet dataset ={
            untracked string dataTier = "GEN-SIM-DIGI-RECO"
        }
    }

#
# Order of execution: restrict to tracker.
#
    sequence seqUpToLocal = {
 	mix, trDigi, trackingParticles, # digi only tracker
	trackerlocalreco # local reco only in tracker
    }

    path p = {
	seqUpToLocal,
	cosmicsP5 & ckfCosmicsP5 # cosmic track finder and ckf for cosmics
    }

    endpath end = { FEVTSIM }

################################################
# 
# ALCARECO part is following:
#
    include "Configuration/Examples/data/AlCaReco.cff"
    include "Configuration/EventContent/data/AlCaRecoOutput.cff"

    # Add source here for standalone ALCARECO production!

    module poolALCARECOTkAlCosmics = PoolOutputModule { 
	untracked string fileName = "file:/tmp/ALCARECOTkAlCosmics.root"
	untracked PSet dataset = {
	    untracked string dataTier = "ALCARECO"
	    untracked string filterName = "ALCARECOTkAlCosmics" 
	}
	using OutALCARECOTkAlCosmics
    }

    path pathALCARECOTkAlCosmicsCTF      = { 
	seqUpToLocal, ckfCosmicsP5, # skip for standalone ALCARECO production
	seqALCARECOTkAlCosmicsCTF 
    }
    path pathALCARECOTkAlCosmicsCosmicTF = { 
	seqUpToLocal, cosmicsP5,    # skip for standalone ALCARECO production
	seqALCARECOTkAlCosmicsCosmicTF
    }

    endpath endALCA = { poolALCARECOTkAlCosmics }
#
# ALCARECO part ends here!
#
################################################

}
