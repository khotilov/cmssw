process Sim  = {

   untracked PSet maxEvents  =  {untracked int32 input  = 1 }

   # Add configurationMetadata -- Jeff
   untracked PSet configurationMetadata = {
	#! Leave this text alone
        untracked string version = "$Revision: 1.1 $"
	#! Leave this text alone
	untracked string name = $Source: /local/projects/CMSSW/rep/CMSSW/Configuration/CSA07Production/data/CSA07SUSYBSM_ZprimeWWtoJets_2000_GEN_SIM.cfg,v $"
	#! Check that this has been supplied
	untracked string annotation = "CSA07SUSYBSM_ZprimeWWtoJets_2000"
   }
   
   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10



   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 1234567
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 9876543
         untracked uint32 g4SimHits = 9876
	 untracked uint32 mix = 12345   
      }
   }
   
  source = PythiaSource 
  { 

  untracked int32 pythiaPylistVerbosity = 0
  untracked bool pythiaHepMCVerbosity = false
  untracked int32 maxEventsToPrint = 1
  
  # put here the cross section of your process (in pb)
  untracked double crossSection =  .006017
  # put here the efficiency of your filter (1. if no filter)
  untracked double filterEfficiency = 1.

  PSet PythiaParameters = {

    # This is a vector of ParameterSet names to be read, in this order
    vstring parameterSets = {
      "pythiaUESettings", 
      "processParameters"
    }

  include "Configuration/Generator/data/PythiaUESettings.cfi"

# Zprime decays to W W, with W decaying to jets.
# (W -> u dbar, u sbar, u bbar, c dbar, c sbar, and c bbar)
  vstring processParameters = {
	    'PMAS(32,1)= 2000.          !mass of Zprime',
            'MSEL=0                    !(D=1) to select between full user control (0, then use MSUB) and some preprogrammed alternative',
            'MSTP(44) = 3              !only select the Z process',
            'MSUB(141) = 1             !ff  gamma z0 Z0',
            'MDME(289,1)= 0            !Zprime->d dbar',
            'MDME(290,1)= 0            !Zprim->u ubar',
            'MDME(291,1)= 0            !Zprime->s sbar',
            'MDME(292,1)= 0            !Zprime->c cbar',
            'MDME(293,1)= 0            !Zprime->b bar',
            'MDME(294,1)= 0            !Zprime->t tbar',
            'MDME(295,1)= 0            !Zprime->4th gen Q Qbar',
            'MDME(296,1)= 0            !Zprime->4th gen Q Qbar',
            'MDME(297,1)= 0            !Zprime->e e',
            'MDME(298,1)= 0            !Zprime->neutrino e e',
            'MDME(299,1)= 0            !Zprime-> mu mu',
	    'MDME(300,1)= 0            !Zprime->neutrino mu mu',
            'MDME(301,1)= 0            !Zprime->tau tau',
            'MDME(302,1)= 0            !Zprime->neutrino tau tau',
            'MDME(303,1)= 0            !Zprime->4th generation lepton',
            'MDME(304,1)= 0            !Zprime->4th generation neutrino',
            'MDME(305,1)= 1            !Zprime->W W',
            'MDME(306,1)= 0            !Zprime->H+ H-',
            'MDME(307,1)= 0            !Zprime->Z gamma',
            'MDME(308,1)= 0            !Zprime->Z h0',
            'MDME(309,1)= 0            !Zprime->h0 A0',
            'MDME(310,1)= 0            !Zprime->H0 A0',
            'MDME(190,1)= 1            !W+ ->dbar u',
            'MDME(191,1)= 1            !W+ ->dbar c',
            'MDME(192,1)= 0            !W+ ->dbar t',
            'MDME(193,1)= 0            !W+ ->dbar tprime',
            'MDME(194,1)= 1            !W+ ->sbar u',
            'MDME(195,1)= 1            !W+ ->sbar c',
	    'MDME(196,1)= 0            !W+ ->sbar t',
            'MDME(197,1)= 0            !W+ ->sbar tprime',		
            'MDME(198,1)= 1            !W+ ->bbar u',
            'MDME(199,1)= 1            !W+ ->bbar c',
            'MDME(200,1)= 0            !W+ ->bbar t',
            'MDME(201,1)= 0            !W+ ->bbar tprime',
            'MDME(202,1)= 0            !W+ ->bprimebar u',
            'MDME(203,1)= 0            !W+ ->bprimebar c',
            'MDME(204,1)= 0            !W+ ->bprimebar t',
            'MDME(205,1)= 0            !W+ ->bprimebar tprime',
            'MDME(206,1)= 0            !W+ ->e+ nu_e',
            'MDME(207,1)= 0            !W+ ->mu+ nu_mu',
            'MDME(208,1)= 0            !W+ ->tau+ nu_tau',
            'MDME(209,1)= 0            !W+ ->tauprime+ nuprime_tau'  
    }
 
   }
  }

# ADDED FROM MALINA'S EXAMPLE -- Jeff

#! The submitter can optionally include a filter (anywhere).

   include "Configuration/StandardSequences/data/Simulation.cff"
   #! The submitter can select different vertex smearing if they want, but must select something
   include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
   #! The submitter can select different mixing/pileup if they want, but must select something
   include "Configuration/StandardSequences/data/MixingNoPileUp.cff"

   #! The path shouldn't include anything besides a filter (optional) and psim.
   #! The filter must come before psim.
   path p1 = {psim} # simulation

   # Event output
   include "Configuration/EventContent/data/EventContent.cff"
   module GEN-SIM = PoolOutputModule 
   { 
     	using FEVTSIMEventContent
	untracked string filename = "CSA07SUSYBSM_ZprimeWWtoJets_2000_GEN_SIM.root"
    	untracked PSet dataset ={	
        	untracked string dataTier = "GEN-SIM"
	}
   }

   endpath outpath = {GEN-SIM}

   #! Submitters may not supply a schedule because path and endpath 
   #! work by themselves.  If the user has not supplied a schedule, 
   #! then just put the path followed by endpath (if provided) into 
   #! a schedule you write. If the user provides multiple paths, 
   #! then you need to ask them the correct order for schedule. Any 
   #! sequences written by the submitter should be included in a 
   #! path somewhere, not explicitly in the schedule.
   schedule = {p1,outpath}
  
}


  


