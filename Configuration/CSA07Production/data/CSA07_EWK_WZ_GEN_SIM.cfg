process Sim  = {

      //==========================================================
      //TimerService Info:
      //Used CPU-time for timing information
      //==========================================================
      //Merging stats 4800508 0 6217606 960 0
      //DDCompare stat 11235831 93221630
      //Sib rot stats same/diff 21909020 10687288
      //
      //Main Thread CPU elapsed time 907




   untracked PSet maxEvents = {untracked int32 input = 10}

   untracked PSet configurationMetadata = {
           untracked string version = "$Revision: 1.1 $"
           untracked string name = "$Source: /local/projects/CMSSW/rep/CMSSW/Configuration/CSA07Production/data/CSA07_EWK_WZ_GEN_SIM.cfg,v $"
           untracked string annotation = "EWK WZ to 3l (W->e/mu/tau, Z->e/mu)  sample"
   }


   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10
      
   service = RandomNumberGeneratorService
   { 
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits  = 11
         untracked uint32 mix        = 12345
      }
   }

    service = TimerService {
	untracked bool useCPUtime = true // set to false for wall-clock-time
    }

  source = PythiaSource 
  { 
      untracked int32 pythiaPylistVerbosity = 0
      untracked bool pythiaHepMCVerbosity = false
      untracked int32 maxEventsToPrint = 0
  
      # put here the cross section of your process (in pb)
	untracked double crossSection = 0.585
      # put here the efficiency of your filter (1. if no filter)
      untracked double filterEfficiency = 1



      PSet PythiaParameters = {

            # This is a vector of ParameterSet names to be read, in this order
            vstring parameterSets = {
                  "pythiaUESettings", 
                  "processParameters"
            }

            include "Configuration/Generator/data/PythiaUESettings.cfi"
 
            vstring processParameters = {
		"MSEL=0             !User defined processes",
                "MSUB(23)=1              !ffbar->Z/gamma W",
		# Z decays
		"MDME(174,1)=0            !Z decay into d dbar",
		"MDME(175,1)=0            !Z decay into u ubar",
		"MDME(176,1)=0            !Z decay into s sbar",
		"MDME(177,1)=0            !Z decay into c cbar",
		"MDME(178,1)=0            !Z decay into b bbar",
		"MDME(179,1)=0            !Z decay into t tbar",
		"MDME(180,1)=-1           !Z decay into b' b'bar",
		"MDME(181,1)=-1           !Z decay into t' t'bar",
		"MDME(182,1)=1            !Z decay into e- e+",
		"MDME(183,1)=0            !Z decay into nu_e nu_ebar",
		"MDME(184,1)=1            !Z decay into mu- mu+",
		"MDME(185,1)=0            !Z decay into nu_mu nu_mubar",
		"MDME(186,1)=0            !Z decay into tau- tau+",
		"MDME(187,1)=0            !Z decay into nu_tau nu_taubar",
		"MDME(188,1)=-1           !Z decay into tau'- tau'+",
		"MDME(189,1)=-1           !Z decay into nu'_tau nu'_taubar",
		# W decays
		"MDME(190,1)=0      !W decay into dbar u",
		"MDME(191,1)=0      !W decay into dbar c",
		"MDME(192,1)=0      !W decay into dbar t",
		"MDME(193,1)= -1    !W decay into dbar t'",
		"MDME(194,1)=0      !W decay into sbar u",
		"MDME(195,1)=0      !W decay into sbar c",
		"MDME(196,1)=0      !W decay into sbar t",
		"MDME(197,1)=-1     !W decay into sbar t'",
		"MDME(198,1)=0      !W decay into bbar u",
		"MDME(199,1)=0      !W decay into bbar c",
		"MDME(200,1)=0      !W decay into bbar t",
		"MDME(201,1)=-1     !W decay into bbar t'",
		"MDME(202,1)=-1     !W decay into b'bar u",
		"MDME(203,1)=-1     !W decay into b'bar c",
		"MDME(204,1)=-1     !W decay into b'bar t",
		"MDME(205,1)=-1     !W decay into bbar t'",
		"MDME(206,1)=1      !W decay into e+ nu_e",
		"MDME(207,1)=1      !W decay into mu+ nu_mu",
		"MDME(208,1)=1      !W decay into tau+ nu_tau",
		"MDME(209,1)=-1     !W decay into tau'+ nu'_tau"

            }
      }

   }

   include "Configuration/StandardSequences/data/Simulation.cff"
   include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
   include "Configuration/StandardSequences/data/MixingNoPileUp.cff"

   path p1 = {psim} # simulation

   # Event output
   include "Configuration/EventContent/data/EventContent.cff"
   module GEN-SIM = PoolOutputModule 
   { 
     	using FEVTSIMEventContent
	untracked string fileName = "WZleptons.root"
    	untracked PSet dataset ={	
           untracked string dataTier = "GEN-SIM"
    	}
   }

   endpath outpath = {GEN-SIM}

   schedule = {p1,outpath}



}
