process Sim  = {


      untracked PSet maxEvents = {untracked int32 input = 1}
      
  untracked PSet configurationMetadata = 
  {
    untracked string version = "$Revision$"
    untracked string name = "$Source$"
    untracked string annotation = "Z to Mu Mu for CSA07"
  }

      include "FWCore/MessageLogger/data/MessageLogger.cfi"
      replace MessageLogger.cout.threshold = "ERROR"
      replace MessageLogger.cerr.default.limit = 10

      service = RandomNumberGeneratorService
      {
            untracked uint32 sourceSeed = 1234567
            PSet moduleSeeds =
            {
             untracked uint32 VtxSmeared = 98765432
             untracked uint32 g4SimHits  = 11
             untracked uint32 mix	 = 12345
           }
      }
   
   
      # Z/gamma* --> dimuon generation
      source = PythiaSource 
      { 
            untracked int32 pythiaPylistVerbosity = 0
            untracked bool pythiaHepMCVerbosity = false
            untracked int32 maxEventsToPrint = 0
 
  # put here the cross section of your process (in pb). 

  # !! xs evaluated before the filter, value quoted by Pythia !!
            untracked double crossSection = 1784.
  # put here the efficiency of your filter (1. if no filter). 
            untracked double filterEfficiency = 0.4633
            
	    PSet PythiaParameters = {

                  # This is a vector of ParameterSet names to be read, in this order
                  vstring parameterSets = {
                        "pythiaUESettings", 
                        "processParameters"
                  }

                  include "Configuration/Generator/data/PythiaUESettings.cfi"

                  vstring processParameters = {
                        "MSEL=0            !User defined processes",
                        "MSUB(1)=1         !Incl Z0/gamma* production",
                        "MSTP(43)=3        !Both Z0 and gamma*", 
                        "MDME(174,1)=0     !Z decay into d dbar",        
                        "MDME(175,1)=0     !Z decay into u ubar",
                        "MDME(176,1)=0     !Z decay into s sbar",
                        "MDME(177,1)=0     !Z decay into c cbar",
                        "MDME(178,1)=0     !Z decay into b bbar",
                        "MDME(179,1)=0     !Z decay into t tbar",
                        "MDME(182,1)=0     !Z decay into e- e+",
                        "MDME(183,1)=0     !Z decay into nu_e nu_ebar",
                        "MDME(184,1)=1     !Z decay into mu- mu+",
                        "MDME(185,1)=0     !Z decay into nu_mu nu_mubar",
                        "MDME(186,1)=0     !Z decay into tau- tau+",
                        "MDME(187,1)=0     !Z decay into nu_tau nu_taubar",
                        "CKIN(1)=40.       !Minimum sqrt(s_hat) value (=Z mass)"
                  }

            }
      }

      module  mumugenfilter  = MCParticlePairFilter {
            untracked vint32 ParticleID1 = {13}
            untracked vint32 ParticleID2 = {13}
            untracked int32 ParticleCharge = 0
            untracked vint32 Status = {1,1}
            untracked vdouble MinPt = {0.,0.}
            untracked vdouble MinEta = {-2.5,-2.5}
            untracked vdouble MaxEta = {2.5,2.5}
      }

      include "Configuration/StandardSequences/data/Simulation.cff"
      include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
      include "Configuration/StandardSequences/data/MixingNoPileUp.cff"

  	path p1 = { mumugenfilter, psim }

      # Event output
      include "Configuration/EventContent/data/EventContent.cff"

      # output module
      module GEN-SIM = PoolOutputModule
      {
         using FEVTSIMEventContent
         untracked string fileName = "Zmumu.root"
         untracked PSet dataset ={              
	    untracked string dataTier = "GEN-SIM"
         }
         untracked PSet SelectEvents = {
           vstring SelectEvents = {"p1"}
         }
      }
       
      endpath outpath = { GEN-SIM }

      schedule = { p1, outpath }
  
}
