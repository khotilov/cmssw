process P  = 
{

   # include services
   include "Configuration/ReleaseValidation/data/Services.cfi"

   # initialize MessageLogger
   include "FWCore/MessageLogger/data/MessageLogger.cfi"
   
   service = RandomNumberGeneratorService  
   {
      untracked uint32 sourceSeed = 12345678
      PSet moduleSeeds =
      {
	 untracked uint32 g4SimHits  = 98765432
         untracked uint32 VtxSmeared = 87654321
         untracked uint32 mix = 12345
      }   
   }

    untracked PSet options = {
     untracked bool makeTriggerResults = false
     vstring listOfTriggers = {}
  }

# The actual number of accepted generated events will be of the order of 11 * numberEventsInRun for a min weight of 0.01 for that pt cut and min weight.
# simulation takes places in 2 steps : events not involving b-c partons only, followed by 1/wbc * number of calls to pyevnt() to generate 
# the first run of accepted events, accepting only events involving c and b partons, reweighting them by a factor wbc.
# altogether one should get 2 runs (or more if the minimum accepted weight is lowered)
 
   include "GeneratorInterface/MuEnrichInterface/data/PythiaMuEnrichSourceMinBias.cfi"
#keep maxevents much larger than the number of events in run 
    replace PythiaMuEnrichSource.maxEvents = 10000000   
    replace PythiaMuEnrichSource.numberEventsInRun =10000
    replace PythiaMuEnrichSource.wmin = 0.01
    replace PythiaMuEnrichSource.ptmin = 10
    replace PythiaMuEnrichSource.wtype = 3 
# wtype = 1 adapted cuts for only 1 muon, wtype 2: cut on ptmin and maxeta only, wtype=3 pthat > 10 

    replace PythiaMuEnrichSource.PythiaParameters.pythiaMinBias ={
      'MSEL=0         ! User defined processes',
      'MSUB(11)=1     ! Min bias process',
      'MSUB(12)=1     ! Min bias process',
      'MSUB(13)=1     ! Min bias process',
      'MSUB(28)=1     ! Min bias process',
      'MSUB(53)=1     ! Min bias process',
      'MSUB(68)=1     ! Min bias process',
      'MSUB(95)=1     ! Min bias process',
      'MSTJ(11)=3     ! Choice of the fragmentation function',
      'MSTJ(22)=1     ! Decay those unstable particles',
      'PARJ(73)=2950  ! radius of the decay cylinder',
      'PARJ(74)=5600  ! length of the decay cylinder',
      'MSTP(2)=1      ! which order running alphaS',
      'MSTP(33)=0     ! no K factors in hard cross sections',
      'MSTP(51)=7     ! structure function chosen',
      'MSTP(81)=1     ! multiple parton interactions 1 is Pythia default',
      'MSTP(82)=4     ! Defines the multi-parton model',
      'MSTU(21)=1     ! Check on possible errors during program execution',
      'PARP(82)=1.9409   ! pt cutoff for multiparton interactions',
      'PARP(89)=1960. ! sqrts for which PARP82 is set',
      'PARP(83)=0.5   ! Multiple interactions: matter distrbn parameter',
      'PARP(84)=0.4   ! Multiple interactions: matter distribution parameter',
      'PARP(90)=0.16  ! Multiple interactions: rescaling power',
      'PARP(67)=2.5    ! amount of initial-state radiation',
      'PARP(85)=1.0  ! gluon prod. mechanism in MI',
      'PARP(86)=1.0  ! gluon prod. mechanism in MI',
      'PARP(62)=1.25   ! ',
      'PARP(64)=0.2    ! ',
      'MSTP(91)=1     !',
      'PARP(91)=2.1   ! kt distribution',
      'PARP(93)=15.0  ! ',
      'CKIN(3)=10 ! pthat cut-off'
    }
   



  module GEN = PoolOutputModule
  {

    untracked string fileName = "muEnrich_type3.root"
    untracked PSet datasets ={
        untracked PSet dataset1 = {
            untracked string dataTier = "GEN"
        }

    }
  }

  endpath outpath = {GEN}
  

}		
