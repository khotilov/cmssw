process P  = 
{
   # initialize  MessageLogger
   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10

   service = Timing {}
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits = 9876
      }
   }

   source = PythiaSource 
{ 
  untracked int32 maxEvents = 2
  untracked int32 pythiaPylistVerbosity = 0
  untracked bool pythiaHepMCVerbosity = false
  untracked int32 maxEventsToPrint = 0
  ########## 900 GeV setting
  untracked double comEnergy = 900 

  PSet PythiaParameters = {

    # This is a vector of ParameterSet names to be read, in this order
    # The first two are in the include files below
    vstring parameterSets = {
      "pythiaDefault", 
      "pythiaMinBias"
    }

    # Default (mostly empty - to keep PYTHIA default) card file
    # Name of the set is "pythiaDefault"
    include "IOMC/GeneratorInterface/data/pythiaDefault.cff"

    vstring pythiaMinBias = {
      'MSEL=0         ! User defined processes',
      'MSUB(11)=1     ! Min bias process',
      'MSUB(12)=1     ! Min bias process',
      'MSUB(13)=1     ! Min bias process',
      'MSUB(28)=1     ! Min bias process',
      'MSUB(53)=1     ! Min bias process',
      'MSUB(68)=1     ! Min bias process',
      'MSUB(92)=1     ! Min bias process, single diffractive',
      'MSUB(93)=1     ! Min bias process, single diffractive',
      'MSUB(94)=1     ! Min bias process, double diffractive',
      'MSUB(95)=1     ! Min bias process',
      'MSTJ(11)=3     ! Choice of the fragmentation function',
      'MSTJ(22)=2     ! Decay those unstable particles',
      'PARJ(71)=10 .  ! for which ctau  10 mm',
      'MSTP(2)=1      ! which order running alphaS',
      'MSTP(33)=0     ! no K factors in hard cross sections',
      'MSTP(51)=7     ! structure function chosen',
      'MSTP(81)=1     ! multiple parton interactions 1 is Pythia default',
      'MSTP(82)=4     ! Defines the multi-parton model',
      'MSTU(21)=1     ! Check on possible errors during program execution',
      'PARP(82)=1.9409   ! pt cutoff for multiparton interactions',
      'PARP(89)=1960. ! sqrts for which PARP82 is set',
      'PARP(83)=0.5   ! Multiple interactions: matter distrbn parameter',
      'PARP(84)=0.4   ! Multiple interactions: matter distribution parameter',
      'PARP(90)=0.16  ! Multiple interactions: rescaling power',
      'PARP(67)=2.5    ! amount of initial-state radiation',
      'PARP(85)=1.0  ! gluon prod. mechanism in MI',
      'PARP(86)=1.0  ! gluon prod. mechanism in MI',
      'PARP(62)=1.25   ! ',
      'PARP(64)=0.2    ! ',
      'MSTP(91)=1     !',
      'PARP(91)=2.1   ! kt distribution',
      'PARP(93)=15.0  ! '
    }

  }
}


   # event vertex smearing - applies only once (internal check)
   # Note : all internal generators will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"

   # G4 detector simulation and digitization with Ecalzero-suppression
   # (the cff returns the sequence doG4SimHitsDigiEcalZeroSup that
   #  can be used in the path)
   #

   #Geometry
   #
   # include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
   include "Geometry/CMSCommonData/data/cmsPilotIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}
   
   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Geant4-based CMS Detector simulation
   #
   include "SimG4Core/Application/data/g4SimHits.cfi"

   # This is the full sequence of digitizers 
   # (Pixels, SiStrips, Ecal, Hcal, Muon(CSC,DT,RPC)
   # MixingModule included (in the zero-pileup mode)
   # it "returns" sequence called doAllDigi which can
   # be directly placed in the path
   #
   include "SimG4Core/Application/data/DigiWithEcalZeroSuppression.cff"

   sequence doG4SimHitsDigiEcalZeroSup = { g4SimHits, doAllDigiWithEcalZeroSup }


   # Event, etc. output
   #
   module GEN-SIM-DIGI = PoolOutputModule 
   { 
     untracked string fileName = "minbias_noEE_900GeV_sim_digi.root" 
   }

   # now the order of execution
   #   
   path p1 = { VtxSmeared, doG4SimHitsDigiEcalZeroSup }

   endpath outpath = { GEN-SIM-DIGI }
   
}