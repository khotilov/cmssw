process PROD  = 
{
   # initialize  MessageLogger
   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10

   service = Timing {}
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 987654321
      }
   }

   # generation parameters
   #include "Configuration/Generator/data/PythiaExotics.cfg"

  # explicit include since above cfg is not in 083 release   
  source = PythiaSource 
  { 
  untracked int32 maxEvents = 0
  untracked int32 pythiaPylistVerbosity = 0
  untracked bool pythiaHepMCVerbosity = false
  untracked int32 maxEventsToPrint = 0

  PSet PythiaParameters = {

    # This is a vector of ParameterSet names to be read, in this order
    vstring parameterSets = {
      "pythiaUESettings", 
      "processParameters",
      "CSAParameters"
    }

   include "Configuration/Generator/data/PythiaUESettings.cfi"

    vstring processParameters = {
        "MSEL=0                  !User defined processes ",
        "MSUB(141)=1               ! Zprime production ",
        "MSTP(44)=3                ! only zprime  ",      
        "MSTP(142) = 2             ! xsection rescaling on ",
        "PMAS(32,1) = 700          ! zprime mass " ,
	"MSTP(6)=1                 ! excited quarks",
        "MSUB(147)=1               !d* production",
        "MSUB(148)=1               !u* production",
        "PMAS(7,1)=2000.0          !d* mass",
        "PMAS(8,1)=2000.0          !u* mass",
        "PARU(155)=2000.0          !Lambda Scale equals q* mass",
        "PARU(157)=1.0             !f=1   SM coupling",
        "PARU(158)=1.0             !f'=1  SM coupling",
        "PARU(159)=1.0             !f_s=1 SM coupling",
	"MSUB(244) = 1             ! SUSY gluino-gluino",
        "MSUB(243) = 1             ! SUSY",
        "MSUB(258) = 1             ! SUSY squark-gluino",
        "MSUB(259) = 1             ! SUSY",
        "MSUB(261) = 1             ! SUSY squark-squark",
        "MSUB(262) = 1             ! SUSY",
        "MSUB(263) = 1             ! SUSY",
        "MSUB(264) = 1             ! SUSY",
        "MSUB(265) = 1             ! SUSY",
        "MSUB(271) = 1             ! SUSY",
        "MSUB(272) = 1             ! SUSY",
        "MSUB(273) = 1             ! SUSY",
        "MSUB(274) = 1             ! SUSY",
        "MSUB(275) = 1             ! SUSY",
        "MSUB(276) = 1             ! SUSY",
        "MSUB(277) = 1             ! SUSY",
        "MSUB(278) = 1             ! SUSY",
        "MSUB(279) = 1             ! SUSY",
        "MSUB(280) = 1             ! SUSY",
        "MSUB(281) = 1             ! SUSY",
        "MSUB(282) = 1             ! SUSY",
        "MSUB(283) = 1             ! SUSY",
        "MSUB(284) = 1             ! SUSY",
        "MSUB(285) = 1             ! SUSY",
        "MSUB(286) = 1             ! SUSY",
        "MSUB(287) = 1             ! SUSY",
        "MSUB(288) = 1             ! SUSY",
        "MSUB(289) = 1             ! SUSY",
        "MSUB(290) = 1             ! SUSY",
        "MSUB(291) = 1             ! SUSY",
        "MSUB(292) = 1             ! SUSY",
        "MSUB(293) = 1             ! SUSY",
        "MSUB(294) = 1             ! SUSY",
        "MSUB(295) = 1             ! SUSY",
        "MSUB(296) = 1             ! SUSY",
        "MSUB(246) = 1             ! SUSY squark-gaugino",
        "MSUB(247) = 1             ! SUSY",
        "MSUB(248) = 1             ! SUSY",
        "MSUB(249) = 1             ! SUSY",
        "MSUB(250) = 1             ! SUSY",
        "MSUB(251) = 1             ! SUSY",
        "MSUB(252) = 1             ! SUSY",
        "MSUB(253) = 1             ! SUSY",
        "MSUB(254) = 1             ! SUSY",
        "MSUB(256) = 1             ! SUSY",
        "MSUB(258) = 1             ! SUSY",
        "MSUB(259) = 1             ! SUSY",
        "MSUB(237) = 1             ! SUSY gluino-gaugino",
        "MSUB(238) = 1             ! SUSY",
        "MSUB(239) = 1             ! SUSY",
        "MSUB(240) = 1             ! SUSY",
        "MSUB(241) = 1             ! SUSY",
        "MSUB(242) = 1             ! SUSY",
        "MSUB(216) = 1             ! SUSY gaugino pairs",
        "MSUB(217) = 1             ! SUSY",
        "MSUB(218) = 1             ! SUSY",
        "MSUB(219) = 1             ! SUSY",
        "MSUB(220) = 1             ! SUSY",
        "MSUB(221) = 1             ! SUSY",
        "MSUB(222) = 1             ! SUSY",
        "MSUB(223) = 1             ! SUSY",
        "MSUB(224) = 1             ! SUSY",
        "MSUB(225) = 1             ! SUSY",
        "MSUB(226) = 1             ! SUSY",
        "MSUB(227) = 1             ! SUSY",
        "MSUB(228) = 1             ! SUSY",
        "MSUB(229) = 1             ! SUSY",
        "MSUB(230) = 1             ! SUSY",
        "MSUB(231) = 1             ! SUSY",
        "MSUB(232) = 1             ! SUSY",
        "MSUB(233) = 1             ! SUSY",
        "MSUB(234) = 1             ! SUSY",
        "MSUB(235) = 1             ! SUSY",
        "MSUB(236) = 1             ! SUSY",
	"MSUB(201) = 1             ! SUSY slepton pairs",
        "MSUB(202) = 1             ! SUSY",
        "MSUB(203) = 1             ! SUSY",
        "MSUB(204) = 1             ! SUSY",
        "MSUB(205) = 1             ! SUSY",
        "MSUB(206) = 1             ! SUSY",
        "MSUB(207) = 1             ! SUSY",
        "MSUB(208) = 1             ! SUSY",
        "MSUB(209) = 1             ! SUSY",
        "MSUB(210) = 1             ! SUSY",
        "MSUB(211) = 1             ! SUSY",
        "MSUB(212) = 1             ! SUSY",
        "MSUB(213) = 1             ! SUSY",
        "MSUB(214) = 1             ! SUSY",	
#        "IMSS(1) = 2               ! msugra",
#        "RMSS(1) = 250             ! m1/2",
#        "RMSS(8) = 60             ! m0",
#        "RMSS(4) = 1               ! sign mu",
#        "RMSS(16) = 0              ! A0",
#        "RMSS(5) = 10              ! tan b"
        "IMSS(1) = 1               ! MSSM",
	"IMSS(3) = 1               ! gluino treatment",
	"IMSS(9) = 1               ! squark treatment ",
        "RMSS(1) = 99.32            ! m1",
        "RMSS(2) = 192.14           ! m2",
        "RMSS(3) = 611.32           ! m gluino",
        "RMSS(4) = 335.53           ! mu",
        "RMSS(5) = 10               ! tan b",
	"RMSS(6) = 179.80           ! slepton left",
        "RMSS(7) = 110.36           ! slepton right",
        "RMSS(8) = 533.03           ! left squark",
        "RMSS(9) = 513.43           ! right sdown",
        "RMSS(22) = 515.59          ! right sup",
        "RMSS(10) = 492.77          ! left squark3",
        "RMSS(11) = 511.42          ! sbottom right",
        "RMSS(12) = 427.20          ! stop right",
        "RMSS(13) =  179.25         ! left stau",
        "RMSS(14) =  108.50         ! right stau",
        "RMSS(15) = -684.78         ! Ab",
        "RMSS(16) = -464.94         ! At",
        "RMSS(17) = -156.64         ! Atau",
        "RMSS(19) = 373.01          ! MA"
   
    }
    
     vstring CSAParameters = {
        'CSAMODE = 5            ! Exotics soup   ',
	'ZPRW  = 250              ! zprime weight  ',
	'SUSYRW = 300             ! susy weight    '
     }
   }
   }
   
   
   
   #HLT -- must be before any other path!!
   include "HLTrigger/HLTexample/test/csa06.cff"
 
   
   # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   module VtxSmeared = VertexGenerator
   {
      string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
      double MeanX = 0.
      double MeanY = 0.
      double MeanZ = 0.
      double SigmaX = 0.015
      double SigmaY = 0.015
      double SigmaZ = 53.0  // in mm (as in COBRA/OSCAR)
   }


   #Geometry
   #
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}
   
   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

		
   # Geant4-based CMS Detector simulation
   #
   include "SimG4Core/Application/data/SimG4Object.cfi"

   # Step 3 : Digitization of the simulated hits
   #

   # Step 3a : Digitization of the Tracker
   #

   # required for Pixel and SiStrip Digitizers
   #
   es_module = TrackerDigiGeometryESModule {}

   # Pixel's digitization
   #
   include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"

   # SiStrip's digitization
   #
   include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"


   # Step 3b : Digitization of Ecal and Hcal

   include "SimCalorimetry/EcalSimProducers/data/ecalDigiSequence.cff"
   
   include "CalibCalorimetry/HcalPlugins/data/hardwired_conditions.cfi"
   include "SimCalorimetry/HcalSimProducers/data/hcaldigi.cfi"


   # Step 3c : Muon Digitization


   # this holds CSC geom service, as need for CSC digi's
   # and the digitizer itself
   #
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"
   include "SimMuon/CSCDigitizer/data/muoncscdigi.cfi"

   # Muon DT digi's

   # this holds geom.service as needed by DT digi's
   # and the digitizer itself
   #
   include "Geometry/DTGeometry/data/dtGeometry.cfi"
   include "SimMuon/DTDigitizer/data/muondtdigi.cfi"

   # this holds geom.service for the RPC digi's
   # the digitizer itself still needs to be given explicitely
   # but since it has no parameters, it doesn't matter...
   # only maybe the label should be agreed upon...
   #
   # Note : as of May 3, 2006, Muon/RPC digi's *hang*
   #        thus it's been taken out of the path...
   # 
   include "Geometry/RPCGeometry/data/rpcGeometry.cfi" 
   include "SimMuon/RPCDigitizer/data/muonrpcdigi.cfi"

   # Mixing Module is *required* to simulated Ecal/Hcal/Muon digitization !

   module mix = MixingModule
   {
#      secsource input = PoolRASource
#      {
         #
         # starting 050, you can skip secsource block at all if you don't
         # wnat to model mixing/pileup at all;
         # however, an at least "empty mixing" need to be present if you
         # want to perform Ecal/Hcal/CSC/DT digitization - those explicitely
         # require presence of CrossingFrame in the edm::Event
         #
         # alternatively, you can set averageNumber=0 if you don't want
         # to model the pileup
         #
         # to the secsource/PoolRASource, you can give just 1 file or more;
         # this files will make a "concatinated buffer", which will go circular
         # until the loop of primary events is done - thus, it'll never run out
         #
         # WARNING: you can only give miltiple files, if they're generated with
         #          identical sets of tracked parameters;
         #          for example, you canNOT give a file made with a single muon
         #          gun and a file made with a single pion gun, because PartID
         #          is a *tracked* parameter in the gun's PSet;
         #          however, you can merge together files made with other generators,
         #          for example, PythiaSource, because all parameters of it would be
         #          *untracked*
         #
#         untracked vstring fileNames =
#         {'file:/afs/cern.ch/cms/geant4rep/genntpl/muon_simhit_for_pileup.060pre1.root' }
#         string type = "poisson"
#         double averageNumber = 3  # setting this param. to 0 means "No pile-up",
#                                   # that is, digitize current crossing only
#         int32 minBunch = -3
#         int32 maxBunch = 5
#         int32 seed = 1234567
#      }
      int32 bunchspace = 25
   }



   # now the order of execution
   #   
   sequence trDigi = { pixdigi & stripdigi }
   sequence calDigi = { ecalDigiSequence & hcaldigi }
   sequence muonDigi = { muoncscdigi & muondtdigi & muonrpcdigi }
   sequence doDigi = { trDigi & calDigi & muonDigi   }
   path p1 = { VtxSmeared, SimG4Object, mix, doDigi }


   # Event, etc. output
   #
   module GEN-SIM-DIGI-HLT = PoolOutputModule 
   { 
     untracked string fileName = "exotics_sim_digi_hlt.root" 
     untracked vstring outputCommands = {
       "keep *",
       "drop *_ecaldigi_*_*"
     }
   }


   endpath outpath = { GEN-SIM-DIGI-HLT }
   
}		
