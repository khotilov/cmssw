process P  = 
{
   # include services
   include "Configuration/ReleaseValidation/data/Services.cfi"

   # initialize  MessageLogger
   include "FWCore/MessageService/data/MessageLogger.cfi"
   
   service = Timing {}
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 12345678
         untracked uint32 g4SimHits = 9876
         untracked uint32 mix = 12345
      }
   }

   untracked PSet options = {
     untracked bool makeTriggerResults = false
     vstring listOfTriggers = {}
  }

   # Z --> dimuon generation parameters.
   include "Configuration/Generator/data/PythiaZmumu.cfg"
   replace PythiaSource.maxEvents = 2
   replace PythiaSource.maxEventsToPrint = 1

   module  genfilter  = MCParticlePairFilter {

    # vector of accepted particle ID for particle 1 (logical OR)(abslolute values of the ID's)
    untracked vint32 ParticleID1 = {13}

    # vector of accepted particle ID for particle 2 (logical OR)(abslolute values of the ID's)
    untracked vint32 ParticleID2 = {13}

    # particle pairs charge flag -- (-1 = opposite sign, +1 = same sign, 0 = both, default: 0)
    untracked int32 ParticleCharge = -1

    # vector of min pt values corresponding to above particles -- if absent values are 0
    untracked vdouble MinPt =  {10,10}

    # vector of min pt values corresponding to above particles -- if absent values are -5
    untracked vdouble MinEta =  {-2.5,-2.5}

    # vector of min pt values corresponding to above particles -- if absent values are +5
    untracked vdouble MaxEta =  {2.5, 2.5}

    # vector of status codes corresponding to above particles -- if absent, all are accepted
    untracked vint32 Status =  {3, 3}
  }

  include "Configuration/StandardSequences/data/Reconstruction.cff"
  include "Configuration/StandardSequences/data/Simulation.cff"
  include "Configuration/StandardSequences/data/MixingNoPileUp.cff"
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"

  path p0 = {genfilter}
  path p1 = {simulation}
  path p2 = {reconstruction} # reconstruction

  # Event output
  include "Configuration/EventContent/data/EventContent.cff"
  module FEVT = PoolOutputModule
  {
    using FEVTSIMEventContent
    untracked string fileName = "Zmumu.root"
    untracked PSet datasets ={
        untracked PSet dataset1 = {
            untracked string dataTier = "FEVT"
        }
    }
    untracked PSet SelectEvents = {
        vstring SelectEvents = {"p0"}
    }
  }

  endpath outpath = {FEVT}
  schedule = {p0,p1,p2,outpath}
       
}	
