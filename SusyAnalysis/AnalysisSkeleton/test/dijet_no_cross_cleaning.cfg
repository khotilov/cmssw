process ANA =  {

    ### General ###
    # Logging
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    replace MessageLogger.categories += { 
        "SelectorSequence", 
        "EventSelectorAND", "EventSelectorOR",
        "HLTEventSelector", "JetEventSelector", 
        "BJetEventSelector", "MetEventSelector", 
	"AlphaSelector", "DPhiEventSelector",
        "SusyAllHadronic"
    }
    replace MessageLogger.cerr.threshold = "INFO"
    replace MessageLogger.cerr.default.limit = -1
    replace MessageLogger.cerr.FwkReport.reportEvery = 100

    # return filter & timing reports
    untracked PSet options = { untracked bool wantSummary = true }
    
    ### Input / output ###
    # Output file for plots
    service = TFileService { string fileName = "dijet_results.root" }
    
    # Input file
    source = PoolSource {
        untracked vstring fileNames = {
            "/store/CSA07/skim/2007/11/8/CSA07-CSA07JetMET-Stew-B1-PDJetMET_Skims1/0005/0034995F-4591-DC11-8398-0018F3D0960A.root"
        }	
    }
    untracked PSet maxEvents = { untracked int32 input = -1 }
    
    
    ### Analysis configuration ###
    module dijet = SusyDiJetAnalysis {

        # Event weight: if set to negative value, 
        # will take it from CSA07EventWeightProducer
        InputTag weightSource = csa07weightproducer # The name of the module below
        double eventWeight = -1.0 

	untracked bool soup = true
	untracked double weight = 4.5

	InputTag jetTag = selectedLayer1Jets
	InputTag elecTag = selectedLayer1Electrons
	InputTag muonTag = selectedLayer1Muons
	InputTag photTag = selectedLayer1Photons
	InputTag tauTag = selectedLayer1Taus
	InputTag metTag = selectedLayer1METs
        
        # Selection
        PSet selections = {
            PSet selectors = { # Definition of all selectors
                # 1. Preselection
                PSet HLT = {
                    string selector = "HLTEventSelector"
                    InputTag triggerResults = TriggerResults::HLT
                    vstring pathNames = { "HLT2jet" }
		}

                PSet PreJet = {
                    string selector = "JetEventSelector"
                    InputTag jetTag = selectedLayer1Jets
                    string correction = "none"
                    # require 3 jets
                    vdouble minEt = { 30., 30. }
                    vdouble maxEta = { 999., 999. }
                    vdouble maxEMFraction = { 999., 999. }
                }		

                # Put it all together in a preselection
                PSet Preselection = {
                    string selector = "EventSelectorAND"
                    vstring components = {
                        "HLT", "PreJet"
                    }
                }

	        # Final jet selector
        	PSet FinalJet = {
	            string selector = "JetEventSelector"
	            InputTag jetTag = selectedLayer1Jets
		    string correction = "none"
        	    # require jet Ets
          	    vdouble minEt = { 50., 50.  }
        	    vdouble maxEta = { 5., 5. }
          	    vdouble maxEMFraction = { 999., 999. }
	        }

		# Final DirectLepton veto selector
		PSet FinalDirectLeptonVeto = {
		    string selector = "DirectLeptonVetoSelector"
	            InputTag electronTag = selectedLayer1Electrons
	            InputTag muonTag = selectedLayer1Muons
                    InputTag tauTag = selectedLayer1Taus
	            # electron Et cuts and rel. pt sum isolation
		    double minElectronEt = 30.
	            double electronIsolation = 1.1
	            # muon Et cuts and rel. pt sum isolation
	            double minMuonEt = 30.
	            double muonIsolation = 1.1
	  	    # tau Et cuts and rel. pt sum isolation
	            double minTauEt = 30.
	            double tauIsolation = 1.1
		}

		# Final max jets selector
		PSet FinalMaxNumJetsSelector = {
		  string selector = "MaxNumJetsEventSelector"
		  InputTag jetTag = selectedLayer1Jets
		  # Maximum et for n+1 jet
		  double maxEt = 30.
		  # Number of jets up to et threshold
		  uint32 maxNumJets = 2
		}

		# Dijet alpha selector
                PSet Alpha = {
                    string selector = "AlphaSelector"
                    InputTag jetTag = selectedLayer1Jets
                    double minAlpha = 0.5
                }

		# Dijet alpha selector
                PSet DPhi = {
                    string selector = "DPhiEventSelector"
                    InputTag jetTag = selectedLayer1Jets
		    double maxDPhi = 2.09
                }

            } # End selector's list

            # Sequence of selectors 
            vstring selectionSequence = { 
                "Preselection",
                "FinalJet", "FinalDirectLeptonVeto", "FinalMaxNumJetsSelector",
                "DPhi", "Alpha"
            }

        } # End selection

        # Plotting
        vstring plotSelection = {  # Only plot what passes these selections
            "Preselection"         # If empty, plots all events
        }


    } # End analyzer

    ### PAT steering ###
    include "PhysicsTools/PatAlgos/data/patLayer0.cff"
    include "PhysicsTools/PatAlgos/data/patLayer1.cff"
    
    ### Event weight producer ###
    module csa07weightproducer = CSA07EventWeightProducer {
        InputTag src = source
        untracked bool talkToMe = false
        # overall luminosity normalization  (in pb-1)
        double overallLumi = 1000.
        # K-factor for ttbar (= 1. for ALPGEN LO cross sections)
        # from MCFM NLO vs LO study, the K-factor is found to be 1.85
        double ttKfactor = 1.85     
    }

    ### Processing path: run PAT on the fly
    path p = { 
        csa07weightproducer,   # <-- COMMENT OUT IF RUNNING ON SIGNAL!
        patLayer0,
        patLayer1,
        dijet
    } 

}
