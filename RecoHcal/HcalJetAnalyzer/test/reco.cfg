process Reco = {
  untracked PSet maxEvents = {untracked int32 input = 10}
#    service = Tracer {}

    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    include "CondCore/DBCommon/data/CondDBSetup.cfi"

#   service = MessageLogger {
#     untracked vstring destinations = { "cout" }
#     untracked PSet cout = {
#       untracked string threshold = "DEBUG"
#     }
#     untracked PSet log4cplus = {
#       untracked string threshold = "WARNING"
#     }
#   }

 
   
 source = NewEventStreamFileReader{
		untracked vstring fileNames = {
  #"file:/global/GlobalNov07.00030478.0001.DTHcal.storageManager.0.0000.dat"
"rfio:/castor/cern.ch/cms/store/data/GlobalNov07/DTHcal/000/030/478/GlobalNov07.00030478.0001.DTHcal.storageManager.0.0000.dat"
}
		#int32 max_event_size = 400000
		#int32 max_queue_depth = 5
	}
    # see 
    # http://cmsdbs.cern.ch/DBS2_discovery/getLFN_txt?dbsInst=cms_dbs_prod_global&blockName=*&dataset=/GlobalNov07-A/Online/RAW&userMode=runManager&run=30126
    # for path to raw data for run 30126
    #include "Configuration/GlobalRuns/data/local-gren-30126.cff"


#
### Conditions:
#
#include "Configuration/GlobalRuns/data/gren_conditions_off.cff"
#include "DQM/HcalMonitorModule/data/Hcal_FrontierConditions_GREN_off.cff"
include "CondCore/DBCommon/data/CondDBSetup.cfi"

  #  es_source HCALCalibration = HcalHardcodeCalibrations {
  #	untracked vstring toGet = { "ChannelQuality", "GainWidths" }
  #  }
    es_source L1GtBoardMapsRcdSource = EmptyESSource {
	string recordName = "L1GtBoardMapsRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    es_source L1GtParametersRcdSource = EmptyESSource {
	string recordName = "L1GtParametersRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    es_source L1GtPrescaleFactorsRcdSource = EmptyESSource {
	string recordName = "L1GtPrescaleFactorsRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    es_source L1GtStableParametersRcdSource = EmptyESSource {
	string recordName = "L1GtStableParametersRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    es_source L1GtTriggerMaskRcdSource = EmptyESSource {
	string recordName = "L1GtTriggerMaskRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    es_source L1MuGMTParametersRcdSource = EmptyESSource {
	string recordName = "L1MuGMTParametersRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    es_source L1MuGMTScalesRcdSource = EmptyESSource {
	string recordName = "L1MuGMTScalesRcd"
	bool iovIsRunNotTime = true
	vuint32 firstValid = { 1 }
    }
    include "L1TriggerConfig/L1ScalesProducers/data/L1MuTriggerScalesConfig.cff"

    es_source cscConditions = PoolDBESSource {
	string timetype = "runnumber"
	string connect = "frontier://FrontierOn/CMS_COND_ON_170_CSC"
	PSet DBParameters = {
	    untracked int32 messageLevel = 0
	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
	}
	VPSet toGet = {
	    { string record = "CSCDBGainsRcd"
		string tag = "CSCDBGains_ideal" },
	    { string record = "CSCDBCrosstalkRcd"
		string tag = "CSCDBCrosstalk_ideal" },
	    { string record = "CSCDBNoiseMatrixRcd"
		string tag = "CSCDBNoiseMatrix_ideal" },
	    { string record = "CSCDBPedestalsRcd"
		string tag = "CSCDBPedestals_ideal" },
	    { string record = "CSCChamberIndexRcd"
		string tag = "CSCChamberIndex" },
	    { string record = "CSCChamberMapRcd"
		string tag = "CSCChamberMap" },
	    { string record = "CSCCrateMapRcd"
		string tag = "CSCCrateMap" },
	    { string record = "CSCDDUMapRcd"
		string tag = "CSCDDUMap" }
	}
    }
    
    #es_source dtConditions = PoolDBESSource {
#	string timetype = "runnumber"
#	string connect = "frontier://FrontierOn/CMS_COND_ON_170_DT"
#	PSet DBParameters = {
#	    untracked int32 messageLevel = 0
#	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
#	}
#	VPSet toGet = {
#	    { string record = "DTReadOutMappingRcd"
#		string tag = "GRENmap_774" },
#	    { string record = "DTT0Rcd"
#		string tag = "GRENt0" },
#	    { string record = "DTTtrigRcd"
#		string tag = "GRENttrigTest" }
#	}
#    }

#
es_source dtConditions =PoolDBESSource {
	string timetype = "runnumber" 
	string connect = "oracle://cms_orcoff/CMS_COND_ON_170_DT" 
	untracked string catalog = "relationalcatalog_oracle://cms_orcoff/CMS_COND_GENERAL"
	untracked bool siteLocalConfig = false
	string record = "DTReadOutMappingRcd"
	string tag = "DTChannelsMap"
	PSet DBParameters = {
	    untracked int32 messageLevel = 0
	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
	}
	VPSet toGet = {
	    { string record = "DTReadOutMappingRcd"
              string tag = "GRENmap_774" }, 
	    { string record = "DTT0Rcd" 
	      string tag = "GRENt0" }  ,
           {  string record = "DTTtrigRcd" 
              string tag = "GRENttrigTest" }
	}
    }




    
    es_source ecalMapping = EmptyESSource {
      string recordName = "EcalMappingRcd"
      bool iovIsRunNotTime = false
      vuint32 firstValid = { 0 }
    }
    include "Geometry/EcalMapping/data/EcalMapping.cfi"
    #es_module ecalBarrelGeometry = EcalBarrelGeometryEP {}
    #es_module ecalEndcapGeometry = EcalEndcapGeometryEP {}


    es_source ecalConditions = PoolDBESSource {
	string timetype = "runnumber"
	string connect = "frontier://FrontierOn/CMS_COND_ON_170_ECAL"
	PSet DBParameters = {
	    untracked int32 messageLevel = 0
	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
	}
	VPSet toGet = {
	    { string record = "EcalIntercalibConstantsRcd"
		string tag = "EcalIntercalibConstants_CosmGain200" },
	    { string record = "EcalPedestalsRcd"
		string tag = "EcalPedestals_online" },
	    { string record = "EcalADCToGeVConstantRcd"
		string tag = "EcalADCToGeVConstant_CosmGain200" },
	    { string record = "EcalGainRatiosRcd"
		string tag = "EcalGainRatios_trivial" },
	    { string record = "EcalWeightXtalGroupsRcd"
		string tag = "EcalWeightXtalGroups_trivial" },
	    { string record = "EcalTBWeightsRcd"
		string tag = "EcalTBWeights_trivial" },
	    { string record = "EcalLaserAlphasRcd"
		string tag = "EcalLaserAlphas_trivial" },
	    { string record = "EcalLaserAPDPNRatiosRcd"
		string tag = "EcalLaserAPDPNRatios_trivial" },
	    { string record = "EcalLaserAPDPNRatiosRefRcd"
		string tag = "EcalLaserAPDPNRatiosRef_trivial" }
	}
    }
    include "CalibCalorimetry/EcalLaserCorrection/data/ecalLaserCorrectionService.cfi"


include "CondCore/DBCommon/data/CondDBSetup.cfi"

es_module hcal_db_producer = HcalDbProducer {
         untracked vstring dump = {""}
         untracked string file = ""
}

es_source es_pool = PoolDBESSource {
    string timetype = "runnumber"
    string connect = "frontier://Frontier/CMS_COND_ON_170_HCAL"
    PSet DBParameters = {
      untracked int32 messageLevel = 0
    }
    VPSet toGet = {
{ string record = "HcalPedestalsRcd" string tag = "hcal_pedestals_fC_gren_v2" },
{ string record = "HcalPedestalWidthsRcd" string tag = "hcal_widths_fC_gren_v2" },
{ string record = "HcalElectronicsMapRcd" string tag = "official_emap_16x_9Nov07" },
{ string record = "HcalGainsRcd" string tag = "hcal_gains_v2_cosmics_magoff_hbpscaled" },
{ string record = "HcalQIEDataRcd" string tag = "qie_normalmode_v3" }

    }
    untracked bool siteLocalConfig = false
  }

  es_source es_hardcode = HcalHardcodeCalibrations {untracked vstring toGet = {"GainWidths", "channelQuality" }}
# es_source es_hardcode = HcalHardcodeCalibrations {untracked vstring toGet = {"GainWidths", "channelQuality","QIEData"}}
    es_source rpcConditions = PoolDBESSource {
	string timetype = "runnumber"
	string connect = "frontier://FrontierOn/CMS_COND_ON_170_RPC"
	PSet DBParameters = {
	    untracked int32 messageLevel = 0
	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
	}
	VPSet toGet = {
	    { string record = "RPCEMapRcd"
		string tag = "RPCEMap_v2" }
	}
    }
    es_source siPixelConditions = PoolDBESSource {
	string timetype = "runnumber"
	string connect = "frontier://FrontierOn/CMS_COND_ON_170_PIXEL"
	PSet DBParameters = {
	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
	    untracked int32 messageLevel = 0
	    untracked bool loadBlobStreamer = false
	    untracked int32 connectionTimeOut = 600
	    untracked int32 connectionRetrialPeriod = 30
	    untracked int32 connectionRetrialTimeOut = 180
	    untracked bool enableConnectionSharing = false
	    untracked bool enableReadOnlySessionOnUpdateConnection = false
	    untracked bool enablePoolAutomaticCleanUp = false
	}
	VPSet toGet = {
	    { string record = "SiPixelFedCablingMapRcd"
		string tag = "SiPixelFedCablingMap_v9" }
	}
    }


  es_source siTrackerConditions = PoolDBESSource {
    string timetype = "runnumber"
    string connect = "frontier://FrontierOn/CMS_COND_ON_170_STRIP"
    untracked string BlobStreamerName = "TBufferBlobStreamingService"
    PSet DBParameters = {
      untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
      untracked int32 messageLevel = 2
    }
    VPSet toGet = {
      { string record = "SiStripPedestalsRcd"
        string tag = "SiStripPedestals_GREN_v1" },
      { string record = "SiStripNoisesRcd"
        string tag = "SiStripNoise_GREN_v1" },
      { string record = "SiStripFedCablingRcd"
        string tag = "SiStripCabling_GREN_v1" }
    }
  }
  es_source SiStripGainFakeESSource = SiStripGainFakeESSource {
    FileInPath file = "CalibTracker/SiStripCommon/data/SiStripDetInfo.dat"
  }
  es_module SiStripGainESProducer = SiStripGainESProducer {
    bool AutomaticNormalization = false
    double NormalizationFactor = 1.0
  }

 


#
### Magnetic fiuld: force mag field to be 0.0 tesla
#
# nasty nasty hack until uniformMagneticField.cfi is fixed
#    include "MagneticField/Engine/data/uniformMagneticField.cfi"
    es_module localUniform = UniformMagneticFieldESProducer {
     double ZFieldInTesla = 0.0
   }
    es_prefer localUniform = UniformMagneticFieldESProducer{}

 #   #module content = EventContentAnalyzer {}

#
### unpackers used in online
#
    include "Configuration/GlobalRuns/data/ecalunpack.cff"
    include "Configuration/GlobalRuns/data/hcalunpack.cff"
    include "Configuration/GlobalRuns/data/cscunpack.cff"
    include "Configuration/GlobalRuns/data/dtunpack.cff"
    include "Configuration/GlobalRuns/data/rpcunpack.cff"
    include "Configuration/GlobalRuns/data/pixelunpack.cff"
    include "Configuration/GlobalRuns/data/stripunpack.cff"
    include "Configuration/GlobalRuns/data/l1unpack.cff"
#
### unpacking sequences: they mostly have just one module per subsystem
#
    sequence unpacking = { ecalunpack, hcalunpack, cscunpack, dtunpack, rpcunpack, pixelunpack, stripunpack, l1unpack}


#
### reconstruction : we use only pieces that we need for GREN instead of
#                    include "Configuration/StandardSequences/data/Reconstruction.cff"


#
### Tracker
#            cannot include directly
#            include "RecoLocalTracker/Configuration/data/RecoLocalTracker.cff"
#
#            because siStripClusterizer is configured very differently for data
#            hence we include the relevantpieces by hand
#
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
include "RecoLocalTracker/SiStripZeroSuppression/data/SiStripZeroSuppression.cfi"
include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_RealData.cfi"
#include "Configuration/GlobalRuns/data/pixel-override.cff"
# significant changes to SiStripClusterizer
#include "Configuration/GlobalRuns/data/strip-override.cff"

    sequence trackerGREN = { siStripZeroSuppression, siStripClusters }

#
### calorimeters
#
include "EventFilter/HcalRawToDigi/data/HcalRawToDigi.cfi"

#module hcalUnsuppressedDigis = HcalRawToDigi {
#    InputTag InputLabel = source
#    int32 firstSample = 0
#    int32 lastSample = 9
#    bool FilterDataQuality = true
#  }


include "RecoLocalCalo/Configuration/data/RecoLocalCalo.cff"
include "RecoEcal/Configuration/data/RecoEcal.cff"

#include "Configuration/GlobalRuns/data/ecal-override.cff"
include "Configuration/GlobalRuns/data/hcal-override.cff" ##forzerosupression

### ecal: no changes wrt standard modules
    sequence ecal = {ecalWeightUncalibRecHit, ecalRecHit}
    sequence ecalClustersGREN = {islandClusteringSequence,hybridClusteringSequence}

### hcal: many hacks. 
    # hcalZeroSuppressedDigis is defined in hcal-override.cff. There is NO cfi in the
    # release defining it... amazing!
    # also the configuration of hb and ho are in hcal-override but in no cfi stored in CVS
    sequence hcal = { hcalLocalRecoSequence}


#
## ecal+hcal
#
    sequence caloGREN = { ecal, ecalClustersGREN, hcal }


#
### muons
#          use LinearDrift_CosmicData modules instead of 
#          this cannot be done with standard RecoLocalMuon
#          since the CSA07 settings are used by default
#
#          all muon/dt related cfi/cff configuration is done in a customized copy
#
include "Configuration/GlobalRuns/data/RecoLocalMuon.cff"
#include "Configuration/GlobalRuns/data/csc-override.cff"
#include "Configuration/GlobalRuns/data/dt-override.cff"
#include "Configuration/GlobalRuns/data/rpc-override.cff"

include "RecoMuon/StandAloneMuonProducer/data/standAloneCosmicMuons.cff"
include "RecoMuon/CosmicMuonProducer/data/cosmicMuons.cfi"
     replace cosmicMuons.TrajectoryBuilderParameters.EnableDTMeasurement = true
     replace cosmicMuons.TrajectoryBuilderParameters.EnableCSCMeasurement = false
     replace cosmicMuons.TrajectoryBuilderParameters.EnableRPCMeasurement = false
	
    #sequence recoLocalMuon = {muonlocalreco_with_2DSegments}
    sequence recoLocalMuon = {muonlocalreco}
    sequence muonsSTA = {CosmicMuonSeed, cosmicMuons}
    sequence muonsGREN = {  recoLocalMuon, muonsSTA  }
include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagator.cfi"

#
### jets
#
include "RecoJets/Configuration/data/RecoJets.cff"
include "RecoJets/Configuration/data/CaloTowersRec.cff"
#include "RecoMET/Configuration/data/RecoMET.cff"

#include "RecoJets/JetAssociationProducers/data/j2tParametersCALO.cfi"
# include "RecoJets/JetAssociationProducers/data/j2tParametersVX.cfi"
 
#  module iterativeCone5JetTracksAssociatorAtVertex = JetTracksAssociatorAtVertex {
#	using j2tParametersVX
#	InputTag jets	= iterativeCone5CaloJets
#      }
# 
#  module iterativeCone5JetTracksAssociatorAtCaloFace = JetTracksAssociatorAtCaloFace {
#	using j2tParametersCALO
#	InputTag jets	= iterativeCone5CaloJets
#      }
# 
#  module iterativeCone5JetExtender = JetExtender {
#	InputTag jets	= iterativeCone5CaloJets
##	InputTag jet2TracksAtVX = iterativeCone5JetTracksAssociatorAtVertex
#	InputTag jet2TracksAtCALO = iterativeCone5JetTracksAssociatorAtCaloFace
#	double coneSize = 0.1
#      }
# 
# sequence iterativeCone5JTA = {
#   iterativeCone5JetTracksAssociatorAtVertex, iterativeCone5JetTracksAssociatorAtCaloFace, iterativeCone5JetExtender
# }


#    sequence jetsGREN = {caloTowersRec, recoJets,iterativeCone5JTA}
    sequence jetsGREN = {caloTowersRec, recoJets}

# caloTowers bombs with error:
##%MSG-w Invalid Data:  GctRawToDigi:gctDigis 03-Dec-2007 14:20:02 CET  Run: 28835 Event: 130005
##Empty/invalid GCT raw data, size = 0
##%MSG
##%MSG-s CMSException:  PostModule 03-Dec-2007 14:20:33 CET  Run: 28835 Event: 130005
##cms::Exception caught in cmsRun
##---- EventProcessorFailure BEGIN
##EventProcessingStopped
##---- StdException BEGIN
##An std::exception occurred during a call to the module CaloTowersCreator/towerMaker run: 28835 event: 130005
##and cannot be repropagated.
##Previous information:
##St9exceptionException going through path nomuonPath
##

#
###full reco
#
    sequence reconstructionGREN = { unpacking, trackerGREN, caloGREN, muonsGREN,  jetsGREN}

    module testMagneticField = testMagneticField {}
 module myanalysis = HcalJetAnalyzer {

# names of modules, producing object collections

  string electrons  = "pixelMatchGsfElectrons"   
  string muons      = "cosmicMuons" 
# string muons      = "globalmuons" 
  string calotowers = "towerMaker"   
  string tracks     = "ctfWithMaterialTracks"   
  string vertices   = "offlinePrimaryVerticesFromCTFTracks"
  string jets       = "iterativeCone5CaloJets"
  string jetsgen    = "iterativeCone5GenJets"
  #131den
  string taujet     = "coneIsolation"
  #131den
  string photons    = "correctedPhotons"
  string calomet    = "met"
 # string bjettag    = "trackCountingHighEffJetTags"
  string bjettag    = "trackCountingJetTags"
  string tautag     = "coneIsolationTauJetTags"
  InputTag HLTriggerResults = TriggerResults
  string PropagatorName = "SteppingHelixPropagator"

    ######## new
   bool doTrig = true
      bool doHits = true
      bool doSegs = true
      bool doSA = true
      bool isMC = false
      untracked bool debug = true
        bool LCT_RPC = true
        bool LCT_DT = true
        bool LCT_CSC = true
        #untracked string rootFileName = "DTAnalyzer_YB0.root"
        string DTLocalTriggerLabel = "dtunpacker"
        string recHits1DLabel = "dt1DRecHits"
        string recHits2DLabel = "dt2DSegments"
        string recHits4DLabel = "dt4DSegments"
  ###### end new
       untracked string tTrigMode = 'DTTTrigSyncFromDB'
       untracked PSet tTrigModeConfig = {
          untracked bool debug = false
          # The ttrig from the time box fit is defined as mean + kFactor * sigma
          double kFactor = -1.3
          # The velocity of signal propagation along the wire (cm/ns)
          double vPropWire = 24.4
          # Switch on/off the TOF correction from pulses
          bool doT0Correction = true   
          # Switch on/off the TOF correction for particles
          bool doTOFCorrection = false 
          # Switch on/off the correction for the signal propagation along the wire
          bool doWirePropCorrection  = false 
          # The correction type for TOF
          int32 tofCorrType = 2
          int32 wirePropCorrType = 0
	  
      }

       string SALabel = "cosmicMuons"
   
# name of output root file with histograms
#   string outputFileName = "hcal_recojets.root"	
# name of output root file with histograms
  string outputFileName = "hcalrecojets.root"	
 
  bool useRealOnly = true
 # bool Hcodedqie=true
   bool Hcodedqie=false
  
} 

    path allPath = {  testMagneticField, reconstructionGREN ,myanalysis }
    
    

#    endpath outpath = {FEVT}
}
