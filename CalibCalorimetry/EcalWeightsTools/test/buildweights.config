process PWeights = {

  #empty source
  source = EmptySource {untracked int32 maxEvents = 1}
  
  #calling EcalWeightsBuilder Module
  module builder = EcalWeightsBuilder {
    untracked uint32 verbosity   = 2

    #Prints out the individual weights files: ampWeights.txt, pedWeights.txt etc..
    untracked bool debug         = false

    #SAMPLES: number of samples in the electronics readout
    untracked uint32 nSamples    = 10

    #TDCBINS: number of TDC bins = 25 (Test Beam) 1 (laser/CMS)
    untracked uint32 nTdcBins    = 25

    #GENERATION OF GROUPID WEIGHTS:
    # This generates weights for Test Beam analysis. The Module EcalGroupIdBuilder
    # must have been called priored to EcalWeightsBuilder in order to assign each
    # crystal to a certain group Id number.
    # When generating groupid weights, the supermodule number must be specified
    # and the corresponding group id file produced by EcalGroupIdBuilder must be
    # accessible: GroupId_SMXX.out 
    untracked bool gen_groupID   = true
    untracked uint32 SuperModule = 24

    #REFERENCE TIMING: This is used to generated group id weights. This measures
    # the difference between the reference and mean timing of SuperModule.
    # tMaxRef = 5.5 if default setting for the Supermodule
    untracked double tMaxRef      = 5.5 
    #untracked double tMaxRef     = 6.0 #old laser runs
    #untracked double tMaxRef     = 5.0 #new laser runs

    #GENERATING DEFAULT WEIGHTS:
    # This generates the default sets of weights for CMS and Test Beam (simulation)
    # NOTE: if this option is chosen all, other options refering to groupIds and 
    # other weights options are discarded
    untracked bool default_weights = false

    #WEIGHTS OPTIONS:
    # these options can be changed only if default_weights = false
    # WEIGHTS OPTIONS BEFORE GAIN SWITCHING
    # number of signal sample and pre-sample used for amplitude reconstruction
    untracked uint32 nPulseSamples    = 5
    untracked uint32 nPrePulseSamples = 3

    #pedestal subtracting weights
    untracked bool   doFitBaseline    = true

    #jitter compensating weights
    untracked bool   doFitTime        = true

    # WEIGHTS OPTIONS AFTER GAIN SWITCHING
    untracked uint32 nPulseSamples_gain    = 5
    untracked uint32 nPrePulseSamples_gain = 3
    untracked bool   doFitBaseline_gain    = false
    untracked bool   doFitTime_gain        = true

  }# module builder

  path p = { builder }
}
