Programm of measures to go from initial datacards as provided by the analysts to the ifnal result: 

---------------------------------------------------------------------------------------------------
Standard Model Checklist:
---------------------------------------------------------------------------------------------------

(1) Copy datacard inputs into package
--------------------------------------
 - HiggsAnalysis/HiggsToTauTau/setup/[em,et,mt,mm,tt]
 - naming conventions are: 
    * htt_[em,et,mt,mm,tt].inputs-sm-[7,8]TeV.root
    * vhtt.inputs-sm-[7,8]TeV.root
 - Note that we will have inputs also with mvis. It makes sense to keep those in a separate 
   directory setup_mvis in your working directory. 

(2) Scale signal yields in datacards 
--------------------------------------
 - scale2SM.py -i htt_[em,et,mt,mm,tt].inputs-sm-[7,8]TeV.root -s 'ggH, qqH, VH' -e [7,8]

(2a) Blind datacards
--------------------------------------
 - root -l
   > .x HiggsAnalysis/HiggsToTauTau.macros/blindData.C+(filename, background_patterns, signal_patterns, "*", true)
   - if you leave signal_patterns empty you will only add BG
   - if you want to inject signal add the corresponding signal (with mass information) to 
     the pattern (e.g. ggH125)

(3) Set up new datacards
--------------------------------------
 - setup-datacards.py [-i MY-SETUP] -o aux [-p '7TeV 8TeV'] -a sm -c 'em et mt mm tt' 110-145:5
   - rule of thumb to memorize the relevant options: "iOPAC"
   - you can use -i MY-SETUP to point to the setup directory, where you keep the mvis inputs.
   - you can drop -p, the default is '7TeV 8TeV'
   - attention, there is no comma separation allowed in -c
   - in this case the output will be aux, this is a directory equivalent to auxiliaries. 
     You can also use auxiliaries directly, but nore that the datacards, which are in there 
     will be overwritten. 

(4) Set up limit calculation directory
--------------------------------------
 - cvs2local.py [-i aux] -o LIMITS [-p '7TeV 8TeV'] -a sm -c 'em et mt mm tt' 110-145:5 
   - rule of thumb to memorize the relevant options: "iOPAC"
   - attention, there is no comma separation allowed in -c

(4a) Set limit calculation with sub-channels
--------------------------------------
 - setup-htt.py [-i aux] -o LIMITS [-p '7TeV 8TeV'] -a sm -c 'em et mt mm tt' 110-145:5
   - rule of thumb to memorize the relevant options: "iOPAC"
   - attention, there is no comma separation allowed in -c
   - the directory structure should now contain LIMITS/0jet, LIMITS/boost, LIMITS/vbf, 
     LIMITS/fermionic, LIMITS/gauge, LIMITS/em, LIMITS/mt, LIMITS/mm, LIMITS/et,
     LIMITS/cmb

(5) Check pulls
--------------------------------------
 - limit.py --max-likelihood --stable LIMITS/125
   - you will find the output of the fit in the sub-directory LIMITS/125/out/mlfit.txt/tex
   - the tex file should be used to dump the pulls into the AN. 
   - the txt file will be used for the postfit plots. 

(6) Postfit plots
--------------------------------------
 - cd HiggsAnalysis/HiggsToTauTau/test/
 - ./mlfit_and_copy.sh SM $CMSSW_BASE/src/LIMITS/125
 - python produce_macros.py
   - check the defaults with --help. Be careful tt has to be done separately as it only exists 
     for 8TeV. 
   - ATTENTION: there is a few potential fixes needed, in case Josh finally renamed his datacards 
     to follow the conventions. Also if there is a decision to move from ZLL to ZL and ZJ also 
     in the VBF event category. In General all templates should be revised a bit after the final 
     HCP datacards arrive. From that point on we might loose backwards compatibility.  
 - python run_macros.py
   - check the defaults with --help. Be careful tt has to be done separately as it only exists 
     for 8TeV.

(7) Limit calculation
--------------------------------------
 - limit.py --asymptotic LIMITS/*
 - plot asymptotic HiggsAnalysis/HiggsToTauTau/python/layouts/sm_htt_layout.py LIMITS

(8) Significance calculation (/w bands)
--------------------------------------
 - submit-slave.py --method significance -t 1000 -j 50 --lsf LIMITS/*
 - limit.py --status LIMITS/*
 - limit.py --getoutput LIMITS/*
 - limit.py --significance LIMITS/*
 - plot significance HiggsAnalysis/HiggsToTauTau/python/layouts/sm_sig_layout.py LIMITS
 - this works only for lxbatch or equivalent.  

(9) Limit calculation (/w signal inj.)
--------------------------------------
 - lxb/q_inject.py 

(10) Multidimensional fits (125GeV)
--------------------------------------
 - at the moment for lxb: do the following: 
 - setting up models standalone: 
   limit.py --multidim-fit --setup-only --physics-model '{MODEL}' --physics-model-options '{OPT}' MY-LIMITS/125
 - determine limit boundaries from single fits: 
   limit.py --multidim-fit --algo singles --physics-model MODEL --name OUTPUTNAME  MY-LIMITS/125
   - models are:
     - ggH-qqH=HiggsAnalysis.CombinedLimit.PhysicsModel:floatingXSHiggs 
     - cV-cF=HiggsAnalysis.CombineLimit.HiggsCouplings:cVcF
   - once models are created they can be picked up by there names e.g. ggH-qqh, ggh-bbH, cV-cF. It can be any other 
     name that has been defined beforehand.

 - run ggH-qqH (spacing 0.02 from 0...5, square) [for a fine scan we can go with half the spacing]
   lxb-multidim-fit.py -n GGH-QQH --njob 100 --npoints 625 --physics-model 'ggH-qqH=HiggsAnalysis.CombinedLimit.PhysicsModel:floatingXSHiggs' --physics-model-options 'modes=ggH,qqH ggHRange=0:5 qqHRange=0:5' Limits/sm/hcp-fit/ggH-qqH/125
   lxb-multidim-fit.py --collect --name GGH-QQH

 - run cV-cF (spacing 0.02 from 0...3, square) [for a fine scan we can go with half the spacing]
   lxb-multidim-fit.py -n CV-CF --njob 100 --npoints 225 --physics-model 'cV-cF=HiggsAnalysis.CombinedLimit.HiggsCouplings:cVcF' --physics-model-options 'modes=ggH,qqH cVRange=0:3 cFRange=0:3' Limits/sm/hcp-fit/cv-cf/125


---------------------------------------------------------------------------------------------------
MSSM Checklist:
---------------------------------------------------------------------------------------------------

(0) Bin-by-bin uncertainties + scaling(SM case) + setup-directory structure (OLD or NOT TESTED)
--------------------------------------
 - reload.py (options) (masses)  

(1) Copy datacard inputs into package
--------------------------------------
 - HiggsAnalysis/HiggsToTauTau/setup/[em,et,mt,mm,tt,hbb]
 - naming conventions are: 
    * htt_[em,et,mt,mm,tt].inputs-mssm-[7,8]TeV-[0,1].root
    * hbb.inputs-mssm-[7,8]TeV-[0,1].root

(1a) Blind datacards (OLD or NOT TESTED)
--------------------------------------
 - root -l
   > .x HiggsAnalysis/HiggsToTauTau/macros/blindData.C+(filename, background_patterns, signal_patterns, "*", true)
   - if you leave signal_patterns empty you will only add BG
   - if you want to inject signal add the corresponding signal (with mass information) to
     the pattern (e.g. ggH130)

(1b) Acceptance correction
--------------------------------------
 - scale2accept.py -i HiggsAnalysis/HiggsToTauTau/setup/[em,et,mt,mm,tt,hbb] (-p '7TeV/8TeV') -c "mm, em, mt, et, tt, hbb" 90 100-200:20 130 250-500:50 600-1000:100
   - default for -p is '7TeV 8TeV' means both
   - always has to be performed

(1c) Bin-by-Bin Uncertainties
--------------------------------------
 - add_bbb_errors.py 'et,mt,em:7TeV,8TeV:08,09:ZL,ZLL,Fakes,QCD>W' --mssm -i HiggsAnalysis/HiggsToTauTau/setup  -o MY-SETUP --threshold 0.10

(2) Set up new datacards
--------------------------------------
 - setup-datacards.py -i MY-SETUP -o aux [-p '7TeV 8TeV'] -a mssm -c 'em et mt mm tt hbb' 90 100-200:20 130 250-500:50 600-1000:100
   - rule of thumb to memorize the relevant options: "iOPAC"
   - you can use -i MY-SETUP to point to the setup directory, where you keep the mvis inputs.
   - you can drop -p, the default is '7TeV 8TeV'
   - attention, there is no comma separation allowed in -c
   - in this case the output will be aux, this is a directory equivalent to auxiliaries. 
     You can also use auxiliaries directly, but nore that the datacards, which are in there 
     will be overwritten. 

(3) Set up limit calculation directory
--------------------------------------
 - cvs2local.py [-i aux] -o LIMITS [-p '7TeV 8TeV'] -a mssm -c 'em et mt mm tt hbb' 90 100-200:20 130 250-500:50 600-1000:100
   - rule of thumb to memorize the relevant options: "iOPAC"
   - attention, there is no comma separation allowed in -c

(3a) Set limit calculation with sub-channels 
--------------------------------------
 - setup-htt.py [-i aux] -o LIMITS [-p '7TeV 8TeV'] -a mssm -c 'em et mt mm tt hbb' 90 100-200:20 130 250-500:50 600-1000:100
   - rule of thumb to memorize the relevant options: "iOPAC"
   - attention, there is no comma separation allowed in -c
   - in LIMITS there will be different sets of directories with different sets off datacards in it (seperating channels and categories)

(4) Check pulls 
--------------------------------------
 - limit.py --max-likelihood LIMITS/130
   - you will find the output of the fit in the sub-directory LIMITS/130/out/mlfit.(txt,tex)
   - the tex file should be used to dump the pulls into the AN. 
   - the txt file will be used for the postfit plots. 

(5) Postfit plots
--------------------------------------
 - cd HiggsAnalysis/HiggsToTauTau/test/
 - ./mlfit_and_copy.py -a mssm $CMSSW_BASE/src/LIMITS/160
 - python produce_macros.py -a mssm
   - check the defaults with --help. 
   - ATTENTION: there is a few potential fixes needed, in case Josh finally renamed his datacards 
     to follow the conventions. Also if there is a decision to move from ZLL to ZL and ZJ also 
     in the VBF event category. In General all templates should be revised a bit after the final 
     HCP datacards arrive. From that point on we might loose backwards compatibility.  
 - python run_macros.py -a mssm
   - check the defaults with --help.

(6) Limit calculation in tanb-mA plane
--------------------------------------
 - lxb-xsec2tanb.py (--lxq) (--name xsec2tanb) LIMITS/*
 - submit.py --tanb+ (--options "--multi-core=4") (--lxq --queue="-l h_cpu=12:00:00 -j y -o /dev/null)  LIMITS/*
 - plot --tanb HiggsAnalysis/HiggsToTauTau/python/layouts/mssm_tanb_layout.py LIMITS
 - Higgs band plotting: Set higgs125_bands to "true" in mssm_tanb_layout.py

(7) Xsec limit calculation ggH/bbH while bbH/ggH is profiled
--------------------------------------
 - submit.py (--lxq --queue="-l h_cpu=1:00:00 -j y -o /dev/null") --asymptotic --physics-model="ggH/bbH" LIMITS/*
 - plot --asymptotic HiggsAnalysis/HiggsToTauTau/python/layouts/(limit-mssm-bbH.py, limit-mssm-ggH.py) LIMITS

(8) Best fit calculation (OLD or NOT TESTED)
--------------------------------------
 - limit.py --multidim-fit [--stable] --saveResults --algo singles --confidence-level 0.68 --physics-model 
   'ggH-bbH-model=HiggsAnalysis.HiggsToTauTau.PhysicsBSMModel:floatingMSSMXSHiggs' --physics-model-options 'modes=ggH,bbH;
   ggHRange=0:20;bbHRange=0:20' LIMITS/*
   - ATTENTION: could also be useful to use lxq/b_limit.py
 - plot multidimfit HiggsAnalysis/HiggsToTauTau/python/layouts/mssm_bestfit_layout.py LIMITS
   - if you want to plot bestfit of ggH set POI in mssm_bestfit_layout.py to "r_ggH"
   - if you want to plot bestfit of bbH set POI in mssm_bestfit_layout.py to "r_bbH"

(9) 2D scans
--------------------------------------
 - submit.py (--lxq --queue="-l h_cpu=1:00:00 -j y -o /dev/null") --multidim-fit --physics-model="ggH-bbH" LIMITS/*
 - limit.py --collect --multidim-fit --physics-model="ggH-bbH" LIMITS/*
 - In python/mssm_multidim_fit_boundaries.py the ranges of ggH and bbH for different masses are defined. Those may have to be edited if lumi changes!


