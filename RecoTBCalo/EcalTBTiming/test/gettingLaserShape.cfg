process Demo =  {


module ecalEBunpacker = EcalDCCUnpackingModule{
     # untracked int32 nMaxPrintout = 100
    untracked int32 verbosity = 0
}

source = DAQEcalTBInputService{

	 untracked vstring fileNames = {'file:/home/ghezzi/data/H4-000022722-SM22-LASER-STD'}
   untracked int32 maxEvents = 1200
   untracked bool isBinary = true
}



module ecalLaser =  EcalLaserShapeTools { 
         untracked int32 verbosity = 0
         string hitCollection   = "EcalEBUncalibFixedAlphaBetaRecHits"  #needed?
         string digiCollection = "EBDigiCollection"
         string hitProducer = "uncalibHitMaker"  #needed?
         string digiProducer    = "ecalEBunpacker"
         string pndiodeProducer   = "ecalEBunpacker"
         untracked string HistogramOutFile = "histos_devel2.root"
         untracked string rootOutFile = "laser_devel2.root"
         untracked string txtOutFile    = "laser_shape2.txt"
}



path p = {
         ecalEBunpacker,
         ecalLaser}

     service = Timing { } 


#keep the logging output to a nice level
#include "FWCore/MessageLogger/data/MessageLogger.cfi"
################################ logs
     service = MessageLogger{
       untracked vstring destinations = { "pipppo.txt" }
#      untracked vstring debugModules = { "ecalEBunpacker" }
#      untracked vstring debugModules = { "ecalMonitorModule" }
#       untracked vstring debugModules = { "*" }
#       untracked vstring categories = { "EcalTBInputService",
#                              "EcalLaserAlphaBeta"
#                            }
       untracked PSet cout = { untracked string threshold = "INFO"
                     untracked PSet default = { untracked int32 limit = 1 }
                     untracked PSet EcalTBInputService = { untracked int32 limit = 1 }
                     untracked PSet  EcalLaserAlphaBeta = { untracked int32 limit = 1 }
                     untracked bool noTimeStamps = true
                     untracked bool noLineBreaks = true
                   }
     }

}
