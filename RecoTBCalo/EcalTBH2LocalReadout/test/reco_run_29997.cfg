
process RECO = {
    service = MessageLogger
    {
        untracked vstring destinations = { "cout" }
        untracked vstring categories = {  "DDLParser", "FwkJob", "FwkReport"}
        untracked PSet cout = { untracked string threshold = "INFO"
	    untracked PSet INFO        = { untracked int32 limit = 10000 }
	    untracked PSet DDLParser = { untracked int32 limit = 0 }
	    untracked PSet FwkJob = { untracked int32 limit =10 }
	    untracked PSet FwkReport = { untracked int32 limit = 20 }
	}
    }
    
    
    // Loads the events from testbeam files
    source = PoolSource { 
	untracked vstring fileNames = { 'file:/data/raw/h2.00029997.combined.OutServ_0.0.root' }
	untracked int32 maxEvents = -1
    }
    
    
    untracked PSet options = {
        untracked bool wantSummary = true  # default is false
    } 
    
    module tbunpacker = HcalTBObjectUnpacker {
	untracked int32 HcalTriggerFED  = 1
	untracked int32 HcalSlowDataFED = 3
	untracked int32 HcalTDCFED      = 8
	untracked int32 HcalQADCFED      = 8
	untracked int32 HcalSourcePosFED = -1
	untracked bool IncludeUnmatchedHits = false
	untracked string ConfigurationFile = '/home/ric/H2TB_0_8_3/src/Configuration/EcalTB/data/configQADCTDC.txt'
    }
    
    
    module ecalTBunpack = EcalRawToDigi
    {
	untracked vint32 FEDs = { 9 }
	untracked int32 EcalFirstFED = 8
	untracked string DCCMapFile = "EventFilter/EcalRawToDigi/data/DCCMap_h2.txt"
    }
    
    module ecalTBH2readout = EcalTBH2LocalReadout 
    {
	  string digiProducer   = "ecalTBunpack"
          string EBdigiCollection = ""
	  int32 tableEtaPosition = 1974
	  int32 tablePhiPosition = 64177
    }		

    # Ecal TDC Reco
    include "RecoTBCalo/EcalTBTDCReconstructor/data/ecal2006TBH2TDCReconstructor.cfi"
    
    include "Configuration/EcalTB/data/readConfigurationH2_2006_v0.cff"
    
    # uncalibrated rechit producer
    include "RecoTBCalo/EcalTBRecProducers/data/ecal2006TBH2WeightUncalibRecHit.cfi"
    replace ecal2006TBH2WeightUncalibRecHit.digiProducer = "ecalTBH2readout"	
    replace ecal2006TBH2WeightUncalibRecHit.EBdigiCollection = "ebReducedDigis"	

    module reco-pool-out = PoolOutputModule {
	untracked string fileName = "h2.2006.run_29997.root"
	untracked vstring outputCommands = {
            "keep *",
      	    "drop FEDRawDataCollection_*_*_*",
      	    "drop *_ecalTBunpack_*_*"
	}
    }    

    # HCAL start here ------

// This version is intended for unpacking files written
// at testbeam and teststands using 20 timesamples
module hcaldigi = HcalRawToDigi {
   /// At most ten samples can be put into a digi, if there are more
   /// than ten, firstSample and lastSample select which samples
   /// will be copied to the digi
   int32 firstSample = 0
   int32 lastSample = 9
   /// Flag to enable unpacking of calibration channels (default = false)
   untracked bool UnpackCalib = false
   /// Optional filter to remove any digi with "data valid" off, "error" on, 
   /// or capids not rotating
   bool FilterDataQuality = true
   /// Number of the first HCAL FED.  If this is not specified, the
   /// default from FEDNumbering is used.
   untracked int32 HcalFirstFED = 700
   /// FED numbers to unpack.  If this is not specified, all FEDs from
   /// FEDNumbering will be unpacked.
   untracked vint32 FEDs = { 700 }
}

   module hbhereco = HcalSimpleReconstructor {
    /// Indicate which digi time sample to start with when
    /// integrating the signal
    int32 firstSample = 1
    /// Indicate how many digi time samples to integrate over
    int32 samplesToAdd = 8
    /// Indicate whether to apply energy-dependent time-slew corrections
    bool correctForTimeslew = true
    /// Indicate which subdetector to reconstruct for.
    string Subdetector = 'HBHE'
    /// Give the label associated with the HcalRawToDigi unpacker module.
    /// NOTE: cross-dependency here.
    string digiLabel = 'hcaldigi'
  }
   module horeco = HcalSimpleReconstructor {
    /// Indicate which digi time sample to start with when
    /// integrating the signal
    int32 firstSample = 1
    /// Indicate how many digi time samples to integrate over
    int32 samplesToAdd = 8
    /// Indicate whether to apply energy-dependent time-slew corrections
    bool correctForTimeslew = false
    /// Indicate which subdetector to reconstruct for.
    string Subdetector = 'HO'
    /// Give the label associated with the HcalRawToDigi unpacker module.
    /// NOTE: cross-dependency here.
    string digiLabel = 'hcaldigi'
  }
   module hfreco = HcalSimpleReconstructor {
    /// Indicate which digi time sample to start with when
    /// integrating the signal
    int32 firstSample = 1
    /// Indicate how many digi time samples to integrate over
    int32 samplesToAdd = 4
    /// Indicate whether to apply energy-dependent time-slew corrections
    bool correctForTimeslew = true
    /// Indicate which subdetector to reconstruct for.
    string Subdetector = 'HF'
    /// Give the label associated with the HcalRawToDigi unpacker module.
    /// NOTE: cross-dependency here.
    string digiLabel = 'hcaldigi'
  }


// stuff for the calibration system
  es_module = HcalDbProducer {}

   es_source es_hardcode = HcalHardcodeCalibrations { untracked vstring toGet= { "PedestalWidths", "GainWidths", "QIEShape", "QIEData", "ChannelQuality", "Gains"  } }
   es_source es_ascii = HcalTextCalibrations {
      VPSet input = {
                     {
                       string object="ElectronicsMap"
                       FileInPath file="maps/emap_tb06_v6.txt"
                    },
                    {
                      string object="Pedestals"
                      FileInPath file="calib/means_ped_h2.00027923.hcal.OutServ_0.0.txt"
                    }
                  }
     }
     sequence hcalReco  = { hcaldigi, hbhereco, horeco, hfreco }
    # HCAL end here ------


   include "Geometry/CaloEventSetup/test/data/testCaloConfiguration.cfi"


   # Calo geometry service model
   include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"

   # TT constituents map
   include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"

    path p = { getCond, tbunpacker, ecalTBunpack, ecalTBH2readout, ecal2006TBH2TDCReconstructor, ecal2006TBH2WeightUncalibRecHit, hcalReco }

    endpath ep = { reco-pool-out }

}

