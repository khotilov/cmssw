# Python script generated by stageEnergy.py
# For Testbeam data processing

# Jamie Ballin, Imperial College London
# December 2008

import FWCore.ParameterSet.Config as cms
import commands

process = cms.Process("SKIM")
process.load("RecoParticleFlow.PFAnalyses.pflowProcessTestbeam_cff")
process.load("Geometry.CaloEventSetup.CaloGeometry_cff")

from RecoParticleFlow.PFAnalyses.RunDict import *
from RecoParticleFlow.PFAnalyses.pflowOptions_cfi import *

# Files to process
runs = cms.untracked.vstring(options.specificInputs)
process.source = cms.Source("PoolSource",
        fileNames=runs
)


outputTree = '/tmp/ballin/PFlowTB_Tree_' + fileLabel
outputFile = '/tmp/ballin/PFlowTB_Events_' + fileLabel

if options.batchMode <> 0 :
    outputTree = 'PFlowTB_Tree_' + fileLabel
    outputFile = 'PFlowTB_Events_' + fileLabel


if options.notracks <> 0:
    process.faketracks.justCreateEmptyCollections = cms.bool(True)
    print "Running in notrack mode"

if options.endcapMode <> 0:
    specifiedE = endcap[options.beamEnergy]
    process.particleFlowRecHitECAL.ecalRecHitsEB = cms.InputTag("pflowCalibEcalRechits", "ecalEBRechitsCalib")
    process.particleFlowRecHitECAL.ecalRecHitsEE = cms.InputTag("pflowCalibEcalRechits", "ecalEERechitsCalib")
    process.extraction.RawRecHitsEcalEB = cms.InputTag("pflowCalibEcalRechits", "ecalEBRechitsCalib")
    process.extraction.RawRecHitsEcalEE = cms.InputTag("pflowCalibEcalRechits", "ecalEERechitsCalib")
    process.faketracks.endcapMode = cms.bool(True)
    process.particleFlowRecHitHCAL.isEndcap2007 = cms.bool(True)
    process.extraction.isEndcap2007 = cms.bool(True)

process.particleFlowRecHitHCAL.thresh_Barrel = cms.double(0.0)
process.particleFlowRecHitHCAL.thresh_Endcap = cms.double(0.0)

#For calibration purposes
process.particleFlow.pf_nsigma_HCAL = cms.double(5.0)
process.particleFlow.pf_calibMode = cms.uint32(1)
process.particleFlowBlock.pf_chi2_ECAL_HCAL = cms.double(100.0)


#Uncomment this lot if you want a file of noise!
#process.particleFiltration.noiseMode=cms.bool(True)
#process.extraction.applyCleaningCuts=cms.bool(False)
#process.extraction.saveJustPions=cms.bool(False)
## Also change masterConeDeltaR in pflowCalibratable_cfi to something like 1

if options.endcapMode <> 0:
    process.extraction.isEndcap2007 = cms.bool(True)
    
process.extraction.clustersFromCandidates=cms.bool(False)
process.extraction.rechitsFromCandidates=cms.bool(False)

if options.kevents <> 0:
    process.maxEvents = cms.untracked.PSet(
        input=cms.untracked.int32(options.kevents * 1000)
    )


# Output tree of cleaned particles
process.TFileService.fileName = cms.string(outputTree)

# New Event file
process.finishup.fileName = cms.untracked.string(outputFile)

#Logging and verbosity
if options.batchMode <> 0 :
    process.load("FWCore.MessageLogger.MessageLogger_cfi")
    process.MessageLogger.cerr.FwkReport.reportEvery = 100
else :
    print 'Not running in batch mode; Verbose output enabled...'
    process.MessageLogger = cms.Service("MessageLogger")
    process.MessageLogger.destinations=cms.untracked.vstring('cout')
    process.extraction.debug = cms.int32(4)
    process.MessageLogger.debugModules=cms.untracked.vstring('*')
    #process.particleFlowBlock.debug = cms.untracked.bool(True)
    #process.particleFlow.debug = cms.untracked.bool(True)


process.p1 = cms.Path(process.pfAlgoAndExtractionTestbeam)
if options.endcapMode <> 0:
    process.p1 = cms.Path(process.pfAlgoAndExtractionTestbeamEndcaps)    

if options.outputCollections:
    process.outpath = cms.EndPath(process.finishup)
