# For HF PMT and HBHE cleaning
cvs co -r V00-00-09 JetMETAnalysis/HcalReflagging
# For HBHE flagging
addpkg CommonTools/RecoAlgos
cvs update -r V00-02-15
CommonTools/RecoAlgos/plugins/HBHENoiseFilterResultProducer.cc
cvs update -r V00-02-15
CommonTools/RecoAlgos/python/HBHENoiseFilterResultProducer_cfi.py
cvs update -r V00-02-15 CommonTools/RecoAlgos/BuildFile
#For HBHE filter
cvs update -r V00-02-13-00 CommonTools/RecoAlgos/plugins/HBHENoiseFilter.cc
cvs update -r V00-02-13-00 CommonTools/RecoAlgos/interface/HBHENoiseFilter.h
cvs update -r V00-02-13-00 CommonTools/RecoAlgos/python/HBHENoiseFilter_cfi.py
cvs update -r V00-02-13-00 CommonTools/RecoAlgos/BuildFile
#For ECAL timing based cleaning
cvs co -r CMSSW_3_6_1 RecoEcal/EgammaCoreTools # or the appropriate release
cvs co -r CMSSW_3_6_1 RecoLocalCalo/CaloTowersCreator
cvs co -r V00-11-02-03 RecoLocalCalo/EcalRecAlgos

scramv1 b -j10

#How to get the cleaned MET after re-reco:
Make sure that in your config file or in the EDAnalyzer you get 
the correct MET collection. For example:

  //Get the MET Collection
  edm::Handle<reco::CaloMETCollection> metcollection;
  iEvent.getByLabel('met::USER', metcollection);

The example above will retrieve the newly created CaloMET collection, which was 
re-recoed on the fly with the new cleaning. To retrieve the default
CaloMET collection, replace 'met::USER' with 'met::RECO'. Similarly, for tcMET
the methods would be 'tcMet::USER' and 'tcMet::RECO'
