# Config file to calibrate CSC digi data taken during Slice Tests / MTCC. 
#
# Dominique Fortin - UCR. 
#
# Note that the user will have to set the environment variables to read in from
# database prior to running this.  These can be setup in the authentication.xml file
# 
process CSCCalibDigisTEST = {

#######################################################################################
# Data

   source = PoolSource {

# Raw data read from /castor
     untracked vstring fileNames = {'castor:/castor/cern.ch/cms/emuslice/globaldaq/00000282_FilterUnitFramework_0_0.root'}
# Data file after running the unpacker in user /test directory
#     untracked vstring fileNames = {'file:digi.root'}
     untracked int32  maxEvents = 10
     untracked uint32 debugVebosity = 10
     untracked bool   debugFlag     = false
   }

#######################################################################################
# Unpacker --> transform raw data to CSCDigis 
#              Need to include in path if reading directly from raw data
     
   module cscunpacker = CSCDCCUnpacker {
       untracked bool Debug = false
       untracked string theMappingFile = "csc_slice_test_map.txt"
       untracked int32 Verbosity = 0
   }


#######################################################################################
# XML ideal geometry description

   include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

#######################################################################################
# Variables read from database for calibration purposes

   es_source = PoolDBESSource {
     VPSet toGet = {{ string record = "CSCGainsRcd"
                      string tag = "CSCGains_from_online" }}
     bool loadAll = true

#### To run with ORCON
     string connect = "oracle://orcon/CMS_COND_CSC"
     untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"

#### To run with ORCOFF
#     string connect = "oracle://cms_orcoff/CMS_COND_CSC"
#     untracked string catalog = "relationalcatalog_oracle://cms_orcoff/CMS_COND_GENERAL"

#### If set authenticationMethod = 1, then use authentication.xml file, otherwise must set environment variables first
     untracked uint32 authenticationMethod = 0
# To select from specific run range
#     string timetype = "runnumber"
# To select using timestamp
     string timetype = "timestamp"
     untracked uint32 messagelevel = 0
   }

#######################################################################################
# Output file

   module out = PoolOutputModule { untracked string fileName ="csccalibdigis.root" }

#######################################################################################
#######################################################################################
# Config parameters for CSCCalibDigis
#
#    include "RecoLocalMuon/CSCCalibDigis/data/CSCCalibDigis.cfi"
#######################################################################################
#
# Config parameters for CSCCalibDigis  
#  
# include "RecoLocalMuon/CSCCalibDigis/data/CSCCalibDigis.cfi"
#
# For the moment being, keep the content of the cfi file below
#
module muoncscdigi = CSCCalibDigisProducer {

     # Switch on/off the verbosity for debug purposes
     untracked bool debug = false
     # Mapping file for MTCC CSC chambers
     untracked string mappingFile = "../data/csc_slice_test_map.txt"
     # Label to retrieve raw data from the event
     untracked string whichRawData = "cscunpacker"
}
#######################################################################################
# XML ideal geometry description
     
   include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

#######################################################################################
#######################################################################################
# Path
#
# Add unpacker if reading from raw data
   path p = { cscunpacker, muoncscdigi }
#   path p = { muoncscdigi }
   endpath ep = { out }
}

