
process testing = {

# This is the config file controlling the producer
  include "RecoLocalMuon/CSCRecHitUF/data/cscRecHitUF.cfi"
#  include "cscRecHitUF.cfi"

#######################################################################################
#######################################################################################
#### If running on data
 source = PoolSource {
     untracked vstring fileNames = 
{
"file:/data2/drozdets/cms08/data1/MTCC_2_data/run4188.digi.0.root"
}
     untracked int32 maxEvents = 1000
  }


#### Unpacker --> transform raw data to CSCDigis
#  module cscunpacker = CSCDCCUnpacker {
#     untracked bool Debug = false
#     untracked bool PrintEventNumber = false
#     FileInPath theMappingFile = "CondFormats/CSCObjects/data/csc_slice_test_map.txt"
#     untracked int32 Verbosity = 10
#     untracked bool UseExaminer = true	
#  }

#### Variables read from database for calibration purposes
#   es_source = PoolDBESSource {
#     VPSet toGet = {
#                    { string record = "CSCGainsRcd"
#                      string tag = "CSCGains_from_online" },
#                    { string record = "CSCNoiseMatrixRcd"
#                      string tag = "CSCNoiseMatrix_from_online" },
#                    { string record = "CSCcrosstalkRcd"
#                      string tag = "CSCcrosstalk_from_online"}
#                   }
#     bool loadAll = true#

#### To run with test database
#     string connect = "oracle://devdb10/CMS_COND_CSC"
#     untracked string catalog = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL"
#### Alternative DB
###     string connect = "oracle://orcon/CMS_COND_CSC"
###     untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"
#     untracked uint32 authenticationMethod = 1
#     string timetype = "runnumber"
#     untracked uint32 messagelevel = 0
#   }
#
#######################################################################################
#######################################################################################
# This is to run with MC
#   source = PoolSource {
#      untracked vstring fileNames = {"file:cscdigis.root"}
#      untracked int32 maxEvents = -1
#      untracked uint32 debugVebosity = 10
#      untracked bool debugFlag     = false
#   }
#######################################################################################
# Always keep the following:

# Geometry
   include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

# Don't forget to comment the following out if running on MC !!!
   replace CSCGeometryESModule.useCentreTIOffsets = true

# B field
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   service = MessageLogger {
      	untracked vstring destinations = { "log.txt", "debug.txt", "errors.txt" }
      	untracked vstring statistics = { "statistics.txt" }

	# Constrain log.txt to LogInfo output...
	untracked PSet log.txt = { 
			untracked int32 lineLength = 132
                        untracked bool noLineBreaks = true
			untracked string threshold = "ERROR"
        }
      	untracked PSet debug.txt = { 
			untracked string threshold = "ERROR"
                        untracked int32 lineLength = 132
                        untracked bool noLineBreaks = true
        } 
      	untracked PSet errors.txt = { untracked string threshold = "ERROR" }
      	untracked PSet statistics.txt = { untracked string threshold = "INFO" }
   }
   
#   module out = PoolOutputModule { untracked string fileName ="cscrechits.root" }

#   path p = { cscunpacker, csc2DRecHits }
   path p = { csc2DRecHits }	

#   endpath ep = { out }
}
