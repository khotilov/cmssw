process testing = {

# This is the config file controlling the producer
  include "RecoLocalMuon/CSCRecHitB/data/cscRecHitB.cfi"

### Comment for version prior to 1_5_0_preX
  untracked PSet maxEvents = {untracked int32 input = 100}

### Input file 
   source = PoolSource {
      untracked vstring fileNames = {"file:/tmp/229F994B-4898-DB11-B0B2-00E081053FCD.root"}
      ### Uncomment if running in version prior to 1_5_0_preX
      # untracked int32 maxEvents = -1
      untracked uint32 debugVebosity = 10
      untracked bool debugFlag     = false
   }

#### 2006 slice test --> use PoolConvert
#   source = PoolConvert {
#      untracked vstring fileNames = {'castor:/castor/cern.ch/cms/emuslice/globaldaq/00000282_FilterUnitFramework_0_0.root'}
#      untracked int32 maxEvents = 10
#   }

#######################################################################################
#### If running on data
#######################################################################################
#
#
#### Unpacker --> transform raw data to CSCDigis
#  module cscunpacker = CSCDCCUnpacker {
#     untracked bool Debug = false
#     untracked bool PrintEventNumber = false
#     FileInPath theMappingFile = "CondFormats/CSCObjects/data/csc_slice_test_map.txt"
#     untracked int32 Verbosity = 10
#     untracked bool UseExaminer = true	
#     untracked uint32 ErrorMask = 0xDFCFEFFF 
#     untracked uint32 ExaminerMask = 0x7FB7BF6
#  }
#

#######################################################################################
#### Variables read from database for calibration purposes
#######################################################################################

#   es_source = PoolDBESSource {
#     VPSet toGet = {
#                    { string record = "CSCGainsRcd"
#                      string tag = "CSCGains_from_online" },
#                    { string record = "CSCNoiseMatrixRcd"
#                      string tag = "CSCNoiseMatrix_from_online" },
#                    { string record = "CSCcrosstalkRcd"
#                      string tag = "CSCcrosstalk_from_online"}
#                   }
#     bool loadAll = true
#     #### Select DB to use
#     string connect = "oracle://orcon/CMS_COND_CSC"
#     untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"
#     #### Alternative DB
#     ###     string connect = "oracle://orcon/CMS_COND_CSC"
#     ###     untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL"
#     ###     string connect = "oracle://devdb10/CMS_COND_CSC"
#     ###     untracked string catalog = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL"
#     #### Access via Frontier
#     ### untracked bool siteLocalConfig = true
#     ### string connect = "frontier://cms_conditions_data/CMS_COND_CSC"
#     string timetype = "runnumber"
#
#     PSet DBParameters = {
#                           ### Access from CERN:
#                           untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
#                           ### Acces from elsewhere, e.g. FNAL
#                           ### Need to make a local copy of the authentication.xml file
#                           # untracked string authenticationPath="./"
#                           untracked int32 messageLevel=0
#	                   untracked bool loadBlobStreamer = true
#                         }
#   }

#######################################################################################
# Always keep the following:

# Uncomment for 1_5_0_preX
   es_module = MuonNumberingInitialization { }

# Geometry
   include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

### Uncomment following if using MTCC
#   replace CSCGeometryESModule.useCentreTIOffsets = true
### Comment if using MC
   replace CSCGeometryESModule.useCentreTIOffsets = false

# B field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   service = MessageLogger {
      	untracked vstring destinations = { "log.txt", "debug.txt", "errors.txt" }
      	untracked vstring statistics = { "statistics.txt" }

	# Constrain log.txt to LogInfo output...
	untracked PSet log.txt = { 
			untracked int32 lineLength = 132
                        untracked bool noLineBreaks = true
        }
      	untracked PSet debug.txt = { 
			untracked string threshold = "DEBUG"
                        untracked int32 lineLength = 132
                        untracked bool noLineBreaks = true
        } 
      	untracked PSet errors.txt = { untracked string threshold = "ERROR" }
      	untracked PSet statistics.txt = { untracked string threshold = "INFO" }
   }
   
   module out = PoolOutputModule { untracked string fileName ="cscrechits.root" }

### Uncomment if using the CSC unpacker:
#   path p = { cscunpacker, csc2DRecHits }
### Comment if using the CSC unpacker:
   path p = { csc2DRecHits }

   endpath ep = { out }
}

