# Incremental design of configuration file for CSCRecHit2D building
# Tim Cox 03-Apr-2006. If required, turn on LogDebug output below.

process TEST = {

   source = PoolSource {
     		 untracked vstring fileNames = {'file:~/scratch/fisica/cscdigis.root'}
     		 untracked int32 maxEvents = 10
     		 untracked uint32 debugVebosity = 10
     		 untracked bool   debugFlag     = true
   }


# es_source of ideal geometry
# ===========================
# endcap muon only...
   include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"

# flags for modelling of CSC geometry
# ===================================
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"

# magnetic field (do I need it?)
# ==============================
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"


   service = MessageLogger {
      vstring destinations = { "log.txt", "debug.txt", "errors.txt" }
      vstring statistics = { "statistics.txt" }

# Constrain log.txt to LogInfo output...
##      PSet log.txt = { string threshold = "INFO" }

# No constraint on log.txt content...
      PSet log.txt = { int32 lineLength = 132
                       bool noLineBreaks = true
                     }

      PSet debug.txt = { string threshold = "DEBUG"
                        int32 lineLength = 132
                        bool noLineBreaks = true
                       } 

      PSet errors.txt = { string threshold = "ERROR" }

      PSet statistics.txt = { string threshold = "INFO" }

# turn on the following to get LogDebug output
# ============================================
##      vstring debugModules = {  "*"  } 

  }

    include "RecoLocalMuon/CSCRecHit/data/CSCRecHit2DProducer.cfi"
   
## Might want to allow different parameters for same algorithm in different chamber types?
## Then the alog_psets should be allocated per chamber type too.
   }

 module out = PoolOutputModule {
        	untracked string fileName ="cscrechits.root"
 }

 path p = {CSCRecHit2DProducer}
 endpath ep = {out}

}
