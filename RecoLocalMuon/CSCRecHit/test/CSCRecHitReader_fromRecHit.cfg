process PROD2 = {
        untracked PSet maxEvents = {untracked int32 input = -1}
	source = PoolSource {
	         untracked vstring fileNames = {
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/00150F99-9E20-DC11-A424-000423D90024.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/048ABCC2-9E20-DC11-BD34-000423D6A434.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/143B0ABE-9E20-DC11-A6DC-000423D98708.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/14742196-9E20-DC11-A88C-000423D9462C.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/1667C89A-9E20-DC11-97C1-000423D6CA6E.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/50129593-9E20-DC11-A4CD-000423D98C24.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/52281EBB-9E20-DC11-BF23-0019BB375A4A.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/58D38CC3-9E20-DC11-A28B-000423D6CAF2.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/68107BCE-9E20-DC11-ACF9-001617DBD250.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/A25706D6-9E20-DC11-91F2-000423D94678.root"
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/D0D8B7C5-9E20-DC11-BD34-000423D9880C.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/D442BFCD-9E20-DC11-B537-001617DBD21C.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/E055887C-9E20-DC11-912E-000423D95008.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/E4508396-9E20-DC11-B0FF-000423D952F4.root",
#"castor:/castor/cern.ch/cms/store/RelVal/2007/6/22/RelVal-RelVal150SingleMuMinusPt100-1182498841/0000/F033CBBE-9E20-DC11-888F-000423D9506C.root"
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting4/cscrechits_muon_gun_5k_00.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting4/cscrechits_muon_gun_5k_01.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting4/cscrechits_muon_gun_5k_02.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting4/cscrechits_muon_gun_5k_03.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting4/cscrechits_muon_gun_5k_04.root"
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muon_gun_5k_05.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muon_gun_5k_06.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muon_gun_5k_07.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muon_gun_5k_08.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muon_gun_5k_09.root"
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_00.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_01.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_02.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_03.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_04.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_05.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_06.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_07.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_08.root",
#"castor:/castor/cern.ch/user/d/dfortin/csc_vetting2/cscrechits_muonm_gun_5k_09.root"
#"castor:/castor/cern.ch/user/d/dfortin/cscrechitsB_1_5_0.root",
#"castor:/castor/cern.ch/user/d/dfortin/cscrechitsB_1_5_0_b.root"
"castor:/castor/cern.ch/user/d/dfortin/cscrechits_00.root",
"castor:/castor/cern.ch/user/d/dfortin/cscrechits_01.root",
"castor:/castor/cern.ch/user/d/dfortin/cscrechits_02.root",
"castor:/castor/cern.ch/user/d/dfortin/cscrechits_03.root"
#"castor:/castor/cern.ch/user/d/dfortin/cscrechits_04.root"
}	
     		 untracked uint32 debugVebosity = 10
     		 untracked bool   debugFlag     = false
		}
 
        include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
        include "Geometry/CSCGeometry/data/cscGeometry.cfi"
        es_module = MuonNumberingInitialization { }

	module rechitreader = CSCRecHitReader{
		# Switch on/off the verbosity and turn on/off histogram production
		untracked bool debug = false
		# Label to retrieve SimHits from the event
		untracked string simHitLabel = 'g4SimHits'
	        # Tim's code outputs "r" instead of g4SimHits...
                # untracked string simHitLabel = 'r'
		# Label to retrieve cscdigis from the event
                # Label to retrieve digis from the event
                untracked string CSCStripDigiProducer = "muonCSCDigis"
                untracked string CSCWireDigiProducer  = "muonCSCDigis"
		# Label to retrieve RecHits from the event
		# untracked string recHitLabel = 'rechitproducer'
                untracked string recHitLabel = 'csc2DRecHits'
		# Name of the root file which will contain the output histograms
		untracked string rootFileName = "cscrechitplots.root"
	        # Maximum distance between simhit and rechit
	        untracked double maxRechitDistance = 9999.
		# Maximum number of reco hits per layer of any given chamber
	        untracked int32 maxRechitPerLayer = 9999
		# Maximum number of sim hits per layer of any given chamber
	        untracked int32 maxSimhitPerLayer = 10
	        # WhichEndcap:  0 = both,  1 = +Z,  2 = -Z
	        untracked int32 WhichEndCap = 0
	}	

# Useful to debug:
#	module ana = EventContentAnalyzer {untracked int32 debugLevel = 2}
	path p = {rechitreader}
}

