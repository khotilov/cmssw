0. Recipe for the impatient
---------------------------

The following has worked for me (not tested with copy-paste yet!)

   cd ~/testreleases/cmssw
   scramv1 project CMSSW CMSSW_1_8_4
   cd CMSSW_1_8_4/src
   eval `scramv1 runtime -csh`
   project CMSSW

   cvs co -r V01-06-05 TrackPropagation/SteppingHelixPropagator
   cvs co -r V02-05-01-07 FastSimulation/Event
   cvs co -r V01-04-09-05 FastSimulation/Configuration
   cvs co -r V00-00-04-01 FastSimulation/MuonSimHitProducer
   cvs co -r V00-00-08-03 FastSimulation/Muons
   cvs co -r V00-00-13-01 FastSimulation/ParamL3MuonProducer
   cvs co -r V04-02-02-01 FastSimulation/MaterialEffects
   cvs co -r V05-00-11-01 FastSimulation/CaloRecHitsProducer
   cvs co -r V02-00-00-01 FastSimulation/Calorimetry
   cvs co -r V01-04-00-03 FastSimulation/TrajectoryManager
   addpkg FastSimulation/EventProducer

   cvs co -r V00-00-10 HeavyFlavorAnalysis/Examples
   cvs co -r V00-00-10 AnalysisDataFormats/HeavyFlavorObjects
   cd AnalysisDataFormats/HeavyFlavorObjects/
   make all
   cd -
   scramv1 b

   mv FastSimulation/MaterialEffects/data/ ~/scratch0/
   cd FastSimulation/MaterialEffects
   ln -s ~/scratch0/data
   cd -
   cp /afs/cern.ch/cms/data/CMSSW/FastSimulation/MaterialEffects/data/*Val* FastSimulation/MaterialEffects/data/.
   cd HeavyFlavorAnalysis/Examples/test/
   ln -s . scratch
   mkdir scratch/ana
   
Now you have two options: 

1) Run FAMOS and the analysis code (ntuple dumper) in one go: 
     cmsRun HFExample.cfg
     root
       gSystem->Load("../../../AnalysisDataFormats/HeavyFlavorObjects/lib/libAna00.so");
       .x HFExample.C

2) Alternatively, generate an example RECO file (it will contain Bs -> mu+ mu-)
     ln -s . scratch  # or somewhere else!
     mkdir scratch/ana
     cmsRun Bs2MuMu_GEN_SIM_DIGI_RECO.cfg 

   Run EDAnalyzers and fill a tree
     cmsRun test.cfg

   Look at the tree
     root
       gSystem->Load("../../../AnalysisDataFormats/HeavyFlavorObjects/lib/libAna00.so");
       .x test.C



A better way for analysis is with the compiled root class: 
   cd ../../../AnalysisDataFormats/HeavyFlavorObjects/test
   ../bin/runMyReader -f ../../../HeavyFlavorAnalysis/Examples/test/scratch/ana/hfexample.root
   root 
      TFile f("hfexample.defaults.root")
      m100->Draw()


1. Notes
--------

o Both FAMOS and FULLSIM examples are provided. FAMOS requires some
  change of name (e.g. muons -> paramMuons:ParamGlobalMuons). These
  are collected in data/HFFamosReplacements.cff. 

o A few cfg files in test provide the following options: 

  HFExample.cfg runs PYTHIA+GenFilters+FAMOS+NTP-dumping in one go. No
  CMSSW file is produced, only the ntuple. By default it contains B+
  -> J/psi K+. 

  test.cfg runs PYTHIA+FULLSIM. The output is a CMSSW file. 

o Be careful about MSEL=5 and MSEL=1: MSEL=1 is the only fully correct
  way to generate  events. However, it generates minimum  bias, so 99%
  of  all events  do not  contain a  b quark.  You can  filter  on the
  generator level with the bFilter (see data/mc.cff). 

  As  a fast  way  to  generate bbbar-events,  MSEL=5  is useful.   It
  generates only gluon-fusion events with bbbar in the final state. It
  runs  about 100  times  faster than  MSEL=1,  but the  b quarks  are
  produced  back-to-back;  in gluon  splitting  they  are  not at  all
  back-to-back.



2. Missing features
-------------------

Please  send an  email  to Urs  Langenegger  if you  would like  other
features.
