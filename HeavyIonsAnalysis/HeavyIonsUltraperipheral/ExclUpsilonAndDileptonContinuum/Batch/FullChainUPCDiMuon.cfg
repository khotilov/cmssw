process Rec = 
{
    untracked PSet maxEvents = {untracked int32 input =10000}
    # this example configuration offers some minimum 
    # annotation, to help users get through; please
    # don't hesitate to read through the comments
    
    
    # use MessageLogger to redirect/suppress multiple
    # service messages coming from the system
    #
    # in this config below, we use the replace option to make
    # the logger let out messages of severity ERROR (INFO level
    # will be suppressed), and we want to limit the number to 10
    #
    include "Configuration/ReleaseValidation/data/Services.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff" 
    include "FWCore/MessageService/data/MessageLogger.cfi"
    
    # in you wish to quiet the logger even more and leave in 
    # only info from the Framework, use config example below :
    #
    #service = MessageLogger
    #{
    #   untracked vstring destinations = {"cout"} 
    #   untracked vstring categories = { "FwkJob" } 
    #   untracked PSet cout =
    #   {
    #      untracked PSet default = { untracked int32 limit = 0 }  # kill all messages in the log
    #      untracked PSet FwkJob  = { untracked int32 limit = -1 } # but FwkJob category - those unlimitted
    #   } 
    #}
    
  
    
 # an example of "source", read a pre-generated event sample
    #
    source = PoolSource {
     //  untracked vstring fileNames = {'file:starlight.up1s.mumu.gen-00.root'}	
        untracked vstring fileNames = {'castor:/castor/cern.ch/user/k/kumarv/pp/Gen/mumucont.gen.root'}	
        
	untracked uint32 skipEvents =10000
	untracked string catalog = 'PoolFileCatalog.xml'
    }

    
    # this config frament brings you 3 steps of the detector simulation:
    # -- vertex smearing (IR modeling)
    # -- G4-based hit level detector simulation
    # -- digitization (electronics readout modeling)
    # it returns 2 sequences : 
    # -- psim (vtx smearing + G4 sim)
    # -- pdigi (digitization in all subsystems, i.e. tracker=pix+sistrips,
    #           cal=ecal+ecal-0-suppression+hcal), muon=csc+dt+rpc)
    #
    include "Configuration/StandardSequences/data/Simulation.cff"
    
    # please note the IMPORTANT: 
    # in order to operate Digis, one needs to include Mixing module 
    # (pileup modeling), at least in the 0-pileup mode
    #
    # There're 3 possible configurations of the Mixing module :
    # no-pileup, low luminosity pileup, and high luminosity pileup
    #
    # they come, respectively, through the 3 config fragments below
    #
    # *each* config returns label "mix"; thus you canNOT have them
    # all together in the same configuration, but only one !!!
    #
    
    
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
    #include "Configuration/StandardSequences/data/MixingLowLumiPileUp.cff" 
    #include "Configuration/StandardSequences/data/MixingHighLumiPileUp.cff" 
    
    include "Configuration/StandardSequences/data/L1Emulator.cff" 

    include "Configuration/StandardSequences/data/DigiToRaw.cff"

    include "Configuration/StandardSequences/data/VtxSmearedBetafuncEarlyCollision.cff"
    
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    #
    # You can set Mag Field to 0
    #
    #include "Configuration/StandardSequences/data/UseZeroBField.cff"
    
  //  path p0 = {pgen} # generator
    path p1 = {psim} # simulation
    path p2 = {pdigi} # digitization
    path p3 = {L1Emulator}
    path p4 = {DigiToRaw}
    path p5 = {reconstruction} # reconstruction
    
    # Event output
    include "Configuration/EventContent/data/EventContent.cff"
    module FEVT = PoolOutputModule 
    { 
     	using FEVTSIMEventContent
	untracked string fileName = "castor:/castor/cern.ch/user/k/kumarv/pp/Reco/mumucont.reco00.root"
	//untracked string fileName ="junk.root"	

	}
    
    endpath outpath = {FEVT}
    
    schedule = {p1,p2,p3,p4,p5,outpath}
}		
