
/*!

\page Validation_GlobalHits Package Validation/GlobalHits

<center>
<small>

<!-- @PROJ_VERS@ will be substituted at build time, no need to touch -->
<a href=http://cmsdoc.cern.ch/swdev/viewcvs/viewcvs.cgi/CMSSW/Validation/GlobalHits/?cvsroot=CMSSW&only_with_tag=@PROJ_VERS@>CVS</a> - 
<a href=http://cmsdoc.cern.ch/swdev/viewcvs/viewcvs.cgi/CMSSW/Validation/GlobalHits/.admin/developers?rev=HEAD&cvsroot=CMSSW&content-type=text/vnd.viewcvs-markup>Administrative privileges</a>
</small>
</center>

\section desc Description
<!-- Short description of what this package is supposed to provide -->

This package uses the geometry information of the subdetectors and the
simulated output from OscarProducer to find simulated hits of the full
CMS detector in global coordinates (i.e. a port of ExSimHitStatistics
to CMSSW). It inserts into the event a PGlobalSimHit object as defined in
SimDataFormats/GlobalValidation.

\subsection interface Public interface
<!-- List the classes that are provided for use in other packages (if any) -->

GlobalValProducer

\subsection modules Modules
<!-- Describe modules implemented in this package and their parameter set -->

GlobalValProducer

\subsection tests Unit tests and examples
<!-- Describe cppunit tests and example configuration files -->
This package is run from the Validation/GlobalHits/test directory. To execute 
type cmsRun -p *.cfg with one of the following three .cfg files:

<b>EvtGen+DetSim+Global.cfg</b>: runs the full chain of event generation, detector
	simulation and global translation making use of local .cfi files
	in the test/data directory (and in some cases standard files when
	available and appropriate). For instance, you can quickly change
	between different generators by uncommenting the one you want and
	commenting all others. Right now EGun and Pythia have .cfi files.
	Output appears in GlobalValProducer.root

<b>EvtGen+DetSim.cfg</b>: runs the event generation and detector simulation
	using the same .cfi files as above. The ouput goes to 
	evtgen_detsim.root which can then be processed by GlobalValProducer.cfg
 	to produce the same GlobalValProducer.root as the full chain, but 
	allowing for faster turn-around while debugging the code
<b>GlobalValProducer.cfg</b>: uses evtgen_detsim.root (or any file which contains
	the output of SimG4Core) to add the PGlobalSimHit object

There are two macros to process the data:

<b>MakeHistograms.C</b>: a macro that processes GlobalValProducer.root creating a 
	GlobalValHistograms.ps file with formatted histograms as 
	well as a GlobalValHistograms.root file holding the same histograms. 
	This macro makes use of the PGlobalSimHit accessor methods, so a 
	.rootrc and rootlogon.C file is provided to load the FWLite package to 
	provide this functionality.
<b>MakeValidation.C</b>: a macro that processes GlobalValProducer.root using 
	the MakeHistograms.C macro. It then compares the new 
	GlobalValHistograms.root file against the reference 
	GlobalValHistograms-reference.root from a previous release using the 
	Chi2Test method and produces a GlobalValHistogramsCompare.ps file with 
	the superimposed plots (solid blue for reference, dashed red for new)
	and the returned value of the Chi2Test.

\section status Status and planned development
<!-- e.g. completed, stable, missing features -->
Future revisions will include scripts to automate the process with OVAL.

<hr>
Last updated:
@DATE@  Author: computer-generated.
*/

