The variables immediatly below are internal values for this test suite.

<var name="TEST_OUTPUT_FILE" value="electronHistos.root">
<var name="TEST_RELEASE" value="3_3_0_pre6">
<var name="TEST_GLOBAL_TAG" value="MC_31X_V9">

The difffile tag implies that after each run the eventual file electronHistos.root is automatically
renamed as target.olog.electronHistos.root . This way, we can use the same output file
name for all the cmsRun configurations, yet keeping a separate copy of each kind of
execution.

<difffile name="electronHistos.root">

The DBS_* variables are configuration variables for dbs_discovery.py,
which prepares and send a query to the Data Discovery web server,
and receive as a result the corresponding list of input data files.

<var name="DBS_RELEASE" value="CMSSW_${TEST_RELEASE}">
<var name="DBS_TIER" value="-RECO">
<var name="DBS_COND" value="${TEST_GLOBAL_TAG}-v*">

The VAL_* variables are configuration variables for electronValidation.csh,
which compares the histograms from two releases. electronValidation.csh relies
on the ROOT script electronValidation.C.

<var name="VAL_NEW_RELEASE" value="330pre6_new">
<var name="VAL_REF_RELEASE" value="330pre6">

%IMPORTANT% If we do not set specific VAL_REF_File values below, electronValidation.csh will
%IMPORTANT% compare the current histograms with the root files stored as ref in CVS. In such
%IMPORTANT% a case, the VAL_REF_RELEASE just above must be given the value corresponding
%IMPORTANT% to those ref file. We would like that the release of this file in the head
%IMPORTANT% of CVS contains the rigth value for the corresponding head release of root
%IMPORTANT% reference files. If you change the value of VAL_REF_RELEASE above and various
%IMPORTANT% VAL_REF_FILE below for a specific validation with specific ref files, please
%IMPORTANT% undo the changes before committing anything, so that CVS head always contains
%IMPORTANT% a consistent default configuration

The tags below are defining which are the output lines of reference, to be compared
from one execution to another. Currently, for each TH1 histogram, we require a constant
number of entries, and no more than 10% change on each histogram sum.

<diffline expr="^(TH1.Print Name  = [a-zA-Z_]+, Entries= ).*$">
<diffnumber expr="^TH1.Print Name  = [a-zA-Z_]+, Entries= (\d+),.*$" tolerance="20%">
<diffnumber expr="^TH1.Print Name  = [a-zA-Z_]+, Entries= \d+, Total sum= (\S+)$" tolerance="10%">
<diffline expr="^(h_\S+ has )\d+ entries of mean value \S+$">
<diffnumber expr="^h_\S+ has (\d+) entries of mean value \S+$" tolerance="20%">
<diffnumber expr="^h_\S+ has \d+ entries of mean value (\S+)$" tolerance="10%">
<!diffvar name="HISTO" expr="^TH1.Print Name  = [a-zA-Z_]+, Entries= \d+, Total sum= (\S+)$" tolerance="10%">

<file name="dbs_discovery.txt">
/tmp/RelValSingleElectronPt10-RECO.root
/tmp/RelValSingleElectronPt35-RECO.root
/tmp/RelValTTbar-RECO.root
/tmp/RelValZEE-MC-RECO.root
/tmp/RelValZEE-STARTUP-RECO.root
/tmp/RelValQCD_Pt_80_120-RECO.root
</file>
  
Here comes the concrete executables to run. They are split among few different
environments, each one defining the relevant variales for a given data sample.
Running dbs_discovery.py is only usefull to check the correctness of the list of
input data files returned by the data discovery web server. We guess that from
time to time we will have to upgrade the values DBS_* variable so to keep in
touch with changes in data catalog structure.

<environment name="WorkflowCheck">

This sequence of commands is meant to check if the automatic validation is working
well. You can run it all with the command "oval run %Step%".

  <environment name="Step1Pt35">
    <executable name="cmsDriver.py" args="SingleElectronPt35.cfi -s GEN:ProductionFilterSequence,SIM,DIGI,L1,DIGI2RAW,HLT -n 10 --eventcontent FEVTDEBUGHLT --conditions FrontierConditions_GlobalTag,${TEST_GLOBAL_TAG}::All --python_filename=Step1Pt35Raw_cfg.py --fileout=Step1Pt35Raw.root --mc --no_exec">
    <executable name="cmsRun" args="Step1Pt35Raw_cfg.py">
  </environment>
  
  <environment name="Step2Pt35">
    <executable name="cmsDriver.py" args="step2 -s RAW2DIGI,RECO,VALIDATION --filein file:Step1Pt35Raw.root -n 10 --eventcontent RECOSIM --conditions FrontierConditions_GlobalTag,${TEST_GLOBAL_TAG}::All --python_filename=Step2Pt35Reco_cfg.py --fileout=Step2Pt35Reco.root --mc --no_exec">
    <executable name="cmsRun" args="Step2Pt35Reco_cfg.py">
  </environment>

  <environment name="Step3Pt35">
    <executable name="cmsDriver.py" args="step3 -s HARVESTING:validationHarvesting --filein file:Step2Pt35Reco.root  --harvesting AtJobEnd --conditions FrontierConditions_GlobalTag,${TEST_GLOBAL_TAG}::All --python_filename=Step3Pt35Histos_cfg.py --mc --no_exec">
    <executable name="cmsRun" args="Step3Pt35Histos_new_cfg.py">
  </environment>

  <environment name="Step4Pt35">
    <var name="VAL_NEW_FILE" value="DQM_V0001_R000000001__Pt35__CMSSW_${TEST_RELEASE}__RECO.root">
    <var name="VAL_REF_FILE" value="DQM_V0001_R000000001__Pt35__CMSSW_${TEST_RELEASE}__RECO.root">
    <var name="VAL_HISTOS" value="ElectronMcSignalHistos.txt">
    <executable name="electronValidation.csh" args="Step4 DQM_V0001_R000000001__Global__CMSSW_X_Y_Z__RECO.root WorkflowCheckPt35">
  </environment>

  <environment name="Step1Qcd">
    <executable name="cmsDriver.py" args="QCD_Pt_80_120.cfi -s GEN:ProductionFilterSequence,SIM,DIGI,L1,DIGI2RAW,HLT -n 5 --eventcontent FEVTDEBUGHLT --conditions FrontierConditions_GlobalTag,${TEST_GLOBAL_TAG}::All --python_filename=Step1QcdRaw_cfg.py --fileout=Step1QcdRaw.root --mc --no_exec">
    <executable name="cmsRun" args="Step1QcdRaw_cfg.py">
  </environment>
  
  <environment name="Step2Qcd">
    <executable name="cmsDriver.py" args="step2 -s RAW2DIGI,RECO,VALIDATION --filein file:Step1QcdRaw.root -n 5 --eventcontent RECOSIM --conditions FrontierConditions_GlobalTag,${TEST_GLOBAL_TAG}::All --python_filename=Step2QcdReco_cfg.py --fileout=Step2QcdReco.root --mc --no_exec">
    <executable name="cmsRun" args="Step2QcdReco_cfg.py">
  </environment>

  <environment name="Step3Qcd">
    <executable name="cmsDriver.py" args="step3 -s HARVESTING:validationHarvesting --filein file:Step2QcdReco.root --harvesting AtJobEnd --conditions FrontierConditions_GlobalTag,${TEST_GLOBAL_TAG}::All --python_filename=Step3QcdHistos_cfg.py --mc --no_exec">
    <executable name="cmsRun" args="Step3QcdHistos_new_cfg.py">
  </environment>

  <environment name="Step4Qcd">
    <var name="VAL_NEW_FILE" value="DQM_V0001_R000000001__Qcd__CMSSW_${TEST_RELEASE}__RECO.root">
    <var name="VAL_REF_FILE" value="DQM_V0001_R000000001__Qcd__CMSSW_${TEST_RELEASE}__RECO.root">
    <var name="VAL_HISTOS" value="ElectronMcFakeHistos.txt">
    <executable name="electronValidation.csh" args="Step4 DQM_V0001_R000000001__Global__CMSSW_X_Y_Z__RECO.root WorkflowCheckQcd">
  </environment>

</environment>
  
<environment name="FullSimStdStats">

  <var name="DBS_COND" value="MC_31X_V9-v*">
  <var name="VAL_HISTOS" value="ElectronMcSignalHistos.txt">
  <!--var name="DBS_RELEASE" value="LOCAL"-->
  <!--var name="DBS_COND" value=""-->

  <environment name="FullPt10">
    <var name="DBS_SAMPLE" value="RelValSingleElectronPt10">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <executable name="electronValidation.csh" args="FullPt10 ${TEST_OUTPUT_FILE}">
  </environment>
  
  <environment name="FullPt35">
    <var name="DBS_SAMPLE" value="RelValSingleElectronPt35">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <executable name="electronValidation.csh" args="FullPt35 ${TEST_OUTPUT_FILE}">
  </environment>
  
  <environment name="FullTTbar">
    <var name="DBS_SAMPLE" value="RelValTTbar">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <executable name="electronValidation.csh" args="FullTTbar ${TEST_OUTPUT_FILE}">
  </environment>
  
  <environment name="FullZEEIdeal">
    <var name="DBS_SAMPLE" value="RelValZEE">
    <!--var name="DBS_COND" value="MC"-->
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <executable name="electronValidation.csh" args="FullZEEIdeal ${TEST_OUTPUT_FILE}">
  </environment>
  
  <environment name="FullZEEStartup">
    <var name="DBS_SAMPLE" value="RelValZEE">
    <var name="DBS_COND" value="STARTUP31X_V8-v*">
    <!--var name="DBS_COND" value="STARTUP"-->
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <executable name="electronValidation.csh" args="FullZEEStartup ${TEST_OUTPUT_FILE}">
  </environment>
  
  <environment name="FullQcdPt80-120">
    <var name="DBS_SAMPLE" value="RelValQCD_Pt_80_120">
    <var name="VAL_HISTOS" value="ElectronMcFakeHistos.txt">
    <!--executable name="dbs_discovery.py"-->
    <!--executable name="cmsRun" args="ElectronMcFakeValidation_cfg.py"-->
    <!--executable name="electronValidation.csh" args="FullQcdPt80-120 ${TEST_OUTPUT_FILE}"-->
  </environment>
  
</environment>

<environment name="FullSimHighStats">

  <var name="DBS_COND" value="*">
  <!--var name="DBS_RELEASE" value="LOCAL"-->
  <!--var name="DBS_COND" value=""-->

  <environment name="HighFlatPt5To100">
    <var name="DBS_SAMPLE" value="RelValSingleElectronFlatPt5To100">
    <var name="VAL_HISTOS" value="ElectronMcSignalHistos.txt">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <executable name="electronValidation.csh" args="HighFlatPt5To100 ${TEST_OUTPUT_FILE}">
  </environment>

</environment>


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
================================================================================
This set of targets is made to redo the electrons
with the local modified code.
================================================================================
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<environment name="Redo">

  <var name="TEST_GLOBAL_TAG" value="MC_31X_V9">
  <var name="DBS_COND" value="${TEST_GLOBAL_TAG}-v*">

  <environment name="RedoFromCore">

    <environment name="RedoFromCorePt10">
      <var name="DBS_SAMPLE" value="RelValSingleElectronPt10">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromCore_cfg.py">
    </environment>
  
    <environment name="RedoFromCorePt35">
      <var name="DBS_SAMPLE" value="RelValSingleElectronPt35">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromCore_cfg.py">
    </environment>
  
    <environment name="RedoFromCoreTTbar">
      <var name="DBS_SAMPLE" value="RelValTTbar">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromCore_cfg.py">
    </environment>
  
    <environment name="RedoFromCoreZEEIdeal">
      <var name="DBS_SAMPLE" value="RelValZEE">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-MC-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromCore_cfg.py">
    </environment>
  
    <environment name="RedoFromCoreZEEStartup">
      <var name="DBS_SAMPLE" value="RelValZEE">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-STARTUP-RECO.root">
      <var name="TEST_GLOBAL_TAG" value="STARTUP31X_V8">
      <var name="DBS_COND" value="${TEST_GLOBAL_TAG}-v*">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromCore_cfg.py">
    </environment>
  
    <environment name="RedoFromCoreQcdPt80-120">
      <var name="DBS_SAMPLE" value="RelValQCD_Pt_80_120">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromCore_cfg.py">
    </environment>
  
  </environment>

  <environment name="RedoFromRaw">

    <var name="DBS_TIER" value="-RAW">

    <environment name="RedoFromRawPt10">
      <var name="DBS_SAMPLE" value="RelValSingleElectronPt10">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromRaw_cfg.py">
    </environment>
  
    <environment name="RedoFromRawPt35">
      <var name="DBS_SAMPLE" value="RelValSingleElectronPt35">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromRaw_cfg.py">
    </environment>
  
    <environment name="RedoFromRawTTbar">
      <var name="DBS_SAMPLE" value="RelValTTbar">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromRaw_cfg.py">
    </environment>
  
    <environment name="RedoFromRawZEEIdeal">
      <var name="DBS_SAMPLE" value="RelValZEE">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-MC-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromRaw_cfg.py">
    </environment>
  
    <environment name="RedoFromRawZEEStartup">
      <var name="DBS_SAMPLE" value="RelValZEE">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-STARTUP-RECO.root">
      <var name="TEST_GLOBAL_TAG" value="STARTUP31X_V8">
      <var name="DBS_COND" value="${TEST_GLOBAL_TAG}-v*">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromRaw_cfg.py">
    </environment>
  
    <environment name="RedoFromRawQcdPt80-120">
      <var name="DBS_SAMPLE" value="RelValQCD_Pt_80_120">
      <var name="TEST_OUTPUT_FILE" value="/tmp/${DBS_SAMPLE}-RECO.root">
      <executable name="dbs_discovery.py">
      <executable name="cmsRun" args="GsfElectronRedoFromRaw_cfg.py">
    </environment>
  
  </environment>
  
</environment>


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
================================================================================
This set of targets is made for the full/fast comparison.
================================================================================
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<environment name="FastSim">

  This set of targets is made for the full/fast comparison.

  <var name="VAL_REF_RELEASE" value="FastSim">
  <var name="DBS_COND" value="MC*FastSim">
  <!var name="DBS_RELEASE" value="LOCAL">
  <!var name="DBS_COND" value="">

  <environment name="FastTTbar">
    <var name="DBS_SAMPLE" value="RelValTTbar">
    <var name="VAL_HISTOS" value="ElectronMcSignalHistos.txt">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <var name="VAL_NEW_FILE" value="cmsRun.FullTTbar.olog.${TEST_OUTPUT_FILE}">
    <var name="VAL_REF_FILE" value="cmsRun.FastTTbar.olog.${TEST_OUTPUT_FILE}">
    <executable name="electronValidation.csh" args="FastTTbar">
  </environment>
  
  <environment name="FastZEEIdeal">
    <var name="DBS_SAMPLE" value="RelValZEE">
    <var name="VAL_HISTOS" value="ElectronMcSignalHistos.txt">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <var name="VAL_NEW_FILE" value="cmsRun.FullZEEIdeal.olog.${TEST_OUTPUT_FILE}">
    <var name="VAL_REF_FILE" value="cmsRun.FastZEEIdeal.olog.${TEST_OUTPUT_FILE}">
    <executable name="electronValidation.csh" args="FastZEEIdeal">
  </environment>
  
  <environment name="FastZEEStartup">
    <var name="DBS_SAMPLE" value="RelValZEE">
    <var name="DBS_COND" value="STARTUP*FastSim">
    <var name="VAL_HISTOS" value="ElectronMcSignalHistos.txt">
    <executable name="dbs_discovery.py">
    <executable name="cmsRun" args="ElectronMcSignalValidation_cfg.py">
    <var name="VAL_NEW_FILE" value="cmsRun.FullZEEStartup.olog.${TEST_OUTPUT_FILE}">
    <var name="VAL_REF_FILE" value="cmsRun.FastZEEStartup.olog.${TEST_OUTPUT_FILE}">
    <executable name="electronValidation.csh" args="FastZEEStartup">
  </environment>
  
</environment>

