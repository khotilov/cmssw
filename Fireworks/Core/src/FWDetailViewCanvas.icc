#include "TCanvas.h"
#include "TGFrame.h"
#include "TEveWindow.h"
#include "TRootEmbeddedCanvas.h"


template <typename T>
FWDetailViewCanvas<T>::FWDetailViewCanvas ():
m_infoCanvas(0),
m_guiFrame(0),
m_viewCanvas(0)
{
}

template <typename T>
FWDetailViewCanvas<T>::~FWDetailViewCanvas ()
{
}

template <typename T>
void  FWDetailViewCanvas<T>::init(TEveWindowSlot* slot)
{
  TEveWindowPack* wp = slot->MakePack();
  wp->SetHorizontal();
  wp->SetShowTitleBar(kFALSE);
  
  slot = wp->NewSlotWithWeight(1);
  TEveWindowFrame* wf = slot->MakeFrame();
  wf->SetShowTitleBar(kFALSE);
  TGCompositeFrame* eveFrame = wf->GetGUICompositeFrame();
  m_guiFrame = new TGVerticalFrame(eveFrame, 10, 10, kSunkenFrame|kDoubleBorder);
  eveFrame->AddFrame(m_guiFrame, new TGLayoutHints(kLHintsNormal| kLHintsExpandX));
  
  TGCompositeFrame* cf = new TGCompositeFrame(eveFrame);
  eveFrame->AddFrame(cf, new TGLayoutHints(kLHintsExpandX|kLHintsExpandY));
  cf->SetCleanup(kLocalCleanup);
  
  TRootEmbeddedCanvas* ec = new TRootEmbeddedCanvas("Embeddedcanvas", cf, 100, 100, 0);
  cf->AddFrame(ec, new TGLayoutHints(kLHintsExpandX|kLHintsExpandY));
  m_infoCanvas = ec->GetCanvas();
  m_infoCanvas->SetHighLightColor(-1);
  cf->Layout();
  
  eveFrame->MapSubwindows();
  eveFrame->Layout();

  // view canvas
  slot = wp->NewSlotWithWeight(3);
  TRootEmbeddedCanvas*  ecV = new TRootEmbeddedCanvas();
  wf = slot->MakeFrame(ecV);
  wf->GetEveFrame()->SetShowTitleBar(kFALSE);
  m_viewCanvas = ecV->GetCanvas();
}


