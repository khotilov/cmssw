#include "TCanvas.h"
#include "RVersion.h"
#include "TRootEmbeddedCanvas.h"

#include "TEveWindow.h"
#include "TEveViewer.h"
#include "TEveScene.h"
#include "TEveManager.h"

#include "Fireworks/Core/interface/FWColorManager.h"

template <typename T>
FWDetailViewGL<T>::FWDetailViewGL () :
m_infoCanvas(0),
m_guiFrame(0),
m_eveViewer(0),
m_eveScene(0)
{
}

template <typename T>
FWDetailViewGL<T>::~FWDetailViewGL ()
{
   if (m_eveScene) m_eveScene->DestroyElemets();
}

template <typename T>
void  FWDetailViewGL<T>::init(TEveWindowSlot* slot)
{
  TEveWindowPack* wp = slot->MakePack();
  wp->SetHorizontal();
  wp->SetShowTitleBar(kFALSE);
  
  // canvas & widgets
  slot = wp->NewSlotWithWeight(1);
  TEveWindowFrame* wf = slot->MakeFrame();
  wf->SetShowTitleBar(kFALSE);
  TGCompositeFrame* eveFrame = wf->GetGUICompositeFrame();
  m_guiFrame = new TGVerticalFrame(eveFrame, 10, 10, kSunkenFrame|kDoubleBorder);
  eveFrame->AddFrame(m_guiFrame, new TGLayoutHints(kLHintsNormal| kLHintsExpandX));
  
  
  TGCompositeFrame* cf = new TGCompositeFrame(eveFrame);
  eveFrame->AddFrame(cf, new TGLayoutHints(kLHintsExpandX|kLHintsExpandY));
  cf->SetCleanup(kLocalCleanup);
  
  TRootEmbeddedCanvas* ec = new TRootEmbeddedCanvas("Embeddedcanvas", cf, 100, 100, 0);
  cf->AddFrame(ec, new TGLayoutHints(kLHintsExpandX|kLHintsExpandY));
  m_infoCanvas = ec->GetCanvas();
  m_infoCanvas->SetHighLightColor(-1);
  cf->Layout();
  
  eveFrame->MapSubwindows();
  eveFrame->Layout();
  
  // viewer GL 
  slot = wp->NewSlotWithWeight(3);
  m_eveViewer = new TEveViewer("Detail view");
#if ROOT_VERSION_CODE >= ROOT_VERSION(5,25,4)
  m_eveViewer->SpawnGLEmbeddedViewer(0);
#else
  m_eveViewer->SpawnGLEmbeddedViewer();
#endif
  gEve->GetViewers()->AddElement(m_eveViewer);
  slot->ReplaceWindow(m_eveViewer);
  slot->SetShowTitleBar(kFALSE);
  m_eveScene = gEve->SpawnNewScene("Detailed view");
  m_eveViewer->AddScene(m_eveScene);
}


template <typename T>
void  FWDetailViewGL<T>::setBackgroundColor(Color_t col)
{
   FWColorManager::setColorSetViewer(viewerGL(), col);
}

