Indices:
create index hlt_runnum on hlt(runnum);
create index hlt_cmslsnum on hlt(cmslsnum asc);
create index trg_runnum on trg(runnum);
create index trg_cmslsnum on trg(cmslsnum asc);
create index lumisummary_runnum on lumisummary(runnum);
create index lumisummary_cmslsnum on lumisummary(cmslsnum asc);
create index lumisummary_lumiversion on lumisummary(lumiversion);
create index cmsrunsummary_fillnum on cmsrunsummary(fillnum asc);
create index cmsrunsummary_hltkey on cmsrunsummary(hltkey);

alter table CMSRUNSUMMARY add ("STARTTIME" timestamp(6) );
alter table CMSRUNSUMMARY add ("STOPTIME" timestamp(6) );

alter table LUMIDETAIL drop constraint DETAILSOURCE;
alter table LUMIDETAIL add (constraint DETAILSOURCE foreign key (LUMISUMMARY_ID) references LUMISUMMARY (LUMISUMMARY_ID) ON DELETE CASCADE);


Glossary: FK=Foreign Key, PK=Primary Key
          lumiversion represents each lumi (re)processing
========
table 1:  LUMIVALIDATION 
columns:  runnum(uint32,PK), NOT NULL
          cmslsnum(uint32,PK), NOT NULL 
	  flag(string), NOT NULL
          comment(string), NOT NULL

========
table 2:  CMSRUNSUMMARY 
columns:  runnum(uint32,PK), NOT NULL
          fillnum(uint32) 
          sequence(string),  NOT NULL
          hltkey(string),    NOT NULL
          startime(timestamp(6)) 
          stoptime(timestamp(6))

=======
table 3:  LUMISUMMARY (insert one row per run+lumiLS+lumiversion from LUMI_RAW file)
columns:  
	  lumisummary_id(uint64, PK) NOT NULL
          runnum(uint32),            NOT NULL 
          cmslsnum(uint32),	     
          lumilsnum(uint32),         NOT NULL
          lumisource(string),        NOT NULL
          instlumi(float),           NOT NULL
          instlumierror(float),      NOT NULL
          instlumiquality(short),    NOT NULL
          cmsalive(short),           NOT NULL
          startorbit(uint32),        NOT NULL
          numorbit(uint32),          NOT NULL 
          lumisectionquality(short)  NOT NULL // use max 3 bits [HLX,HF,BRAN]
          beamenergy(float)          NOT NULL 
          beamstatus(string)         NOT NULL
          beamintensityBlob(blob)  
          trgprescale(uint32)  
          trgdeadtimecount(uint32)
	  trgbitzercount(string)     
          trgbitsblob(blob)   [[bitalias,bitcount]]
          hltpathsblob(blob)   [[pathname,inputcount,acceptcount]]
          
======
table 4:  LUMIDETAIL (insert 1 rows per run+lumiLS+lumiversion+algorithm from LUMI_RAW file)
columns: 
          lumidetail_id(uint64, PK)  NOT NULL
          lumisummary_id(FK refers to LUMISUMMARY.lumisummary_id), NOT NULL
	  bxlumivalue(blob),//blob of float                        NOT NULL
          bxlumierror(blob), //blob of float                       NOT NULL
          bxlumiquality(blob), //blob of short                     NOT NULL
          algoname(string), //occ1,occ2,et,bran                    NOT NULL
          
======
table 5: TRGHLTMAP (insert 1 row per hltpath-l1seed / populated from ConfDB+L1Seed expression parser)
         hltkey(string),        NOT NULL
         hltpathname(string),   NOT NULL
         l1seed(string)         NOT NULL

======
table 6: LUMINORM
         luminorm_id (uint32, PK) NOT NULL
         luminormversion (string) NOT NULL
         creationtime(timestamp(6)) NOT NULL
         norm_1 (float)  NOT NULL
	 bunchnormblob_1(blob)	
         energy_1 (float)
         norm_2 (float)
	 bunchnormblob_2 (blob)		
         energy_2 (float)
	 startrunnum (uint32)
	 

======== tables for global versioning and norm factors ======
table 7: LUMIVERSION
         majorversion(short)         
         minorversion(short)
	 lumisource(string)             
         luminorm_id(uin32)            
	 runnum(uint32)
				       
 ====== other helper id tables======
         lumisummary_id, NEXTID (uint64,PK)
         lumidetail_id, NEXTID (uint64,PK),
	 luminorm_id, NEXTID (uint32,PK),  
 