# /dev/CMSSW_5_0_0/HLT/V24 (CMSSW_5_0_0)

import FWCore.ParameterSet.Config as cms


HLTConfigVersion = cms.PSet(
  tableName = cms.string('/dev/CMSSW_5_0_0/HLT/V24')
)

streams = cms.PSet( 
  A = cms.vstring( 'HIDiMuon',
    'HIHighPt',
    'HIMinBiasUPC' ),
  AForPP = cms.vstring( 'BTag',
    'Commissioning',
    'Cosmics',
    'DoubleElectron',
    'DoubleMu',
    'ElectronHad',
    'FEDMonitor',
    'ForwardTriggers',
    'HT',
    'HcalHPDNoise',
    'HcalNZS',
    'HighPileUp',
    'Jet',
    'LogMonitor',
    'MET',
    'MinimumBias',
    'MuEG',
    'MuHad',
    'MuOnia',
    'MultiJet',
    'Photon',
    'PhotonHad',
    'SingleElectron',
    'SingleMu',
    'Tau',
    'TauPlusX' ),
  ALCALUMIPIXELS = cms.vstring( 'AlCaLumiPixels' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcalDT' ),
  DQM = cms.vstring( 'OnlineMonitorHI' ),
  DQMForPP = cms.vstring( 'OnlineMonitor' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressCosmics = cms.vstring( 'ExpressCosmics' ),
  HIExpress = cms.vstring( 'HIExpressPhysics' ),
  HLTDQM = cms.vstring( 'OnlineHltMonitor',
    'OnlineHltMonitorHI' ),
  HLTDQMResults = cms.vstring( 'OnlineHltResults' ),
  HLTMON = cms.vstring( 'OfflineMonitor',
    'OfflineMonitorHI' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  PhysicsDST = cms.vstring( 'PhysicsDST' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ReleaseValidation = cms.vstring(  ),
  TrackerCalibration = cms.vstring( 'TestEnablesTracker' )
)
datasets = cms.PSet( 
  AlCaLumiPixels = cms.vstring( 'AlCa_LumiPixels_v3' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEta_v10',
    'AlCa_EcalPi0_v11' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v8' ),
  BTag = cms.vstring( 'HLT_BTagMu_DiJet110_Mu5_v15',
    'HLT_BTagMu_DiJet20_Mu5_v15',
    'HLT_BTagMu_DiJet40_Mu5_v15',
    'HLT_BTagMu_DiJet70_Mu5_v15' ),
  Commissioning = cms.vstring( 'HLT_Activity_Ecal_SC7_v9',
    'HLT_BeamGas_HF_Beam1_v3',
    'HLT_BeamGas_HF_Beam2_v3',
    'HLT_BeamGas_HF_v7',
    'HLT_IsoTrackHB_v10',
    'HLT_IsoTrackHE_v11',
    'HLT_L1SingleEG12_v4',
    'HLT_L1SingleEG5_v4',
    'HLT_L1SingleJet16_v5',
    'HLT_L1SingleJet36_v5',
    'HLT_L1SingleMu10_v5',
    'HLT_L1SingleMu20_v5',
    'HLT_L1SingleMuOpen_DT_v5',
    'HLT_L1SingleMuOpen_v5',
    'HLT_L1Tech_DT_GlobalOR_v2',
    'HLT_L1_Interbunch_BSC_v4',
    'HLT_L1_PreCollisions_v4',
    'HLT_L2Mu10_v7',
    'HLT_L2Mu20_v7',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v14' ),
  Cosmics = cms.vstring( 'HLT_BeamHalo_v9',
    'HLT_L1SingleMuOpen_AntiBPTX_v4',
    'HLT_L1TrackerCosmics_v5',
    'HLT_L3MuonsCosmicTracking_v6',
    'HLT_RegionalCosmicTracking_v10' ),
  DoubleElectron = cms.vstring( 'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v6',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v11',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v10',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v11',
    'HLT_Ele22_CaloIdL_CaloIsoVL_Ele15_HFT_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_Ele17_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v9',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v13',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele8_CaloIdL_TrkIdVL_v11',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v9',
    'HLT_Ele8_v11',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v12',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v12' ),
  DoubleMu = cms.vstring( 'HLT_DoubleMu3_v15',
    'HLT_DoubleMu45_v11',
    'HLT_DoubleMu5_IsoMu5_v13',
    'HLT_DoubleMu5_v6',
    'HLT_DoubleMu7_Acoplanarity03_v5',
    'HLT_DoubleMu7_v13',
    'HLT_L1DoubleMu0_v5',
    'HLT_L2DoubleMu0_v8',
    'HLT_L2DoubleMu23_NoVertex_v9',
    'HLT_L2DoubleMu30_NoVertex_dPhi2p5_v2',
    'HLT_L2DoubleMu30_NoVertex_v5',
    'HLT_L2DoubleMu45_NoVertex_v2',
    'HLT_Mu13_Mu8_v12',
    'HLT_Mu17_Mu8_v12',
    'HLT_Mu17_TkMu8_v5',
    'HLT_Mu8_Jet40_v16',
    'HLT_TripleMu5_v14' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v2',
    'HLT_HIEcalCalibration_v1' ),
  ElectronHad = cms.vstring( 'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT200_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R014_MR200_v5',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R033_MR200_v5',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT40_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT50_v6',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v5',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v14',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralPFJet30_v4',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiCentralPFJet25_v6',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_v6',
    'HLT_Ele27_WP80_DiPFJet25_Deta3_v6',
    'HLT_Ele32_WP80_DiCentralPFJet25_PFMHT25_v6',
    'HLT_Ele32_WP80_DiPFJet25_Deta3p5_v6',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v10',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v12',
    'HLT_HT400_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT50_v6',
    'HLT_HT400_Ele60_CaloIdT_TrkIdT_v6',
    'HLT_HT450_Ele60_CaloIdT_TrkIdT_v5' ),
  ExpressCosmics = cms.vstring( 'HLT_L1SingleEG5_v4',
    'HLT_L1SingleMuOpen_AntiBPTX_v4',
    'HLT_L1SingleMuOpen_DT_v5',
    'HLT_L1TrackerCosmics_v5',
    'HLT_Random_v1',
    'HLT_ZeroBias_v5' ),
  ExpressPhysics = cms.vstring( 'HLT_DoubleEle45_CaloIdL_v7',
    'HLT_DoubleMu45_v11',
    'HLT_DoublePhoton80_v3',
    'HLT_EightJet120_v6',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v11',
    'HLT_HT2000_v6',
    'HLT_Jet370_v11',
    'HLT_Jet800_v6',
    'HLT_MET200_v8',
    'HLT_MET400_v3',
    'HLT_Mu100_eta2p1_v6',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu17_Mu8_v12',
    'HLT_Mu200_eta2p1_v3',
    'HLT_Photon225_NoHE_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon400_v3',
    'HLT_Photon75_CaloIdVL_IsoL_v11',
    'HLT_ZeroBias_v5' ),
  FEDMonitor = cms.vstring( 'HLT_DTErrors_v2' ),
  ForwardTriggers = cms.vstring( 'HLT_L1Tech_CASTOR_HaloMuon_v2' ),
  HIDiMuon = cms.vstring( 'HLT_HIL1DoubleMu0_HighQ_v2',
    'HLT_HIL1DoubleMuOpen_v2',
    'HLT_HIL2DoubleMu0_L1HighQL2NHitQ_v2',
    'HLT_HIL2DoubleMu0_NHitQ_v2',
    'HLT_HIL2DoubleMu0_v2',
    'HLT_HIL2DoubleMu3_v2',
    'HLT_HIL2Mu15_v2',
    'HLT_HIL2Mu3_NHitQ_v2',
    'HLT_HIL2Mu3_v2',
    'HLT_HIL2Mu7_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_NoCowboy_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_SS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_v2',
    'HLT_HIL3DoubleMuOpen_v2',
    'HLT_HIL3Mu3_v2' ),
  HIExpressPhysics = cms.vstring( 'HLT_HIBptxXOR_v1',
    'HLT_HICaloTower4_MinBias_v1',
    'HLT_HICentral10_v2',
    'HLT_HICentralityVeto_v1',
    'HLT_HIDiJet55_v1',
    'HLT_HIDoublePhoton10_v1',
    'HLT_HIDoublePhoton15_v1',
    'HLT_HIDoublePhoton20_v1',
    'HLT_HIDoublePhoton5_CEP_L1R_v1',
    'HLT_HIFullTrack12_L1Central_v1',
    'HLT_HIFullTrack12_L1Peripheral_v1',
    'HLT_HIFullTrack14_L1Central_v1',
    'HLT_HIFullTrack14_L1Peripheral_v1',
    'HLT_HIFullTrack20_L1Central_v1',
    'HLT_HIFullTrack20_L1Peripheral_v1',
    'HLT_HIFullTrack25_L1Central_v1',
    'HLT_HIFullTrack25_L1Peripheral_v1',
    'HLT_HIJet35U_v1',
    'HLT_HIJet50U_v1',
    'HLT_HIJet55_v1',
    'HLT_HIJet65_Jet55_v1',
    'HLT_HIJet65_v1',
    'HLT_HIJet75U_v1',
    'HLT_HIJet80_v1',
    'HLT_HIJet90U_v1',
    'HLT_HIJet95_v1',
    'HLT_HIJetE30_NoBPTX_v1',
    'HLT_HIJetE50_NoBPTX3BX_NoHalo_v1',
    'HLT_HIL1Algo_BptxXOR_BSC_OR_v1',
    'HLT_HIL1DoubleMu0_HighQ_v2',
    'HLT_HIL1DoubleMuOpen_v2',
    'HLT_HIL2DoubleMu0_L1HighQL2NHitQ_v2',
    'HLT_HIL2DoubleMu0_NHitQ_v2',
    'HLT_HIL2DoubleMu0_v2',
    'HLT_HIL2DoubleMu3_v2',
    'HLT_HIL2Mu15_v2',
    'HLT_HIL2Mu3_NHitQ_v2',
    'HLT_HIL2Mu3_v2',
    'HLT_HIL2Mu7_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_NoCowboy_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_SS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_v2',
    'HLT_HIL3DoubleMuOpen_v2',
    'HLT_HIL3Mu3_v2',
    'HLT_HIMET120_v1',
    'HLT_HIMET200_v1',
    'HLT_HIMET220_v1',
    'HLT_HIMinBiasBSC_OR_v1',
    'HLT_HIMinBiasBSC_v1',
    'HLT_HIMinBiasHF_v1',
    'HLT_HIMinBiasHfOrBSC_v1',
    'HLT_HIMinBiasHf_OR_v1',
    'HLT_HIMinBiasPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDCPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Calo_PlusOrMinus_v1',
    'HLT_HIMinBiasZDC_Calo_v1',
    'HLT_HIMinBiasZDC_PlusOrMinusPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Scint_v1',
    'HLT_HIPhoton10_Photon15_v1',
    'HLT_HIPhoton15_Photon20_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIPixelTrack10_MinBias_v1',
    'HLT_HIRandom_v1',
    'HLT_HISinglePhoton15_v1',
    'HLT_HISinglePhoton20_v2',
    'HLT_HISinglePhoton25_v2',
    'HLT_HISinglePhoton30_v2',
    'HLT_HISinglePhoton40_v2',
    'HLT_HIStoppedHSCP35_v1',
    'HLT_HIUCC010_v2',
    'HLT_HIUCC015_v2',
    'HLT_HIUPCNeuEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfMuPixel_SingleTrack_v1',
    'HLT_HIUPCNeuMuPixel_SingleTrack_v1',
    'HLT_HIUpcEcal_v1',
    'HLT_HIUpcMu_v1',
    'HLT_HIZeroBiasPixel_SingleTrack_v1',
    'HLT_HIZeroBiasXOR_v1',
    'HLT_HIZeroBias_v1' ),
  HIHighPt = cms.vstring( 'HLT_HICaloTower4_MinBias_v1',
    'HLT_HIDiJet55_v1',
    'HLT_HIDoublePhoton10_v1',
    'HLT_HIDoublePhoton15_v1',
    'HLT_HIDoublePhoton20_v1',
    'HLT_HIDoublePhoton5_CEP_L1R_v1',
    'HLT_HIFullTrack12_L1Central_v1',
    'HLT_HIFullTrack12_L1Peripheral_v1',
    'HLT_HIFullTrack14_L1Central_v1',
    'HLT_HIFullTrack14_L1Peripheral_v1',
    'HLT_HIFullTrack20_L1Central_v1',
    'HLT_HIFullTrack20_L1Peripheral_v1',
    'HLT_HIFullTrack25_L1Central_v1',
    'HLT_HIFullTrack25_L1Peripheral_v1',
    'HLT_HIJet35U_v1',
    'HLT_HIJet50U_v1',
    'HLT_HIJet55_v1',
    'HLT_HIJet65_Jet55_v1',
    'HLT_HIJet65_v1',
    'HLT_HIJet75U_v1',
    'HLT_HIJet80_v1',
    'HLT_HIJet90U_v1',
    'HLT_HIJet95_v1',
    'HLT_HIJetE30_NoBPTX_v1',
    'HLT_HIJetE50_NoBPTX3BX_NoHalo_v1',
    'HLT_HIMET120_v1',
    'HLT_HIMET200_v1',
    'HLT_HIMET220_v1',
    'HLT_HIPhoton10_Photon15_v1',
    'HLT_HIPhoton15_Photon20_v1',
    'HLT_HIPixelTrack10_MinBias_v1',
    'HLT_HISinglePhoton15_v1',
    'HLT_HISinglePhoton20_v2',
    'HLT_HISinglePhoton25_v2',
    'HLT_HISinglePhoton30_v2',
    'HLT_HISinglePhoton40_v2',
    'HLT_HIStoppedHSCP35_v1' ),
  HIMinBiasUPC = cms.vstring( 'HLT_HIBptxXOR_v1',
    'HLT_HICentral10_v2',
    'HLT_HICentralityVeto_v1',
    'HLT_HIL1Algo_BptxXOR_BSC_OR_v1',
    'HLT_HIMinBiasBSC_OR_v1',
    'HLT_HIMinBiasBSC_v1',
    'HLT_HIMinBiasHF_v1',
    'HLT_HIMinBiasHfOrBSC_v1',
    'HLT_HIMinBiasHf_OR_v1',
    'HLT_HIMinBiasPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDCPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Calo_PlusOrMinus_v1',
    'HLT_HIMinBiasZDC_Calo_v1',
    'HLT_HIMinBiasZDC_PlusOrMinusPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Scint_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIRandom_v1',
    'HLT_HIUCC010_v2',
    'HLT_HIUCC015_v2',
    'HLT_HIUPCNeuEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfMuPixel_SingleTrack_v1',
    'HLT_HIUPCNeuMuPixel_SingleTrack_v1',
    'HLT_HIUpcEcal_v1',
    'HLT_HIUpcMu_v1',
    'HLT_HIZeroBiasPixel_SingleTrack_v1',
    'HLT_HIZeroBiasXOR_v1',
    'HLT_HIZeroBias_v1' ),
  HT = cms.vstring( 'HLT_DiJet130_PT130_v10',
    'HLT_DiJet160_PT160_v10',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v6',
    'HLT_HT150_v12',
    'HLT_HT2000_v6',
    'HLT_HT200_v12',
    'HLT_HT250_AlphaT0p58_v4',
    'HLT_HT250_AlphaT0p60_v4',
    'HLT_HT250_AlphaT0p65_v3',
    'HLT_HT250_v12',
    'HLT_HT300_AlphaT0p54_v6',
    'HLT_HT300_AlphaT0p55_v4',
    'HLT_HT300_AlphaT0p60_v3',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v13',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT65_v6',
    'HLT_HT300_CentralJet30_BTagIP_v11',
    'HLT_HT300_PFMHT55_v13',
    'HLT_HT300_PFMHT65_v6',
    'HLT_HT300_v13',
    'HLT_HT350_AlphaT0p53_v11',
    'HLT_HT350_L1FastJet_MHT100_v2',
    'HLT_HT350_L1FastJet_MHT110_v2',
    'HLT_HT350_L1FastJet_v4',
    'HLT_HT350_MHT100_v4',
    'HLT_HT350_MHT110_v4',
    'HLT_HT350_v12',
    'HLT_HT400_AlphaT0p51_v11',
    'HLT_HT400_AlphaT0p52_v6',
    'HLT_HT400_L1FastJet_MHT100_v2',
    'HLT_HT400_L1FastJet_MHT90_v2',
    'HLT_HT400_L1FastJet_v4',
    'HLT_HT400_MHT100_v4',
    'HLT_HT400_MHT90_v4',
    'HLT_HT400_v12',
    'HLT_HT450_AlphaT0p51_v6',
    'HLT_HT450_v12',
    'HLT_HT500_v12',
    'HLT_HT550_v12',
    'HLT_HT600_v5',
    'HLT_HT650_v5',
    'HLT_HT700_v3',
    'HLT_HT750_L1FastJet_v4',
    'HLT_HT750_v4',
    'HLT_PFHT350_PFMHT100_v2',
    'HLT_PFHT350_PFMHT90_v2',
    'HLT_PFHT400_PFMHT80_v2',
    'HLT_PFHT400_PFMHT90_v2',
    'HLT_PFHT650_v2',
    'HLT_R014_MR150_v11',
    'HLT_R020_MR150_v11',
    'HLT_R020_MR550_v11',
    'HLT_R025_MR150_v11',
    'HLT_R025_MR450_v11',
    'HLT_R033_MR350_v11',
    'HLT_R038_MR250_v11',
    'HLT_R038_MR300_v3',
    'HLT_RMR65_v4' ),
  HcalHPDNoise = cms.vstring( 'HLT_GlobalRunHPDNoise_v6',
    'HLT_L1Tech_HBHEHO_totalOR_v4',
    'HLT_L1Tech_HCAL_HF_single_channel_v2' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v8',
    'HLT_HcalPhiSym_v9' ),
  HighPileUp = cms.vstring( 'HLT_300Tower0p5_v2',
    'HLT_300Tower0p6_v2',
    'HLT_300Tower0p7_v2',
    'HLT_300Tower0p8_v2',
    'HLT_70Jet10_v5',
    'HLT_70Jet13_v5' ),
  Jet = cms.vstring( 'HLT_DiJetAve110_v10',
    'HLT_DiJetAve190_v10',
    'HLT_DiJetAve240_v10',
    'HLT_DiJetAve300_v11',
    'HLT_DiJetAve30_v10',
    'HLT_DiJetAve370_v11',
    'HLT_DiJetAve60_v10',
    'HLT_Jet110_v10',
    'HLT_Jet190_v10',
    'HLT_Jet240_L1FastJet_v4',
    'HLT_Jet240_v10',
    'HLT_Jet300_L1FastJet_v4',
    'HLT_Jet300_v10',
    'HLT_Jet30_L1FastJet_v4',
    'HLT_Jet30_v10',
    'HLT_Jet370_L1FastJet_v4',
    'HLT_Jet370_NoJetID_v11',
    'HLT_Jet370_v11',
    'HLT_Jet60_L1FastJet_v4',
    'HLT_Jet60_v10',
    'HLT_Jet800_v6' ),
  L1Accept = cms.vstring( 'DST_Physics_v3' ),
  LogMonitor = cms.vstring( 'HLT_LogMonitor_v1' ),
  MET = cms.vstring( 'HLT_CentralJet80_MET110_v4',
    'HLT_CentralJet80_MET65_v11',
    'HLT_CentralJet80_MET80_v10',
    'HLT_CentralJet80_MET95_v4',
    'HLT_DiCentralJet20_BTagIP_MET65_v12',
    'HLT_DiCentralJet20_MET100_HBHENoiseFiltered_v5',
    'HLT_DiCentralJet20_MET80_v9',
    'HLT_DiCentralPFJet30_PFMHT80_v2',
    'HLT_DiCentralPFJet50_PFMHT80_v2',
    'HLT_DiJet60_MET45_v11',
    'HLT_IsoMu15_L1ETM20_v5',
    'HLT_L2Mu60_1Hit_MET40_v7',
    'HLT_L2Mu60_1Hit_MET60_v7',
    'HLT_MET120_HBHENoiseFiltered_v7',
    'HLT_MET120_v8',
    'HLT_MET200_HBHENoiseFiltered_v7',
    'HLT_MET200_v8',
    'HLT_MET400_v3',
    'HLT_Mu15_L1ETM20_v5',
    'HLT_PFMHT150_v18',
    'HLT_R014_MR200_CentralJet40_BTagIP_v5',
    'HLT_R014_MR400_CentralJet40_BTagIP_v5',
    'HLT_R014_MR450_CentralJet40_BTagIP_v5',
    'HLT_R020_MR300_CentralJet40_BTagIP_v5',
    'HLT_R020_MR350_CentralJet40_BTagIP_v5',
    'HLT_R030_MR200_CentralJet40_BTagIP_v5',
    'HLT_R030_MR250_CentralJet40_BTagIP_v5' ),
  MinimumBias = cms.vstring( 'HLT_JetE30_NoBPTX3BX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_v9',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v6',
    'HLT_Physics_v3',
    'HLT_PixelTracks_Multiplicity100_v9',
    'HLT_PixelTracks_Multiplicity80_v9',
    'HLT_Random_v1',
    'HLT_ZeroBias_v5' ),
  MuEG = cms.vstring( 'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdT_v5',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v9',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v15',
    'HLT_Mu15_Photon20_CaloIdL_v15',
    'HLT_Mu17_Ele8_CaloIdL_v14',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_CaloIsoVL_v6',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_Mu8_Ele17_CaloIdL_v14',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v14' ),
  MuHad = cms.vstring( 'HLT_DoubleMu5_Mass8_HT150_v6',
    'HLT_DoubleMu8_Mass8_HT150_v6',
    'HLT_DoubleMu8_Mass8_HT200_v6',
    'HLT_DoubleTkIso10Mu5_Mass8_HT150_v6',
    'HLT_DoubleTkIso10Mu5_Mass8_HT200_v6',
    'HLT_HT300_Mu15_PFMHT40_v7',
    'HLT_HT300_Mu15_PFMHT50_v6',
    'HLT_HT350_Mu5_PFMHT45_v14',
    'HLT_HT400_Mu5_PFMHT50_v6',
    'HLT_IsoMu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_IsoMu17_eta2p1_CentralJet30_v7',
    'HLT_IsoMu17_eta2p1_CentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_PFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_IsoMu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_Mu10_R014_MR200_v6',
    'HLT_Mu10_R025_MR200_v7',
    'HLT_Mu10_R029_MR200_v7',
    'HLT_Mu10_R033_MR200_v6',
    'HLT_Mu12_eta2p1_DiCentralJet20_BTagIP3D1stTrack_v7',
    'HLT_Mu12_eta2p1_DiCentralJet20_DiBTagIP3D1stTrack_v7',
    'HLT_Mu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_Mu17_eta2p1_CentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Mu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_Mu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_Mu40_HT300_v6',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu60_HT300_v6',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT200_v6',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT150_v6',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT200_v6' ),
  MuOnia = cms.vstring( 'HLT_Dimuon0_Jpsi_Muon_v12',
    'HLT_Dimuon0_Jpsi_NoVertexing_v8',
    'HLT_Dimuon0_Jpsi_v11',
    'HLT_Dimuon0_Omega_Phi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v12',
    'HLT_Dimuon0_Upsilon_v11',
    'HLT_Dimuon10_Jpsi_Barrel_v11',
    'HLT_Dimuon11_PsiPrime_v6',
    'HLT_Dimuon13_Jpsi_Barrel_v6',
    'HLT_Dimuon6_LowMass_v6',
    'HLT_Dimuon7_Upsilon_Barrel_v6',
    'HLT_Dimuon9_PsiPrime_v6',
    'HLT_Dimuon9_Upsilon_Barrel_v6',
    'HLT_DoubleMu4_Dimuon4_Bs_Barrel_v6',
    'HLT_DoubleMu4_Dimuon6_Bs_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v6',
    'HLT_DoubleMu4p5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Jpsi_Displaced_v6',
    'HLT_DoubleMu5_LowMass_Displaced_v6',
    'HLT_Mu5_L2Mu2_Jpsi_v14',
    'HLT_Mu5_Track2_Jpsi_v14',
    'HLT_Mu7_Track7_Jpsi_v15',
    'HLT_TripleMu0_TauTo3Mu_v2' ),
  MultiJet = cms.vstring( 'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v8',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v7',
    'HLT_DiCentralJet36_BTagIP3DLoose_v6',
    'HLT_DoubleJet30_ForwardBackward_v11',
    'HLT_DoubleJet60_ForwardBackward_v11',
    'HLT_DoubleJet70_ForwardBackward_v11',
    'HLT_DoubleJet80_ForwardBackward_v11',
    'HLT_EightJet120_v6',
    'HLT_EightJet35_L1FastJet_v3',
    'HLT_EightJet35_v4',
    'HLT_EightJet40_L1FastJet_v3',
    'HLT_EightJet40_v4',
    'HLT_ExclDiJet60_HFAND_v10',
    'HLT_ExclDiJet60_HFOR_v10',
    'HLT_L1DoubleJet36Central_v5',
    'HLT_QuadJet40_IsoPFTau40_v19',
    'HLT_QuadJet40_v12',
    'HLT_QuadJet45_DiJet40_v4',
    'HLT_QuadJet45_IsoPFTau45_v14',
    'HLT_QuadJet50_DiJet40_L1FastJet_v3',
    'HLT_QuadJet50_DiJet40_v6',
    'HLT_QuadJet50_IsoPFTau50_v8',
    'HLT_QuadJet70_v11',
    'HLT_QuadJet80_L1FastJet_v3',
    'HLT_QuadJet80_v6',
    'HLT_QuadJet90_v4',
    'HLT_SixJet45_L1FastJet_v3',
    'HLT_SixJet45_v4' ),
  OfflineMonitor = ( cms.vstring( 'AlCa_EcalEta_v10',
    'AlCa_EcalPhiSym_v8',
    'AlCa_EcalPi0_v11',
    'AlCa_LumiPixels_v3',
    'AlCa_RPCMuonNoHits_v7',
    'AlCa_RPCMuonNoTriggers_v7',
    'AlCa_RPCMuonNormalisation_v7',
    'HLT_300Tower0p5_v2',
    'HLT_300Tower0p6_v2',
    'HLT_300Tower0p7_v2',
    'HLT_300Tower0p8_v2',
    'HLT_70Jet10_v5',
    'HLT_70Jet13_v5',
    'HLT_Activity_Ecal_SC7_v9',
    'HLT_BTagMu_DiJet110_Mu5_v15',
    'HLT_BTagMu_DiJet20_Mu5_v15',
    'HLT_BTagMu_DiJet40_Mu5_v15',
    'HLT_BTagMu_DiJet70_Mu5_v15',
    'HLT_BeamGas_HF_Beam1_v3',
    'HLT_BeamGas_HF_Beam2_v3',
    'HLT_BeamGas_HF_v7',
    'HLT_BeamHalo_v9',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v8',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v7',
    'HLT_CentralJet80_MET110_v4',
    'HLT_CentralJet80_MET65_v11',
    'HLT_CentralJet80_MET80_v10',
    'HLT_CentralJet80_MET95_v4',
    'HLT_DTErrors_v2',
    'HLT_DiCentralJet20_BTagIP_MET65_v12',
    'HLT_DiCentralJet20_MET100_HBHENoiseFiltered_v5',
    'HLT_DiCentralJet20_MET80_v9',
    'HLT_DiCentralJet36_BTagIP3DLoose_v6',
    'HLT_DiCentralPFJet30_PFMHT80_v2',
    'HLT_DiCentralPFJet50_PFMHT80_v2',
    'HLT_DiJet130_PT130_v10',
    'HLT_DiJet160_PT160_v10',
    'HLT_DiJet60_MET45_v11',
    'HLT_DiJetAve110_v10',
    'HLT_DiJetAve190_v10',
    'HLT_DiJetAve240_v10',
    'HLT_DiJetAve300_v11',
    'HLT_DiJetAve30_v10',
    'HLT_DiJetAve370_v11',
    'HLT_DiJetAve60_v10',
    'HLT_Dimuon0_Jpsi_Muon_v12',
    'HLT_Dimuon0_Jpsi_NoVertexing_v8',
    'HLT_Dimuon0_Jpsi_v11',
    'HLT_Dimuon0_Omega_Phi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v12',
    'HLT_Dimuon0_Upsilon_v11',
    'HLT_Dimuon10_Jpsi_Barrel_v11',
    'HLT_Dimuon11_PsiPrime_v6',
    'HLT_Dimuon13_Jpsi_Barrel_v6',
    'HLT_Dimuon6_LowMass_v6',
    'HLT_Dimuon7_Upsilon_Barrel_v6',
    'HLT_Dimuon9_PsiPrime_v6',
    'HLT_Dimuon9_Upsilon_Barrel_v6',
    'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v6',
    'HLT_DoubleEle33_CaloIdL_CaloIsoT_v4',
    'HLT_DoubleEle33_CaloIdL_v8',
    'HLT_DoubleEle33_CaloIdT_v4',
    'HLT_DoubleEle45_CaloIdL_v7',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT200_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v6',
    'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v9',
    'HLT_DoubleIsoPFTau55_Trk5_eta2p1_v6',
    'HLT_DoubleJet30_ForwardBackward_v11',
    'HLT_DoubleJet60_ForwardBackward_v11',
    'HLT_DoubleJet70_ForwardBackward_v11',
    'HLT_DoubleJet80_ForwardBackward_v11',
    'HLT_DoubleMu3_v15',
    'HLT_DoubleMu45_v11',
    'HLT_DoubleMu4_Dimuon4_Bs_Barrel_v6',
    'HLT_DoubleMu4_Dimuon6_Bs_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v6',
    'HLT_DoubleMu4p5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdT_v5',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v9',
    'HLT_DoubleMu5_IsoMu5_v13',
    'HLT_DoubleMu5_Jpsi_Displaced_v6',
    'HLT_DoubleMu5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Mass8_HT150_v6',
    'HLT_DoubleMu5_v6',
    'HLT_DoubleMu7_Acoplanarity03_v5',
    'HLT_DoubleMu7_v13',
    'HLT_DoubleMu8_Mass8_HT150_v6',
    'HLT_DoubleMu8_Mass8_HT200_v6',
    'HLT_DoublePhoton40_CaloIdL_MR150_v4',
    'HLT_DoublePhoton40_CaloIdL_R014_MR150_v4',
    'HLT_DoublePhoton43_HEVT_v2',
    'HLT_DoublePhoton48_HEVT_v2',
    'HLT_DoublePhoton5_IsoVL_CEP_v10',
    'HLT_DoublePhoton70_v2',
    'HLT_DoublePhoton80_v3',
    'HLT_DoubleTkIso10Mu5_Mass8_HT150_v6',
    'HLT_DoubleTkIso10Mu5_Mass8_HT200_v6',
    'HLT_EightJet120_v6',
    'HLT_EightJet35_L1FastJet_v3',
    'HLT_EightJet35_v4',
    'HLT_EightJet40_L1FastJet_v3',
    'HLT_EightJet40_v4',
    'HLT_Ele100_CaloIdVT_TrkIdT_v4',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R014_MR200_v5',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R033_MR200_v5',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT40_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT50_v6',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v5',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v11',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v10',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v11',
    'HLT_Ele18_CaloIdVT_TrkIdT_MediumIsoPFTau20_v7',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau20_v7',
    'HLT_Ele22_CaloIdL_CaloIsoVL_Ele15_HFT_v4',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v8',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau25_v6',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v14',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralPFJet30_v4',
    'HLT_Ele27_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiCentralPFJet25_v6',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_v6',
    'HLT_Ele27_WP80_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_PFMT50_v10',
    'HLT_Ele27_WP80_v4',
    'HLT_Ele32_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_Ele17_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v9',
    'HLT_Ele32_WP70_PFMT50_v10',
    'HLT_Ele32_WP70_v4',
    'HLT_Ele32_WP80_DiCentralPFJet25_PFMHT25_v6',
    'HLT_Ele32_WP80_DiPFJet25_Deta3p5_v6',
    'HLT_Ele65_CaloIdVT_TrkIdT_v7',
    'HLT_Ele80_CaloIdVT_TrkIdT_v4',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v13',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele8_CaloIdL_TrkIdVL_v11',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v9',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v10',
    'HLT_Ele8_v11',
    'HLT_ExclDiJet60_HFAND_v10',
    'HLT_ExclDiJet60_HFOR_v10',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v6',
    'HLT_GlobalRunHPDNoise_v6',
    'HLT_HT150_v12',
    'HLT_HT2000_v6',
    'HLT_HT200_v12',
    'HLT_HT250_AlphaT0p58_v4',
    'HLT_HT250_AlphaT0p60_v4',
    'HLT_HT250_AlphaT0p65_v3',
    'HLT_HT250_v12',
    'HLT_HT300_AlphaT0p54_v6',
    'HLT_HT300_AlphaT0p55_v4',
    'HLT_HT300_AlphaT0p60_v3',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v13',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT65_v6',
    'HLT_HT300_CentralJet30_BTagIP_v11',
    'HLT_HT300_Mu15_PFMHT40_v7',
    'HLT_HT300_Mu15_PFMHT50_v6',
    'HLT_HT300_PFMHT55_v13',
    'HLT_HT300_PFMHT65_v6',
    'HLT_HT300_v13',
    'HLT_HT350_AlphaT0p53_v11',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v14',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v12',
    'HLT_HT350_L1FastJet_MHT100_v2',
    'HLT_HT350_L1FastJet_MHT110_v2',
    'HLT_HT350_L1FastJet_v4',
    'HLT_HT350_MHT100_v4',
    'HLT_HT350_MHT110_v4',
    'HLT_HT350_Mu5_PFMHT45_v14',
    'HLT_HT350_v12',
    'HLT_HT400_AlphaT0p51_v11',
    'HLT_HT400_AlphaT0p52_v6',
    'HLT_HT400_DoubleIsoPFTau10_Trk3_PFMHT50_v6',
    'HLT_HT400_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT50_v6',
    'HLT_HT400_Ele60_CaloIdT_TrkIdT_v6',
    'HLT_HT400_L1FastJet_MHT100_v2',
    'HLT_HT400_L1FastJet_MHT90_v2',
    'HLT_HT400_L1FastJet_v4',
    'HLT_HT400_MHT100_v4',
    'HLT_HT400_MHT90_v4',
    'HLT_HT400_Mu5_PFMHT50_v6',
    'HLT_HT400_v12',
    'HLT_HT450_AlphaT0p51_v6',
    'HLT_HT450_Ele60_CaloIdT_TrkIdT_v5',
    'HLT_HT450_v12',
    'HLT_HT500_v12',
    'HLT_HT550_v12',
    'HLT_HT600_v5',
    'HLT_HT650_v5',
    'HLT_HT700_v3',
    'HLT_HT750_L1FastJet_v4',
    'HLT_HT750_v4',
    'HLT_HcalCalibration_v2',
    'HLT_HcalNZS_v8',
    'HLT_HcalPhiSym_v9',
    'HLT_IsoMu15_L1ETM20_v5',
    'HLT_IsoMu15_eta2p1_LooseIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_MediumIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_TightIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_v6',
    'HLT_IsoMu15_v19',
    'HLT_IsoMu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_IsoMu17_eta2p1_CentralJet30_v7',
    'HLT_IsoMu17_eta2p1_CentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_PFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_IsoMu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_IsoMu20_v14',
    'HLT_IsoMu24_eta2p1_v8',
    'HLT_IsoMu24_v14',
    'HLT_IsoMu30_eta2p1_v8',
    'HLT_IsoMu34_eta2p1_v6',
    'HLT_IsoMu40_eta2p1_v3',
    'HLT_IsoTrackHB_v10',
    'HLT_IsoTrackHE_v11',
    'HLT_Jet110_v10',
    'HLT_Jet190_v10',
    'HLT_Jet240_L1FastJet_v4',
    'HLT_Jet240_v10',
    'HLT_Jet300_L1FastJet_v4',
    'HLT_Jet300_v10',
    'HLT_Jet30_L1FastJet_v4',
    'HLT_Jet30_v10',
    'HLT_Jet370_L1FastJet_v4',
    'HLT_Jet370_NoJetID_v11',
    'HLT_Jet370_v11',
    'HLT_Jet60_L1FastJet_v4',
    'HLT_Jet60_v10',
    'HLT_Jet800_v6',
    'HLT_JetE30_NoBPTX3BX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_v9')+cms.vstring( 'HLT_JetE50_NoBPTX3BX_NoHalo_v6',
    'HLT_L1DoubleJet36Central_v5',
    'HLT_L1DoubleMu0_v5',
    'HLT_L1SingleEG12_v4',
    'HLT_L1SingleEG5_v4',
    'HLT_L1SingleJet16_v5',
    'HLT_L1SingleJet36_v5',
    'HLT_L1SingleMu10_v5',
    'HLT_L1SingleMu20_v5',
    'HLT_L1SingleMuOpen_AntiBPTX_v4',
    'HLT_L1SingleMuOpen_DT_v5',
    'HLT_L1SingleMuOpen_v5',
    'HLT_L1Tech_CASTOR_HaloMuon_v2',
    'HLT_L1Tech_DT_GlobalOR_v2',
    'HLT_L1Tech_HBHEHO_totalOR_v4',
    'HLT_L1Tech_HCAL_HF_single_channel_v2',
    'HLT_L1TrackerCosmics_v5',
    'HLT_L1_Interbunch_BSC_v4',
    'HLT_L1_PreCollisions_v4',
    'HLT_L2DoubleMu0_v8',
    'HLT_L2DoubleMu23_NoVertex_v9',
    'HLT_L2DoubleMu30_NoVertex_dPhi2p5_v2',
    'HLT_L2DoubleMu30_NoVertex_v5',
    'HLT_L2DoubleMu45_NoVertex_v2',
    'HLT_L2Mu10_v7',
    'HLT_L2Mu20_v7',
    'HLT_L2Mu60_1Hit_MET40_v7',
    'HLT_L2Mu60_1Hit_MET60_v7',
    'HLT_L3MuonsCosmicTracking_v6',
    'HLT_LogMonitor_v1',
    'HLT_MET120_HBHENoiseFiltered_v7',
    'HLT_MET120_v8',
    'HLT_MET200_HBHENoiseFiltered_v7',
    'HLT_MET200_v8',
    'HLT_MET400_v3',
    'HLT_MediumIsoPFTau35_Trk20_MET60_v7',
    'HLT_MediumIsoPFTau35_Trk20_MET70_v7',
    'HLT_MediumIsoPFTau35_Trk20_v7',
    'HLT_Mu100_eta2p1_v6',
    'HLT_Mu10_R014_MR200_v6',
    'HLT_Mu10_R025_MR200_v7',
    'HLT_Mu10_R029_MR200_v7',
    'HLT_Mu10_R033_MR200_v6',
    'HLT_Mu12_eta2p1_DiCentralJet20_BTagIP3D1stTrack_v7',
    'HLT_Mu12_eta2p1_DiCentralJet20_DiBTagIP3D1stTrack_v7',
    'HLT_Mu12_v13',
    'HLT_Mu13_Mu8_v12',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v15',
    'HLT_Mu15_L1ETM20_v5',
    'HLT_Mu15_LooseIsoPFTau15_v15',
    'HLT_Mu15_Photon20_CaloIdL_v15',
    'HLT_Mu15_v14',
    'HLT_Mu17_Ele8_CaloIdL_v14',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu17_Mu8_v12',
    'HLT_Mu17_TkMu8_v5',
    'HLT_Mu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_Mu17_eta2p1_CentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Mu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_Mu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_Mu200_eta2p1_v3',
    'HLT_Mu20_v13',
    'HLT_Mu24_v13',
    'HLT_Mu30_v13',
    'HLT_Mu40_HT300_v6',
    'HLT_Mu40_eta2p1_v6',
    'HLT_Mu40_v11',
    'HLT_Mu50_eta2p1_v3',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_CaloIsoVL_v6',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu5_L2Mu2_Jpsi_v14',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v14',
    'HLT_Mu5_Track2_Jpsi_v14',
    'HLT_Mu5_v15',
    'HLT_Mu60_HT300_v6',
    'HLT_Mu60_eta2p1_v6',
    'HLT_Mu7_Track7_Jpsi_v15',
    'HLT_Mu8_Ele17_CaloIdL_v14',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT200_v6',
    'HLT_Mu8_Jet40_v16',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v14',
    'HLT_Mu8_v13',
    'HLT_PFHT350_PFMHT100_v2',
    'HLT_PFHT350_PFMHT90_v2',
    'HLT_PFHT400_PFMHT80_v2',
    'HLT_PFHT400_PFMHT90_v2',
    'HLT_PFHT650_v2',
    'HLT_PFMHT150_v18',
    'HLT_Photon135_v3',
    'HLT_Photon200_NoHE_v5',
    'HLT_Photon20_CaloIdVL_IsoL_v10',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v12',
    'HLT_Photon20_R9Id_Photon18_R9Id_v8',
    'HLT_Photon225_NoHE_v3',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_R9IdT_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_v5',
    'HLT_Photon26_Photon18_v8',
    'HLT_Photon26_R9IdT_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_R9IdT_Photon18_R9IdT_Mass60_v2',
    'HLT_Photon30_CaloIdVL_IsoL_v12',
    'HLT_Photon30_CaloIdVL_v9',
    'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v7',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v9',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v3',
    'HLT_Photon36_Photon22_v2',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_R9Id_Photon22_R9Id_v4',
    'HLT_Photon400_v3',
    'HLT_Photon40_CaloIdL_R014_MR150_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v7',
    'HLT_Photon40_CaloIdL_R023_MR350_v7',
    'HLT_Photon40_CaloIdL_R029_MR250_v7',
    'HLT_Photon40_CaloIdL_R042_MR200_v7',
    'HLT_Photon50_CaloIdVL_IsoL_v10',
    'HLT_Photon50_CaloIdVL_v5',
    'HLT_Photon55_CaloIdL_R017_MR500_v5',
    'HLT_Photon55_CaloIdL_R023_MR350_v5',
    'HLT_Photon55_CaloIdL_R029_MR250_v5',
    'HLT_Photon55_CaloIdL_R042_MR200_v5',
    'HLT_Photon60_CaloIdL_HT300_v4',
    'HLT_Photon60_CaloIdL_MHT70_v4',
    'HLT_Photon70_CaloIdXL_HT400_v4',
    'HLT_Photon70_CaloIdXL_HT500_v4',
    'HLT_Photon70_CaloIdXL_MHT100_v4',
    'HLT_Photon70_CaloIdXL_MHT90_v4',
    'HLT_Photon75_CaloIdVL_IsoL_v11',
    'HLT_Photon75_CaloIdVL_v8',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet25_v6',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet30_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v8',
    'HLT_Photon90_CaloIdVL_v5',
    'HLT_Physics_v3',
    'HLT_PixelTracks_Multiplicity100_v9',
    'HLT_PixelTracks_Multiplicity80_v9',
    'HLT_QuadJet40_IsoPFTau40_v19',
    'HLT_QuadJet40_v12',
    'HLT_QuadJet45_DiJet40_v4',
    'HLT_QuadJet45_IsoPFTau45_v14',
    'HLT_QuadJet50_DiJet40_L1FastJet_v3',
    'HLT_QuadJet50_DiJet40_v6',
    'HLT_QuadJet50_IsoPFTau50_v8',
    'HLT_QuadJet70_v11',
    'HLT_QuadJet80_L1FastJet_v3',
    'HLT_QuadJet80_v6',
    'HLT_QuadJet90_v4',
    'HLT_R014_MR150_v11',
    'HLT_R014_MR200_CentralJet40_BTagIP_v5',
    'HLT_R014_MR400_CentralJet40_BTagIP_v5',
    'HLT_R014_MR450_CentralJet40_BTagIP_v5',
    'HLT_R020_MR150_v11',
    'HLT_R020_MR300_CentralJet40_BTagIP_v5',
    'HLT_R020_MR350_CentralJet40_BTagIP_v5',
    'HLT_R020_MR550_v11',
    'HLT_R025_MR150_v11',
    'HLT_R025_MR450_v11',
    'HLT_R030_MR200_CentralJet40_BTagIP_v5',
    'HLT_R030_MR250_CentralJet40_BTagIP_v5',
    'HLT_R033_MR350_v11',
    'HLT_R038_MR250_v11',
    'HLT_R038_MR300_v3',
    'HLT_RMR65_v4',
    'HLT_Random_v1',
    'HLT_RegionalCosmicTracking_v10',
    'HLT_SixJet45_L1FastJet_v3',
    'HLT_SixJet45_v4',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT150_v6',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT200_v6',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v12',
    'HLT_TripleMu0_TauTo3Mu_v2',
    'HLT_TripleMu5_v14',
    'HLT_ZeroBias_v5') ),
  OfflineMonitorHI = cms.vstring( 'HLT_HIActivityHF_Coincidence3_v1',
    'HLT_HIActivityHF_Single3_v1',
    'HLT_HIBptxXOR_v1',
    'HLT_HICaloTower4_MinBias_v1',
    'HLT_HICentral10_v2',
    'HLT_HICentralityVeto_v1',
    'HLT_HIClusterVertexCompatibility_v1',
    'HLT_HIDiJet55_v1',
    'HLT_HIDoublePhoton10_v1',
    'HLT_HIDoublePhoton15_v1',
    'HLT_HIDoublePhoton20_v1',
    'HLT_HIDoublePhoton5_CEP_L1R_v1',
    'HLT_HIFullTrack12_L1Central_v1',
    'HLT_HIFullTrack12_L1Peripheral_v1',
    'HLT_HIFullTrack14_L1Central_v1',
    'HLT_HIFullTrack14_L1Peripheral_v1',
    'HLT_HIFullTrack20_L1Central_v1',
    'HLT_HIFullTrack20_L1Peripheral_v1',
    'HLT_HIFullTrack25_L1Central_v1',
    'HLT_HIFullTrack25_L1Peripheral_v1',
    'HLT_HIJet35U_v1',
    'HLT_HIJet50U_v1',
    'HLT_HIJet55_v1',
    'HLT_HIJet65_Jet55_v1',
    'HLT_HIJet65_v1',
    'HLT_HIJet75U_v1',
    'HLT_HIJet80_v1',
    'HLT_HIJet90U_v1',
    'HLT_HIJet95_v1',
    'HLT_HIJetE30_NoBPTX_v1',
    'HLT_HIJetE50_NoBPTX3BX_NoHalo_v1',
    'HLT_HIL1Algo_BptxXOR_BSC_OR_v1',
    'HLT_HIL1DoubleMu0_HighQ_v2',
    'HLT_HIL1DoubleMuOpen_v2',
    'HLT_HIL2DoubleMu0_L1HighQL2NHitQ_v2',
    'HLT_HIL2DoubleMu0_NHitQ_v2',
    'HLT_HIL2DoubleMu0_v2',
    'HLT_HIL2DoubleMu3_v2',
    'HLT_HIL2Mu15_v2',
    'HLT_HIL2Mu3_NHitQ_v2',
    'HLT_HIL2Mu3_v2',
    'HLT_HIL2Mu7_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_NoCowboy_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_SS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_v2',
    'HLT_HIL3DoubleMuOpen_v2',
    'HLT_HIL3Mu3_v2',
    'HLT_HIMET120_v1',
    'HLT_HIMET200_v1',
    'HLT_HIMET220_v1',
    'HLT_HIMinBiasBSC_OR_v1',
    'HLT_HIMinBiasBSC_v1',
    'HLT_HIMinBiasHF_v1',
    'HLT_HIMinBiasHfOrBSC_v1',
    'HLT_HIMinBiasHf_OR_v1',
    'HLT_HIMinBiasPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDCPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Calo_PlusOrMinus_v1',
    'HLT_HIMinBiasZDC_Calo_v1',
    'HLT_HIMinBiasZDC_PlusOrMinusPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Scint_v1',
    'HLT_HIPhoton10_Photon15_v1',
    'HLT_HIPhoton15_Photon20_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIPixelTrack10_MinBias_v1',
    'HLT_HIRandom_v1',
    'HLT_HISinglePhoton15_v1',
    'HLT_HISinglePhoton20_v2',
    'HLT_HISinglePhoton25_v2',
    'HLT_HISinglePhoton30_v2',
    'HLT_HISinglePhoton40_v2',
    'HLT_HIStoppedHSCP35_v1',
    'HLT_HIUCC010_v2',
    'HLT_HIUCC015_v2',
    'HLT_HIUPCNeuEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfMuPixel_SingleTrack_v1',
    'HLT_HIUPCNeuMuPixel_SingleTrack_v1',
    'HLT_HIUpcEcal_v1',
    'HLT_HIUpcMu_v1',
    'HLT_HIZeroBiasPixel_SingleTrack_v1',
    'HLT_HIZeroBiasXOR_v1',
    'HLT_HIZeroBias_v1' ),
  OnlineHltMonitor = ( cms.vstring( 'AlCa_EcalEta_v10',
    'AlCa_EcalPhiSym_v8',
    'AlCa_EcalPi0_v11',
    'AlCa_LumiPixels_v3',
    'AlCa_RPCMuonNoHits_v7',
    'AlCa_RPCMuonNoTriggers_v7',
    'AlCa_RPCMuonNormalisation_v7',
    'HLT_300Tower0p5_v2',
    'HLT_300Tower0p6_v2',
    'HLT_300Tower0p7_v2',
    'HLT_300Tower0p8_v2',
    'HLT_70Jet10_v5',
    'HLT_70Jet13_v5',
    'HLT_Activity_Ecal_SC7_v9',
    'HLT_BTagMu_DiJet110_Mu5_v15',
    'HLT_BTagMu_DiJet20_Mu5_v15',
    'HLT_BTagMu_DiJet40_Mu5_v15',
    'HLT_BTagMu_DiJet70_Mu5_v15',
    'HLT_BeamGas_HF_Beam1_v3',
    'HLT_BeamGas_HF_Beam2_v3',
    'HLT_BeamGas_HF_v7',
    'HLT_BeamHalo_v9',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v8',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v7',
    'HLT_CentralJet80_MET110_v4',
    'HLT_CentralJet80_MET65_v11',
    'HLT_CentralJet80_MET80_v10',
    'HLT_CentralJet80_MET95_v4',
    'HLT_DTErrors_v2',
    'HLT_DiCentralJet20_BTagIP_MET65_v12',
    'HLT_DiCentralJet20_MET100_HBHENoiseFiltered_v5',
    'HLT_DiCentralJet20_MET80_v9',
    'HLT_DiCentralJet36_BTagIP3DLoose_v6',
    'HLT_DiCentralPFJet30_PFMHT80_v2',
    'HLT_DiCentralPFJet50_PFMHT80_v2',
    'HLT_DiJet130_PT130_v10',
    'HLT_DiJet160_PT160_v10',
    'HLT_DiJet60_MET45_v11',
    'HLT_DiJetAve110_v10',
    'HLT_DiJetAve190_v10',
    'HLT_DiJetAve240_v10',
    'HLT_DiJetAve300_v11',
    'HLT_DiJetAve30_v10',
    'HLT_DiJetAve370_v11',
    'HLT_DiJetAve60_v10',
    'HLT_Dimuon0_Jpsi_Muon_v12',
    'HLT_Dimuon0_Jpsi_NoVertexing_v8',
    'HLT_Dimuon0_Jpsi_v11',
    'HLT_Dimuon0_Omega_Phi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v12',
    'HLT_Dimuon0_Upsilon_v11',
    'HLT_Dimuon10_Jpsi_Barrel_v11',
    'HLT_Dimuon11_PsiPrime_v6',
    'HLT_Dimuon13_Jpsi_Barrel_v6',
    'HLT_Dimuon6_LowMass_v6',
    'HLT_Dimuon7_Upsilon_Barrel_v6',
    'HLT_Dimuon9_PsiPrime_v6',
    'HLT_Dimuon9_Upsilon_Barrel_v6',
    'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v6',
    'HLT_DoubleEle33_CaloIdL_CaloIsoT_v4',
    'HLT_DoubleEle33_CaloIdL_v8',
    'HLT_DoubleEle33_CaloIdT_v4',
    'HLT_DoubleEle45_CaloIdL_v7',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT200_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v6',
    'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v9',
    'HLT_DoubleIsoPFTau55_Trk5_eta2p1_v6',
    'HLT_DoubleJet30_ForwardBackward_v11',
    'HLT_DoubleJet60_ForwardBackward_v11',
    'HLT_DoubleJet70_ForwardBackward_v11',
    'HLT_DoubleJet80_ForwardBackward_v11',
    'HLT_DoubleMu3_v15',
    'HLT_DoubleMu45_v11',
    'HLT_DoubleMu4_Dimuon4_Bs_Barrel_v6',
    'HLT_DoubleMu4_Dimuon6_Bs_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v6',
    'HLT_DoubleMu4p5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdT_v5',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v9',
    'HLT_DoubleMu5_IsoMu5_v13',
    'HLT_DoubleMu5_Jpsi_Displaced_v6',
    'HLT_DoubleMu5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Mass8_HT150_v6',
    'HLT_DoubleMu5_v6',
    'HLT_DoubleMu7_Acoplanarity03_v5',
    'HLT_DoubleMu7_v13',
    'HLT_DoubleMu8_Mass8_HT150_v6',
    'HLT_DoubleMu8_Mass8_HT200_v6',
    'HLT_DoublePhoton40_CaloIdL_MR150_v4',
    'HLT_DoublePhoton40_CaloIdL_R014_MR150_v4',
    'HLT_DoublePhoton43_HEVT_v2',
    'HLT_DoublePhoton48_HEVT_v2',
    'HLT_DoublePhoton5_IsoVL_CEP_v10',
    'HLT_DoublePhoton70_v2',
    'HLT_DoublePhoton80_v3',
    'HLT_DoubleTkIso10Mu5_Mass8_HT150_v6',
    'HLT_DoubleTkIso10Mu5_Mass8_HT200_v6',
    'HLT_EightJet120_v6',
    'HLT_EightJet35_L1FastJet_v3',
    'HLT_EightJet35_v4',
    'HLT_EightJet40_L1FastJet_v3',
    'HLT_EightJet40_v4',
    'HLT_Ele100_CaloIdVT_TrkIdT_v4',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R014_MR200_v5',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R033_MR200_v5',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT40_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT50_v6',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v5',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v11',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v10',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v11',
    'HLT_Ele18_CaloIdVT_TrkIdT_MediumIsoPFTau20_v7',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau20_v7',
    'HLT_Ele22_CaloIdL_CaloIsoVL_Ele15_HFT_v4',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v8',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau25_v6',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v14',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralPFJet30_v4',
    'HLT_Ele27_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiCentralPFJet25_v6',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_v6',
    'HLT_Ele27_WP80_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_PFMT50_v10',
    'HLT_Ele27_WP80_v4',
    'HLT_Ele32_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_Ele17_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v9',
    'HLT_Ele32_WP70_PFMT50_v10',
    'HLT_Ele32_WP70_v4',
    'HLT_Ele32_WP80_DiCentralPFJet25_PFMHT25_v6',
    'HLT_Ele32_WP80_DiPFJet25_Deta3p5_v6',
    'HLT_Ele65_CaloIdVT_TrkIdT_v7',
    'HLT_Ele80_CaloIdVT_TrkIdT_v4',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v13',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele8_CaloIdL_TrkIdVL_v11',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v9',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v10',
    'HLT_Ele8_v11',
    'HLT_ExclDiJet60_HFAND_v10',
    'HLT_ExclDiJet60_HFOR_v10',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v6',
    'HLT_GlobalRunHPDNoise_v6',
    'HLT_HT150_v12',
    'HLT_HT2000_v6',
    'HLT_HT200_v12',
    'HLT_HT250_AlphaT0p58_v4',
    'HLT_HT250_AlphaT0p60_v4',
    'HLT_HT250_AlphaT0p65_v3',
    'HLT_HT250_v12',
    'HLT_HT300_AlphaT0p54_v6',
    'HLT_HT300_AlphaT0p55_v4',
    'HLT_HT300_AlphaT0p60_v3',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v13',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT65_v6',
    'HLT_HT300_CentralJet30_BTagIP_v11',
    'HLT_HT300_Mu15_PFMHT40_v7',
    'HLT_HT300_Mu15_PFMHT50_v6',
    'HLT_HT300_PFMHT55_v13',
    'HLT_HT300_PFMHT65_v6',
    'HLT_HT300_v13',
    'HLT_HT350_AlphaT0p53_v11',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v14',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v12',
    'HLT_HT350_L1FastJet_MHT100_v2',
    'HLT_HT350_L1FastJet_MHT110_v2',
    'HLT_HT350_L1FastJet_v4',
    'HLT_HT350_MHT100_v4',
    'HLT_HT350_MHT110_v4',
    'HLT_HT350_Mu5_PFMHT45_v14',
    'HLT_HT350_v12',
    'HLT_HT400_AlphaT0p51_v11',
    'HLT_HT400_AlphaT0p52_v6',
    'HLT_HT400_DoubleIsoPFTau10_Trk3_PFMHT50_v6',
    'HLT_HT400_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT50_v6',
    'HLT_HT400_Ele60_CaloIdT_TrkIdT_v6',
    'HLT_HT400_L1FastJet_MHT100_v2',
    'HLT_HT400_L1FastJet_MHT90_v2',
    'HLT_HT400_L1FastJet_v4',
    'HLT_HT400_MHT100_v4',
    'HLT_HT400_MHT90_v4',
    'HLT_HT400_Mu5_PFMHT50_v6',
    'HLT_HT400_v12',
    'HLT_HT450_AlphaT0p51_v6',
    'HLT_HT450_Ele60_CaloIdT_TrkIdT_v5',
    'HLT_HT450_v12',
    'HLT_HT500_v12',
    'HLT_HT550_v12',
    'HLT_HT600_v5',
    'HLT_HT650_v5',
    'HLT_HT700_v3',
    'HLT_HT750_L1FastJet_v4',
    'HLT_HT750_v4',
    'HLT_HcalNZS_v8',
    'HLT_HcalPhiSym_v9',
    'HLT_IsoMu15_L1ETM20_v5',
    'HLT_IsoMu15_eta2p1_LooseIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_MediumIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_TightIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_v6',
    'HLT_IsoMu15_v19',
    'HLT_IsoMu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_IsoMu17_eta2p1_CentralJet30_v7',
    'HLT_IsoMu17_eta2p1_CentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_PFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_IsoMu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_IsoMu20_v14',
    'HLT_IsoMu24_eta2p1_v8',
    'HLT_IsoMu24_v14',
    'HLT_IsoMu30_eta2p1_v8',
    'HLT_IsoMu34_eta2p1_v6',
    'HLT_IsoMu40_eta2p1_v3',
    'HLT_IsoTrackHB_v10',
    'HLT_IsoTrackHE_v11',
    'HLT_Jet110_v10',
    'HLT_Jet190_v10',
    'HLT_Jet240_L1FastJet_v4',
    'HLT_Jet240_v10',
    'HLT_Jet300_L1FastJet_v4',
    'HLT_Jet300_v10',
    'HLT_Jet30_L1FastJet_v4',
    'HLT_Jet30_v10',
    'HLT_Jet370_L1FastJet_v4',
    'HLT_Jet370_NoJetID_v11',
    'HLT_Jet370_v11',
    'HLT_Jet60_L1FastJet_v4',
    'HLT_Jet60_v10',
    'HLT_Jet800_v6',
    'HLT_JetE30_NoBPTX3BX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_v9',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v6')+cms.vstring( 'HLT_L1DoubleJet36Central_v5',
    'HLT_L1DoubleMu0_v5',
    'HLT_L1SingleEG12_v4',
    'HLT_L1SingleEG5_v4',
    'HLT_L1SingleJet16_v5',
    'HLT_L1SingleJet36_v5',
    'HLT_L1SingleMu10_v5',
    'HLT_L1SingleMu20_v5',
    'HLT_L1SingleMuOpen_AntiBPTX_v4',
    'HLT_L1SingleMuOpen_DT_v5',
    'HLT_L1SingleMuOpen_v5',
    'HLT_L1Tech_CASTOR_HaloMuon_v2',
    'HLT_L1Tech_DT_GlobalOR_v2',
    'HLT_L1Tech_HBHEHO_totalOR_v4',
    'HLT_L1Tech_HCAL_HF_single_channel_v2',
    'HLT_L1TrackerCosmics_v5',
    'HLT_L1_Interbunch_BSC_v4',
    'HLT_L1_PreCollisions_v4',
    'HLT_L2DoubleMu0_v8',
    'HLT_L2DoubleMu23_NoVertex_v9',
    'HLT_L2DoubleMu30_NoVertex_dPhi2p5_v2',
    'HLT_L2DoubleMu30_NoVertex_v5',
    'HLT_L2DoubleMu45_NoVertex_v2',
    'HLT_L2Mu10_v7',
    'HLT_L2Mu20_v7',
    'HLT_L2Mu60_1Hit_MET40_v7',
    'HLT_L2Mu60_1Hit_MET60_v7',
    'HLT_L3MuonsCosmicTracking_v6',
    'HLT_LogMonitor_v1',
    'HLT_MET120_HBHENoiseFiltered_v7',
    'HLT_MET120_v8',
    'HLT_MET200_HBHENoiseFiltered_v7',
    'HLT_MET200_v8',
    'HLT_MET400_v3',
    'HLT_MediumIsoPFTau35_Trk20_MET60_v7',
    'HLT_MediumIsoPFTau35_Trk20_MET70_v7',
    'HLT_MediumIsoPFTau35_Trk20_v7',
    'HLT_Mu100_eta2p1_v6',
    'HLT_Mu10_R014_MR200_v6',
    'HLT_Mu10_R025_MR200_v7',
    'HLT_Mu10_R029_MR200_v7',
    'HLT_Mu10_R033_MR200_v6',
    'HLT_Mu12_eta2p1_DiCentralJet20_BTagIP3D1stTrack_v7',
    'HLT_Mu12_eta2p1_DiCentralJet20_DiBTagIP3D1stTrack_v7',
    'HLT_Mu12_v13',
    'HLT_Mu13_Mu8_v12',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v15',
    'HLT_Mu15_L1ETM20_v5',
    'HLT_Mu15_LooseIsoPFTau15_v15',
    'HLT_Mu15_Photon20_CaloIdL_v15',
    'HLT_Mu15_v14',
    'HLT_Mu17_Ele8_CaloIdL_v14',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu17_Mu8_v12',
    'HLT_Mu17_TkMu8_v5',
    'HLT_Mu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_Mu17_eta2p1_CentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Mu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_Mu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_Mu200_eta2p1_v3',
    'HLT_Mu20_v13',
    'HLT_Mu24_v13',
    'HLT_Mu30_v13',
    'HLT_Mu40_HT300_v6',
    'HLT_Mu40_eta2p1_v6',
    'HLT_Mu40_v11',
    'HLT_Mu50_eta2p1_v3',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_CaloIsoVL_v6',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu5_L2Mu2_Jpsi_v14',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v14',
    'HLT_Mu5_Track2_Jpsi_v14',
    'HLT_Mu5_v15',
    'HLT_Mu60_HT300_v6',
    'HLT_Mu60_eta2p1_v6',
    'HLT_Mu7_Track7_Jpsi_v15',
    'HLT_Mu8_Ele17_CaloIdL_v14',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT200_v6',
    'HLT_Mu8_Jet40_v16',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v14',
    'HLT_Mu8_v13',
    'HLT_PFHT350_PFMHT100_v2',
    'HLT_PFHT350_PFMHT90_v2',
    'HLT_PFHT400_PFMHT80_v2',
    'HLT_PFHT400_PFMHT90_v2',
    'HLT_PFHT650_v2',
    'HLT_PFMHT150_v18',
    'HLT_Photon135_v3',
    'HLT_Photon200_NoHE_v5',
    'HLT_Photon20_CaloIdVL_IsoL_v10',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v12',
    'HLT_Photon20_R9Id_Photon18_R9Id_v8',
    'HLT_Photon225_NoHE_v3',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_R9IdT_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_v5',
    'HLT_Photon26_Photon18_v8',
    'HLT_Photon26_R9IdT_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_R9IdT_Photon18_R9IdT_Mass60_v2',
    'HLT_Photon30_CaloIdVL_IsoL_v12',
    'HLT_Photon30_CaloIdVL_v9',
    'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v7',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v9',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v3',
    'HLT_Photon36_Photon22_v2',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_R9Id_Photon22_R9Id_v4',
    'HLT_Photon400_v3',
    'HLT_Photon40_CaloIdL_R014_MR150_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v7',
    'HLT_Photon40_CaloIdL_R023_MR350_v7',
    'HLT_Photon40_CaloIdL_R029_MR250_v7',
    'HLT_Photon40_CaloIdL_R042_MR200_v7',
    'HLT_Photon50_CaloIdVL_IsoL_v10',
    'HLT_Photon50_CaloIdVL_v5',
    'HLT_Photon55_CaloIdL_R017_MR500_v5',
    'HLT_Photon55_CaloIdL_R023_MR350_v5',
    'HLT_Photon55_CaloIdL_R029_MR250_v5',
    'HLT_Photon55_CaloIdL_R042_MR200_v5',
    'HLT_Photon60_CaloIdL_HT300_v4',
    'HLT_Photon60_CaloIdL_MHT70_v4',
    'HLT_Photon70_CaloIdXL_HT400_v4',
    'HLT_Photon70_CaloIdXL_HT500_v4',
    'HLT_Photon70_CaloIdXL_MHT100_v4',
    'HLT_Photon70_CaloIdXL_MHT90_v4',
    'HLT_Photon75_CaloIdVL_IsoL_v11',
    'HLT_Photon75_CaloIdVL_v8',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet25_v6',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet30_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v8',
    'HLT_Photon90_CaloIdVL_v5',
    'HLT_Physics_v3',
    'HLT_PixelTracks_Multiplicity100_v9',
    'HLT_PixelTracks_Multiplicity80_v9',
    'HLT_QuadJet40_IsoPFTau40_v19',
    'HLT_QuadJet40_v12',
    'HLT_QuadJet45_DiJet40_v4',
    'HLT_QuadJet45_IsoPFTau45_v14',
    'HLT_QuadJet50_DiJet40_L1FastJet_v3',
    'HLT_QuadJet50_DiJet40_v6',
    'HLT_QuadJet50_IsoPFTau50_v8',
    'HLT_QuadJet70_v11',
    'HLT_QuadJet80_L1FastJet_v3',
    'HLT_QuadJet80_v6',
    'HLT_QuadJet90_v4',
    'HLT_R014_MR150_v11',
    'HLT_R014_MR200_CentralJet40_BTagIP_v5',
    'HLT_R014_MR400_CentralJet40_BTagIP_v5',
    'HLT_R014_MR450_CentralJet40_BTagIP_v5',
    'HLT_R020_MR150_v11',
    'HLT_R020_MR300_CentralJet40_BTagIP_v5',
    'HLT_R020_MR350_CentralJet40_BTagIP_v5',
    'HLT_R020_MR550_v11',
    'HLT_R025_MR150_v11',
    'HLT_R025_MR450_v11',
    'HLT_R030_MR200_CentralJet40_BTagIP_v5',
    'HLT_R030_MR250_CentralJet40_BTagIP_v5',
    'HLT_R033_MR350_v11',
    'HLT_R038_MR250_v11',
    'HLT_R038_MR300_v3',
    'HLT_RMR65_v4',
    'HLT_Random_v1',
    'HLT_RegionalCosmicTracking_v10',
    'HLT_SixJet45_L1FastJet_v3',
    'HLT_SixJet45_v4',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT150_v6',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT200_v6',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v12',
    'HLT_TripleMu0_TauTo3Mu_v2',
    'HLT_TripleMu5_v14',
    'HLT_ZeroBias_v5') ),
  OnlineHltMonitorHI = cms.vstring( 'HLT_HIActivityHF_Coincidence3_v1',
    'HLT_HIActivityHF_Single3_v1',
    'HLT_HIBptxXOR_v1',
    'HLT_HICaloTower4_MinBias_v1',
    'HLT_HICentral10_v2',
    'HLT_HICentralityVeto_v1',
    'HLT_HIClusterVertexCompatibility_v1',
    'HLT_HIDiJet55_v1',
    'HLT_HIDoublePhoton10_v1',
    'HLT_HIDoublePhoton15_v1',
    'HLT_HIDoublePhoton20_v1',
    'HLT_HIDoublePhoton5_CEP_L1R_v1',
    'HLT_HIFullTrack12_L1Central_v1',
    'HLT_HIFullTrack12_L1Peripheral_v1',
    'HLT_HIFullTrack14_L1Central_v1',
    'HLT_HIFullTrack14_L1Peripheral_v1',
    'HLT_HIFullTrack20_L1Central_v1',
    'HLT_HIFullTrack20_L1Peripheral_v1',
    'HLT_HIFullTrack25_L1Central_v1',
    'HLT_HIFullTrack25_L1Peripheral_v1',
    'HLT_HIJet35U_v1',
    'HLT_HIJet50U_v1',
    'HLT_HIJet55_v1',
    'HLT_HIJet65_Jet55_v1',
    'HLT_HIJet65_v1',
    'HLT_HIJet75U_v1',
    'HLT_HIJet80_v1',
    'HLT_HIJet90U_v1',
    'HLT_HIJet95_v1',
    'HLT_HIJetE30_NoBPTX_v1',
    'HLT_HIJetE50_NoBPTX3BX_NoHalo_v1',
    'HLT_HIL1Algo_BptxXOR_BSC_OR_v1',
    'HLT_HIL1DoubleMu0_HighQ_v2',
    'HLT_HIL1DoubleMuOpen_v2',
    'HLT_HIL2DoubleMu0_L1HighQL2NHitQ_v2',
    'HLT_HIL2DoubleMu0_NHitQ_v2',
    'HLT_HIL2DoubleMu0_v2',
    'HLT_HIL2DoubleMu3_v2',
    'HLT_HIL2Mu15_v2',
    'HLT_HIL2Mu3_NHitQ_v2',
    'HLT_HIL2Mu3_v2',
    'HLT_HIL2Mu7_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_NoCowboy_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_SS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_v2',
    'HLT_HIL3DoubleMuOpen_v2',
    'HLT_HIL3Mu3_v2',
    'HLT_HIMET120_v1',
    'HLT_HIMET200_v1',
    'HLT_HIMET220_v1',
    'HLT_HIMinBiasBSC_OR_v1',
    'HLT_HIMinBiasBSC_v1',
    'HLT_HIMinBiasHF_v1',
    'HLT_HIMinBiasHfOrBSC_v1',
    'HLT_HIMinBiasHf_OR_v1',
    'HLT_HIMinBiasPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDCPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Calo_PlusOrMinus_v1',
    'HLT_HIMinBiasZDC_Calo_v1',
    'HLT_HIMinBiasZDC_PlusOrMinusPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Scint_v1',
    'HLT_HIPhoton10_Photon15_v1',
    'HLT_HIPhoton15_Photon20_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIPixelTrack10_MinBias_v1',
    'HLT_HIRandom_v1',
    'HLT_HISinglePhoton15_v1',
    'HLT_HISinglePhoton20_v2',
    'HLT_HISinglePhoton25_v2',
    'HLT_HISinglePhoton30_v2',
    'HLT_HISinglePhoton40_v2',
    'HLT_HIStoppedHSCP35_v1',
    'HLT_HIUCC010_v2',
    'HLT_HIUCC015_v2',
    'HLT_HIUPCNeuEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfMuPixel_SingleTrack_v1',
    'HLT_HIUPCNeuMuPixel_SingleTrack_v1',
    'HLT_HIUpcEcal_v1',
    'HLT_HIUpcMu_v1',
    'HLT_HIZeroBiasPixel_SingleTrack_v1',
    'HLT_HIZeroBiasXOR_v1',
    'HLT_HIZeroBias_v1' ),
  OnlineHltResults = cms.vstring( 'HLTriggerFinalPath' ),
  OnlineMonitor = ( cms.vstring( 'HLT_300Tower0p5_v2',
    'HLT_300Tower0p6_v2',
    'HLT_300Tower0p7_v2',
    'HLT_300Tower0p8_v2',
    'HLT_70Jet10_v5',
    'HLT_70Jet13_v5',
    'HLT_Activity_Ecal_SC7_v9',
    'HLT_BTagMu_DiJet110_Mu5_v15',
    'HLT_BTagMu_DiJet20_Mu5_v15',
    'HLT_BTagMu_DiJet40_Mu5_v15',
    'HLT_BTagMu_DiJet70_Mu5_v15',
    'HLT_BeamGas_HF_Beam1_v3',
    'HLT_BeamGas_HF_Beam2_v3',
    'HLT_BeamGas_HF_v7',
    'HLT_BeamHalo_v9',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v8',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v7',
    'HLT_CentralJet80_MET110_v4',
    'HLT_CentralJet80_MET65_v11',
    'HLT_CentralJet80_MET80_v10',
    'HLT_CentralJet80_MET95_v4',
    'HLT_DTCalibration_v1',
    'HLT_DTErrors_v2',
    'HLT_DiCentralJet20_BTagIP_MET65_v12',
    'HLT_DiCentralJet20_MET100_HBHENoiseFiltered_v5',
    'HLT_DiCentralJet20_MET80_v9',
    'HLT_DiCentralJet36_BTagIP3DLoose_v6',
    'HLT_DiCentralPFJet30_PFMHT80_v2',
    'HLT_DiCentralPFJet50_PFMHT80_v2',
    'HLT_DiJet130_PT130_v10',
    'HLT_DiJet160_PT160_v10',
    'HLT_DiJet60_MET45_v11',
    'HLT_DiJetAve110_v10',
    'HLT_DiJetAve190_v10',
    'HLT_DiJetAve240_v10',
    'HLT_DiJetAve300_v11',
    'HLT_DiJetAve30_v10',
    'HLT_DiJetAve370_v11',
    'HLT_DiJetAve60_v10',
    'HLT_Dimuon0_Jpsi_Muon_v12',
    'HLT_Dimuon0_Jpsi_NoVertexing_v8',
    'HLT_Dimuon0_Jpsi_v11',
    'HLT_Dimuon0_Omega_Phi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v12',
    'HLT_Dimuon0_Upsilon_v11',
    'HLT_Dimuon10_Jpsi_Barrel_v11',
    'HLT_Dimuon11_PsiPrime_v6',
    'HLT_Dimuon13_Jpsi_Barrel_v6',
    'HLT_Dimuon6_LowMass_v6',
    'HLT_Dimuon7_Upsilon_Barrel_v6',
    'HLT_Dimuon9_PsiPrime_v6',
    'HLT_Dimuon9_Upsilon_Barrel_v6',
    'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v6',
    'HLT_DoubleEle33_CaloIdL_CaloIsoT_v4',
    'HLT_DoubleEle33_CaloIdL_v8',
    'HLT_DoubleEle33_CaloIdT_v4',
    'HLT_DoubleEle45_CaloIdL_v7',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass8_HT200_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v6',
    'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v9',
    'HLT_DoubleIsoPFTau55_Trk5_eta2p1_v6',
    'HLT_DoubleJet30_ForwardBackward_v11',
    'HLT_DoubleJet60_ForwardBackward_v11',
    'HLT_DoubleJet70_ForwardBackward_v11',
    'HLT_DoubleJet80_ForwardBackward_v11',
    'HLT_DoubleMu3_v15',
    'HLT_DoubleMu45_v11',
    'HLT_DoubleMu4_Dimuon4_Bs_Barrel_v6',
    'HLT_DoubleMu4_Dimuon6_Bs_v6',
    'HLT_DoubleMu4_Jpsi_Displaced_v6',
    'HLT_DoubleMu4p5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdT_v5',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v9',
    'HLT_DoubleMu5_IsoMu5_v13',
    'HLT_DoubleMu5_Jpsi_Displaced_v6',
    'HLT_DoubleMu5_LowMass_Displaced_v6',
    'HLT_DoubleMu5_Mass8_HT150_v6',
    'HLT_DoubleMu5_v6',
    'HLT_DoubleMu7_Acoplanarity03_v5',
    'HLT_DoubleMu7_v13',
    'HLT_DoubleMu8_Mass8_HT150_v6',
    'HLT_DoubleMu8_Mass8_HT200_v6',
    'HLT_DoublePhoton40_CaloIdL_MR150_v4',
    'HLT_DoublePhoton40_CaloIdL_R014_MR150_v4',
    'HLT_DoublePhoton43_HEVT_v2',
    'HLT_DoublePhoton48_HEVT_v2',
    'HLT_DoublePhoton5_IsoVL_CEP_v10',
    'HLT_DoublePhoton70_v2',
    'HLT_DoublePhoton80_v3',
    'HLT_DoubleTkIso10Mu5_Mass8_HT150_v6',
    'HLT_DoubleTkIso10Mu5_Mass8_HT200_v6',
    'HLT_EcalCalibration_v2',
    'HLT_EightJet120_v6',
    'HLT_EightJet35_L1FastJet_v3',
    'HLT_EightJet35_v4',
    'HLT_EightJet40_L1FastJet_v3',
    'HLT_EightJet40_v4',
    'HLT_Ele100_CaloIdVT_TrkIdT_v4',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R014_MR200_v5',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v6',
    'HLT_Ele12_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R033_MR200_v5',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT40_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT50_v6',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v5',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v11',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v10',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v11',
    'HLT_Ele18_CaloIdVT_TrkIdT_MediumIsoPFTau20_v7',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau20_v7',
    'HLT_Ele22_CaloIdL_CaloIsoVL_Ele15_HFT_v4',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v8',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v10',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau25_v6',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v14',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralPFJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralPFJet30_v4',
    'HLT_Ele27_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiCentralPFJet25_v6',
    'HLT_Ele27_CaloIdVT_TrkIdT_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Ele27_WP80_DiCentralPFJet25_v6',
    'HLT_Ele27_WP80_DiPFJet25_Deta3_v6',
    'HLT_Ele27_WP80_PFMT50_v10',
    'HLT_Ele27_WP80_v4',
    'HLT_Ele32_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_Ele17_v4',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v9',
    'HLT_Ele32_WP70_PFMT50_v10',
    'HLT_Ele32_WP70_v4',
    'HLT_Ele32_WP80_DiCentralPFJet25_PFMHT25_v6',
    'HLT_Ele32_WP80_DiPFJet25_Deta3p5_v6',
    'HLT_Ele65_CaloIdVT_TrkIdT_v7',
    'HLT_Ele80_CaloIdVT_TrkIdT_v4',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v13',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v11',
    'HLT_Ele8_CaloIdL_TrkIdVL_v11',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v9',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v10',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v10',
    'HLT_Ele8_v11',
    'HLT_ExclDiJet60_HFAND_v10',
    'HLT_ExclDiJet60_HFOR_v10',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v6',
    'HLT_GlobalRunHPDNoise_v6',
    'HLT_HT150_v12',
    'HLT_HT2000_v6',
    'HLT_HT200_v12',
    'HLT_HT250_AlphaT0p58_v4',
    'HLT_HT250_AlphaT0p60_v4',
    'HLT_HT250_AlphaT0p65_v3',
    'HLT_HT250_v12',
    'HLT_HT300_AlphaT0p54_v6',
    'HLT_HT300_AlphaT0p55_v4',
    'HLT_HT300_AlphaT0p60_v3',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v13',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT65_v6',
    'HLT_HT300_CentralJet30_BTagIP_v11',
    'HLT_HT300_Mu15_PFMHT40_v7',
    'HLT_HT300_Mu15_PFMHT50_v6',
    'HLT_HT300_PFMHT55_v13',
    'HLT_HT300_PFMHT65_v6',
    'HLT_HT300_v13',
    'HLT_HT350_AlphaT0p53_v11',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v14',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v12',
    'HLT_HT350_L1FastJet_MHT100_v2',
    'HLT_HT350_L1FastJet_MHT110_v2',
    'HLT_HT350_L1FastJet_v4',
    'HLT_HT350_MHT100_v4',
    'HLT_HT350_MHT110_v4',
    'HLT_HT350_Mu5_PFMHT45_v14',
    'HLT_HT350_v12',
    'HLT_HT400_AlphaT0p51_v11',
    'HLT_HT400_AlphaT0p52_v6',
    'HLT_HT400_DoubleIsoPFTau10_Trk3_PFMHT50_v6',
    'HLT_HT400_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT50_v6',
    'HLT_HT400_Ele60_CaloIdT_TrkIdT_v6',
    'HLT_HT400_L1FastJet_MHT100_v2',
    'HLT_HT400_L1FastJet_MHT90_v2',
    'HLT_HT400_L1FastJet_v4',
    'HLT_HT400_MHT100_v4',
    'HLT_HT400_MHT90_v4',
    'HLT_HT400_Mu5_PFMHT50_v6',
    'HLT_HT400_v12',
    'HLT_HT450_AlphaT0p51_v6',
    'HLT_HT450_Ele60_CaloIdT_TrkIdT_v5',
    'HLT_HT450_v12',
    'HLT_HT500_v12',
    'HLT_HT550_v12',
    'HLT_HT600_v5',
    'HLT_HT650_v5',
    'HLT_HT700_v3',
    'HLT_HT750_L1FastJet_v4',
    'HLT_HT750_v4',
    'HLT_HcalCalibration_v2',
    'HLT_HcalNZS_v8',
    'HLT_HcalPhiSym_v9',
    'HLT_IsoMu15_L1ETM20_v5',
    'HLT_IsoMu15_eta2p1_LooseIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_MediumIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_TightIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_v6',
    'HLT_IsoMu15_v19',
    'HLT_IsoMu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_IsoMu17_eta2p1_CentralJet30_v7',
    'HLT_IsoMu17_eta2p1_CentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_PFMHT25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_PFJet25_v6',
    'HLT_IsoMu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_IsoMu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_IsoMu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_IsoMu20_v14',
    'HLT_IsoMu24_eta2p1_v8',
    'HLT_IsoMu24_v14',
    'HLT_IsoMu30_eta2p1_v8',
    'HLT_IsoMu34_eta2p1_v6',
    'HLT_IsoMu40_eta2p1_v3',
    'HLT_IsoTrackHB_v10',
    'HLT_IsoTrackHE_v11',
    'HLT_Jet110_v10',
    'HLT_Jet190_v10',
    'HLT_Jet240_L1FastJet_v4',
    'HLT_Jet240_v10',
    'HLT_Jet300_L1FastJet_v4',
    'HLT_Jet300_v10',
    'HLT_Jet30_L1FastJet_v4',
    'HLT_Jet30_v10',
    'HLT_Jet370_L1FastJet_v4',
    'HLT_Jet370_NoJetID_v11',
    'HLT_Jet370_v11',
    'HLT_Jet60_L1FastJet_v4',
    'HLT_Jet60_v10',
    'HLT_Jet800_v6',
    'HLT_JetE30_NoBPTX3BX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_NoHalo_v11',
    'HLT_JetE30_NoBPTX_v9',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v6',
    'HLT_L1DoubleJet36Central_v5',
    'HLT_L1DoubleMu0_v5',
    'HLT_L1SingleEG12_v4',
    'HLT_L1SingleEG5_v4')+cms.vstring( 'HLT_L1SingleJet16_v5',
    'HLT_L1SingleJet36_v5',
    'HLT_L1SingleMu10_v5',
    'HLT_L1SingleMu20_v5',
    'HLT_L1SingleMuOpen_AntiBPTX_v4',
    'HLT_L1SingleMuOpen_DT_v5',
    'HLT_L1SingleMuOpen_v5',
    'HLT_L1Tech_CASTOR_HaloMuon_v2',
    'HLT_L1Tech_DT_GlobalOR_v2',
    'HLT_L1Tech_HBHEHO_totalOR_v4',
    'HLT_L1Tech_HCAL_HF_single_channel_v2',
    'HLT_L1TrackerCosmics_v5',
    'HLT_L1_Interbunch_BSC_v4',
    'HLT_L1_PreCollisions_v4',
    'HLT_L2DoubleMu0_v8',
    'HLT_L2DoubleMu23_NoVertex_v9',
    'HLT_L2DoubleMu30_NoVertex_dPhi2p5_v2',
    'HLT_L2DoubleMu30_NoVertex_v5',
    'HLT_L2DoubleMu45_NoVertex_v2',
    'HLT_L2Mu10_v7',
    'HLT_L2Mu20_v7',
    'HLT_L2Mu60_1Hit_MET40_v7',
    'HLT_L2Mu60_1Hit_MET60_v7',
    'HLT_L3MuonsCosmicTracking_v6',
    'HLT_LogMonitor_v1',
    'HLT_MET120_HBHENoiseFiltered_v7',
    'HLT_MET120_v8',
    'HLT_MET200_HBHENoiseFiltered_v7',
    'HLT_MET200_v8',
    'HLT_MET400_v3',
    'HLT_MediumIsoPFTau35_Trk20_MET60_v7',
    'HLT_MediumIsoPFTau35_Trk20_MET70_v7',
    'HLT_MediumIsoPFTau35_Trk20_v7',
    'HLT_Mu100_eta2p1_v6',
    'HLT_Mu10_R014_MR200_v6',
    'HLT_Mu10_R025_MR200_v7',
    'HLT_Mu10_R029_MR200_v7',
    'HLT_Mu10_R033_MR200_v6',
    'HLT_Mu12_eta2p1_DiCentralJet20_BTagIP3D1stTrack_v7',
    'HLT_Mu12_eta2p1_DiCentralJet20_DiBTagIP3D1stTrack_v7',
    'HLT_Mu12_v13',
    'HLT_Mu13_Mu8_v12',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v15',
    'HLT_Mu15_L1ETM20_v5',
    'HLT_Mu15_LooseIsoPFTau15_v15',
    'HLT_Mu15_Photon20_CaloIdL_v15',
    'HLT_Mu15_v14',
    'HLT_Mu17_Ele8_CaloIdL_v14',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu17_Mu8_v12',
    'HLT_Mu17_TkMu8_v5',
    'HLT_Mu17_eta2p1_CentralJet30_BTagIP_v7',
    'HLT_Mu17_eta2p1_CentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiCentralPFJet25_PFMHT15_v6',
    'HLT_Mu17_eta2p1_DiCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_DiPFJet25_Deta3_v6',
    'HLT_Mu17_eta2p1_QuadCentralPFJet30_v4',
    'HLT_Mu17_eta2p1_TriCentralPFJet30_v4',
    'HLT_Mu200_eta2p1_v3',
    'HLT_Mu20_v13',
    'HLT_Mu24_v13',
    'HLT_Mu30_v13',
    'HLT_Mu40_HT300_v6',
    'HLT_Mu40_eta2p1_v6',
    'HLT_Mu40_v11',
    'HLT_Mu50_eta2p1_v3',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_CaloIsoVL_v6',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu5_L2Mu2_Jpsi_v14',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v14',
    'HLT_Mu5_Track2_Jpsi_v14',
    'HLT_Mu5_v15',
    'HLT_Mu60_HT300_v6',
    'HLT_Mu60_eta2p1_v6',
    'HLT_Mu7_Track7_Jpsi_v15',
    'HLT_Mu8_Ele17_CaloIdL_v14',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v9',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT150_v6',
    'HLT_Mu8_Ele8_CaloIdT_TrkIdVL_Mass8_HT200_v6',
    'HLT_Mu8_Jet40_v16',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v14',
    'HLT_Mu8_v13',
    'HLT_PFHT350_PFMHT100_v2',
    'HLT_PFHT350_PFMHT90_v2',
    'HLT_PFHT400_PFMHT80_v2',
    'HLT_PFHT400_PFMHT90_v2',
    'HLT_PFHT650_v2',
    'HLT_PFMHT150_v18',
    'HLT_Photon135_v3',
    'HLT_Photon200_NoHE_v5',
    'HLT_Photon20_CaloIdVL_IsoL_v10',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v12',
    'HLT_Photon20_R9Id_Photon18_R9Id_v8',
    'HLT_Photon225_NoHE_v3',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_R9IdT_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_v5',
    'HLT_Photon26_Photon18_v8',
    'HLT_Photon26_R9IdT_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_R9IdT_Photon18_R9IdT_Mass60_v2',
    'HLT_Photon30_CaloIdVL_IsoL_v12',
    'HLT_Photon30_CaloIdVL_v9',
    'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v7',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v9',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v3',
    'HLT_Photon36_Photon22_v2',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_R9Id_Photon22_R9Id_v4',
    'HLT_Photon400_v3',
    'HLT_Photon40_CaloIdL_R014_MR150_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v7',
    'HLT_Photon40_CaloIdL_R023_MR350_v7',
    'HLT_Photon40_CaloIdL_R029_MR250_v7',
    'HLT_Photon40_CaloIdL_R042_MR200_v7',
    'HLT_Photon50_CaloIdVL_IsoL_v10',
    'HLT_Photon50_CaloIdVL_v5',
    'HLT_Photon55_CaloIdL_R017_MR500_v5',
    'HLT_Photon55_CaloIdL_R023_MR350_v5',
    'HLT_Photon55_CaloIdL_R029_MR250_v5',
    'HLT_Photon55_CaloIdL_R042_MR200_v5',
    'HLT_Photon60_CaloIdL_HT300_v4',
    'HLT_Photon60_CaloIdL_MHT70_v4',
    'HLT_Photon70_CaloIdXL_HT400_v4',
    'HLT_Photon70_CaloIdXL_HT500_v4',
    'HLT_Photon70_CaloIdXL_MHT100_v4',
    'HLT_Photon70_CaloIdXL_MHT90_v4',
    'HLT_Photon75_CaloIdVL_IsoL_v11',
    'HLT_Photon75_CaloIdVL_v8',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet25_v6',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet30_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v8',
    'HLT_Photon90_CaloIdVL_v5',
    'HLT_Physics_v3',
    'HLT_PixelTracks_Multiplicity100_v9',
    'HLT_PixelTracks_Multiplicity80_v9',
    'HLT_QuadJet40_IsoPFTau40_v19',
    'HLT_QuadJet40_v12',
    'HLT_QuadJet45_DiJet40_v4',
    'HLT_QuadJet45_IsoPFTau45_v14',
    'HLT_QuadJet50_DiJet40_L1FastJet_v3',
    'HLT_QuadJet50_DiJet40_v6',
    'HLT_QuadJet50_IsoPFTau50_v8',
    'HLT_QuadJet70_v11',
    'HLT_QuadJet80_L1FastJet_v3',
    'HLT_QuadJet80_v6',
    'HLT_QuadJet90_v4',
    'HLT_R014_MR150_v11',
    'HLT_R014_MR200_CentralJet40_BTagIP_v5',
    'HLT_R014_MR400_CentralJet40_BTagIP_v5',
    'HLT_R014_MR450_CentralJet40_BTagIP_v5',
    'HLT_R020_MR150_v11',
    'HLT_R020_MR300_CentralJet40_BTagIP_v5',
    'HLT_R020_MR350_CentralJet40_BTagIP_v5',
    'HLT_R020_MR550_v11',
    'HLT_R025_MR150_v11',
    'HLT_R025_MR450_v11',
    'HLT_R030_MR200_CentralJet40_BTagIP_v5',
    'HLT_R030_MR250_CentralJet40_BTagIP_v5',
    'HLT_R033_MR350_v11',
    'HLT_R038_MR250_v11',
    'HLT_R038_MR300_v3',
    'HLT_RMR65_v4',
    'HLT_Random_v1',
    'HLT_RegionalCosmicTracking_v10',
    'HLT_SixJet45_L1FastJet_v3',
    'HLT_SixJet45_v4',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT150_v6',
    'HLT_TkIso10Mu5_Ele8_CaloIdT_CaloIsoVVL_TrkIdVL_Mass8_HT200_v6',
    'HLT_TrackerCalibration_v2',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v12',
    'HLT_TripleMu0_TauTo3Mu_v2',
    'HLT_TripleMu5_v14',
    'HLT_ZeroBias_v5') ),
  OnlineMonitorHI = cms.vstring( 'HLT_HIActivityHF_Coincidence3_v1',
    'HLT_HIActivityHF_Single3_v1',
    'HLT_HIBptxXOR_v1',
    'HLT_HICaloTower4_MinBias_v1',
    'HLT_HICentral10_v2',
    'HLT_HICentralityVeto_v1',
    'HLT_HIClusterVertexCompatibility_v1',
    'HLT_HIDTCalibration_v1',
    'HLT_HIDiJet55_v1',
    'HLT_HIDoublePhoton10_v1',
    'HLT_HIDoublePhoton15_v1',
    'HLT_HIDoublePhoton20_v1',
    'HLT_HIDoublePhoton5_CEP_L1R_v1',
    'HLT_HIEcalCalibration_v1',
    'HLT_HIFullTrack12_L1Central_v1',
    'HLT_HIFullTrack12_L1Peripheral_v1',
    'HLT_HIFullTrack14_L1Central_v1',
    'HLT_HIFullTrack14_L1Peripheral_v1',
    'HLT_HIFullTrack20_L1Central_v1',
    'HLT_HIFullTrack20_L1Peripheral_v1',
    'HLT_HIFullTrack25_L1Central_v1',
    'HLT_HIFullTrack25_L1Peripheral_v1',
    'HLT_HIHcalCalibration_v1',
    'HLT_HIJet35U_v1',
    'HLT_HIJet50U_v1',
    'HLT_HIJet55_v1',
    'HLT_HIJet65_Jet55_v1',
    'HLT_HIJet65_v1',
    'HLT_HIJet75U_v1',
    'HLT_HIJet80_v1',
    'HLT_HIJet90U_v1',
    'HLT_HIJet95_v1',
    'HLT_HIJetE30_NoBPTX_v1',
    'HLT_HIJetE50_NoBPTX3BX_NoHalo_v1',
    'HLT_HIL1Algo_BptxXOR_BSC_OR_v1',
    'HLT_HIL1DoubleMu0_HighQ_v2',
    'HLT_HIL1DoubleMuOpen_v2',
    'HLT_HIL2DoubleMu0_L1HighQL2NHitQ_v2',
    'HLT_HIL2DoubleMu0_NHitQ_v2',
    'HLT_HIL2DoubleMu0_v2',
    'HLT_HIL2DoubleMu3_v2',
    'HLT_HIL2Mu15_v2',
    'HLT_HIL2Mu3_NHitQ_v2',
    'HLT_HIL2Mu3_v2',
    'HLT_HIL2Mu7_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_NoCowboy_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_OS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_SS_v2',
    'HLT_HIL3DoubleMuOpen_Mgt2_v2',
    'HLT_HIL3DoubleMuOpen_v2',
    'HLT_HIL3Mu3_v2',
    'HLT_HIMET120_v1',
    'HLT_HIMET200_v1',
    'HLT_HIMET220_v1',
    'HLT_HIMinBiasBSC_OR_v1',
    'HLT_HIMinBiasBSC_v1',
    'HLT_HIMinBiasHF_v1',
    'HLT_HIMinBiasHfOrBSC_v1',
    'HLT_HIMinBiasHf_OR_v1',
    'HLT_HIMinBiasPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDCPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Calo_PlusOrMinus_v1',
    'HLT_HIMinBiasZDC_Calo_v1',
    'HLT_HIMinBiasZDC_PlusOrMinusPixel_SingleTrack_v1',
    'HLT_HIMinBiasZDC_Scint_v1',
    'HLT_HIPhoton10_Photon15_v1',
    'HLT_HIPhoton15_Photon20_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIPixelTrack10_MinBias_v1',
    'HLT_HIRandom_v1',
    'HLT_HISinglePhoton15_v1',
    'HLT_HISinglePhoton20_v2',
    'HLT_HISinglePhoton25_v2',
    'HLT_HISinglePhoton30_v2',
    'HLT_HISinglePhoton40_v2',
    'HLT_HIStoppedHSCP35_v1',
    'HLT_HIUCC010_v2',
    'HLT_HIUCC015_v2',
    'HLT_HIUPCNeuEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG2Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfEG5Pixel_SingleTrack_v1',
    'HLT_HIUPCNeuHcalHfMuPixel_SingleTrack_v1',
    'HLT_HIUPCNeuMuPixel_SingleTrack_v1',
    'HLT_HIUpcEcal_v1',
    'HLT_HIUpcMu_v1',
    'HLT_HIZeroBiasPixel_SingleTrack_v1',
    'HLT_HIZeroBiasXOR_v1',
    'HLT_HIZeroBias_v1' ),
  Photon = cms.vstring( 'HLT_DoubleEle33_CaloIdL_CaloIsoT_v4',
    'HLT_DoubleEle33_CaloIdL_v8',
    'HLT_DoubleEle33_CaloIdT_v4',
    'HLT_DoubleEle45_CaloIdL_v7',
    'HLT_DoublePhoton40_CaloIdL_MR150_v4',
    'HLT_DoublePhoton40_CaloIdL_R014_MR150_v4',
    'HLT_DoublePhoton43_HEVT_v2',
    'HLT_DoublePhoton48_HEVT_v2',
    'HLT_DoublePhoton5_IsoVL_CEP_v10',
    'HLT_DoublePhoton70_v2',
    'HLT_DoublePhoton80_v3',
    'HLT_Photon135_v3',
    'HLT_Photon200_NoHE_v5',
    'HLT_Photon20_CaloIdVL_IsoL_v10',
    'HLT_Photon20_R9Id_Photon18_R9Id_v8',
    'HLT_Photon225_NoHE_v3',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_R9IdT_Mass60_v5',
    'HLT_Photon26_CaloIdXL_IsoXL_Photon18_v5',
    'HLT_Photon26_Photon18_v8',
    'HLT_Photon26_R9IdT_Photon18_CaloIdXL_IsoXL_Mass60_v5',
    'HLT_Photon26_R9IdT_Photon18_R9IdT_Mass60_v2',
    'HLT_Photon30_CaloIdVL_IsoL_v12',
    'HLT_Photon30_CaloIdVL_v9',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v7',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v9',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v3',
    'HLT_Photon36_Photon22_v2',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v8',
    'HLT_Photon36_R9Id_Photon22_R9Id_v4',
    'HLT_Photon400_v3',
    'HLT_Photon50_CaloIdVL_IsoL_v10',
    'HLT_Photon50_CaloIdVL_v5',
    'HLT_Photon75_CaloIdVL_IsoL_v11',
    'HLT_Photon75_CaloIdVL_v8',
    'HLT_Photon90_CaloIdVL_IsoL_v8',
    'HLT_Photon90_CaloIdVL_v5' ),
  PhotonHad = cms.vstring( 'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v8',
    'HLT_Photon40_CaloIdL_R014_MR150_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v7',
    'HLT_Photon40_CaloIdL_R023_MR350_v7',
    'HLT_Photon40_CaloIdL_R029_MR250_v7',
    'HLT_Photon40_CaloIdL_R042_MR200_v7',
    'HLT_Photon55_CaloIdL_R017_MR500_v5',
    'HLT_Photon55_CaloIdL_R023_MR350_v5',
    'HLT_Photon55_CaloIdL_R029_MR250_v5',
    'HLT_Photon55_CaloIdL_R042_MR200_v5',
    'HLT_Photon60_CaloIdL_HT300_v4',
    'HLT_Photon60_CaloIdL_MHT70_v4',
    'HLT_Photon70_CaloIdXL_HT400_v4',
    'HLT_Photon70_CaloIdXL_HT500_v4',
    'HLT_Photon70_CaloIdXL_MHT100_v4',
    'HLT_Photon70_CaloIdXL_MHT90_v4',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet25_v6',
    'HLT_Photon90EBOnly_CaloIdVL_IsoL_TriPFJet30_v6' ),
  PhysicsDST = cms.vstring( 'DST_FatJetMass300_DR1p1_Deta2p0_v2',
    'DST_FatJetMass400_DR1p1_Deta2p0_RunPF_v2',
    'DST_HT350_RunPF_v2' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNoHits_v7',
    'AlCa_RPCMuonNoTriggers_v7',
    'AlCa_RPCMuonNormalisation_v7' ),
  SingleElectron = cms.vstring( 'HLT_Ele100_CaloIdVT_TrkIdT_v4',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v8',
    'HLT_Ele27_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele27_WP80_PFMT50_v10',
    'HLT_Ele27_WP80_v4',
    'HLT_Ele32_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_WP70_PFMT50_v10',
    'HLT_Ele32_WP70_v4',
    'HLT_Ele65_CaloIdVT_TrkIdT_v7',
    'HLT_Ele80_CaloIdVT_TrkIdT_v4' ),
  SingleMu = cms.vstring( 'HLT_IsoMu15_eta2p1_v6',
    'HLT_IsoMu15_v19',
    'HLT_IsoMu20_v14',
    'HLT_IsoMu24_eta2p1_v8',
    'HLT_IsoMu24_v14',
    'HLT_IsoMu30_eta2p1_v8',
    'HLT_IsoMu34_eta2p1_v6',
    'HLT_IsoMu40_eta2p1_v3',
    'HLT_Mu100_eta2p1_v6',
    'HLT_Mu12_v13',
    'HLT_Mu15_v14',
    'HLT_Mu200_eta2p1_v3',
    'HLT_Mu20_v13',
    'HLT_Mu24_v13',
    'HLT_Mu30_v13',
    'HLT_Mu40_eta2p1_v6',
    'HLT_Mu40_v11',
    'HLT_Mu50_eta2p1_v3',
    'HLT_Mu5_v15',
    'HLT_Mu60_eta2p1_v6',
    'HLT_Mu8_v13' ),
  Tau = cms.vstring( 'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v9',
    'HLT_DoubleIsoPFTau55_Trk5_eta2p1_v6',
    'HLT_MediumIsoPFTau35_Trk20_MET60_v7',
    'HLT_MediumIsoPFTau35_Trk20_MET70_v7',
    'HLT_MediumIsoPFTau35_Trk20_v7' ),
  TauPlusX = cms.vstring( 'HLT_Ele18_CaloIdVT_TrkIdT_MediumIsoPFTau20_v7',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau20_v7',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_MediumIsoPFTau25_v6',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v14',
    'HLT_HT400_DoubleIsoPFTau10_Trk3_PFMHT50_v6',
    'HLT_IsoMu15_eta2p1_LooseIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_MediumIsoPFTau20_v7',
    'HLT_IsoMu15_eta2p1_TightIsoPFTau20_v7',
    'HLT_Mu15_LooseIsoPFTau15_v15' ),
  TestEnablesEcalHcalDT = cms.vstring( 'HLT_DTCalibration_v1',
    'HLT_EcalCalibration_v2',
    'HLT_HIDTCalibration_v1',
    'HLT_HIEcalCalibration_v1',
    'HLT_HIHcalCalibration_v1',
    'HLT_HcalCalibration_v2' ),
  TestEnablesTracker = cms.vstring( 'HLT_TrackerCalibration_v2' )
)

GlobalTag = cms.ESSource( "PoolDBESSource",
  appendToDataLabel = cms.string( "" ),
  timetype = cms.string( "runnumber" ),
  connect = cms.string( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_31X_GLOBALTAG" ),
  DumpStat = cms.untracked.bool( False ),
  BlobStreamerName = cms.untracked.string( "TBufferBlobStreamingService" ),
  globaltag = cms.string( "GR_H_V25::All" ),
  DBParameters = cms.PSet( 
    authenticationPath = cms.untracked.string( "." ),
    connectionRetrialTimeOut = cms.untracked.int32( 60 ),
    idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
    messageLevel = cms.untracked.int32( 0 ),
    enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
    enableConnectionSharing = cms.untracked.bool( True ),
    enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
    connectionTimeOut = cms.untracked.int32( 0 ),
    connectionRetrialPeriod = cms.untracked.int32( 10 )
  ),
  toGet = cms.VPSet( 
  ),
  RefreshEachRun = cms.untracked.bool( True )
)
HepPDTESSource = cms.ESSource( "HepPDTESSource",
  pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" ),
  appendToDataLabel = cms.string( "" )
)
eegeom = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "EcalMappingRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
  H2Mode = cms.untracked.bool( False ),
  toGet = cms.untracked.vstring( 'GainWidths' ),
  appendToDataLabel = cms.string( "" )
)
hltESSBTagRecord = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "JetTagComputerRecord" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
magfield = cms.ESSource( "XMLIdealGeometryESSource",
  rootNodeName = cms.string( "cmsMagneticField:MAGF" ),
  userControlledNamespace = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" ),
  geomXMLFiles = cms.vstring( 'Geometry/CMSCommonData/data/normal/cmsextent.xml',
    'Geometry/CMSCommonData/data/cms.xml',
    'Geometry/CMSCommonData/data/cmsMagneticField.xml',
    'MagneticField/GeomBuilder/data/MagneticFieldVolumes_1103l.xml',
    'MagneticField/GeomBuilder/data/MagneticFieldParameters_07_2pi.xml' )
)

AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
AutoMagneticFieldESProducer = cms.ESProducer( "AutoMagneticFieldESProducer",
  label = cms.untracked.string( "" ),
  valueOverride = cms.int32( -1 ),
  appendToDataLabel = cms.string( "" ),
  nominalCurrents = cms.untracked.vint32( -1, 0, 9558, 14416, 16819, 18268, 19262 ),
  mapLabels = cms.untracked.vstring( '090322_3_8t',
    '0t',
    '071212_2t',
    '071212_3t',
    '071212_3_5t',
    '090322_3_8t',
    '071212_4t' )
)
CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( True ),
  useCentreTIOffsets = cms.bool( False ),
  debugV = cms.untracked.bool( False ),
  useDDD = cms.bool( False ),
  applyAlignment = cms.bool( True )
)
CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  appendToDataLabel = cms.string( "" ),
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder",
  appendToDataLabel = cms.string( "" )
)
CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  appendToDataLabel = cms.string( "" )
)
CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( False )
)
CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  file = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  appendToDataLabel = cms.string( "" )
)
DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True )
)
EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True )
)
EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder",
  appendToDataLabel = cms.string( "" )
)
EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True )
)
EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  appendToDataLabel = cms.string( "" )
)
EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True )
)
EcalUnpackerWorkerESProducer = cms.ESProducer( "EcalUnpackerWorkerESProducer",
  ComponentName = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  DCCDataUnpacker = cms.PSet( 
    orderedDCCIdList = cms.vint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 ),
    tccUnpacking = cms.bool( False ),
    srpUnpacking = cms.bool( False ),
    syncCheck = cms.bool( False ),
    feIdCheck = cms.bool( True ),
    headerUnpacking = cms.bool( True ),
    orderedFedList = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    feUnpacking = cms.bool( True ),
    forceKeepFRData = cms.bool( False ),
    memUnpacking = cms.bool( True )
  ),
  ElectronicsMapper = cms.PSet( 
    numbXtalTSamples = cms.uint32( 10 ),
    numbTriggerTSamples = cms.uint32( 1 )
  ),
  UncalibRHAlgo = cms.PSet(  Type = cms.string( "EcalUncalibRecHitWorkerWeights" ) ),
  CalibRHAlgo = cms.PSet( 
    flagsMapDBReco = cms.vint32( 0, 0, 0, 0, 4, -1, -1, -1, 4, 4, 7, 7, 7, 8, 9 ),
    Type = cms.string( "EcalRecHitWorkerSimple" ),
    killDeadChannels = cms.bool( True ),
    ChannelStatusToBeExcluded = cms.vint32( 10, 11, 12, 13, 14 ),
    laserCorrection = cms.bool( False ),
    EBLaserMIN = cms.double( 0.5 ),
    EELaserMIN = cms.double( 0.5 ),
    EBLaserMAX = cms.double( 2.0 ),
    EELaserMAX = cms.double( 3.0 )
  )
)
HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( False )
)
HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  Exclude = cms.untracked.string( "" ),
  H2Mode = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
L1GtTriggerMaskAlgoTrigTrivialProducer = cms.ESProducer( "L1GtTriggerMaskAlgoTrigTrivialProducer",
  appendToDataLabel = cms.string( "" ),
  TriggerMask = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
)
L1GtTriggerMaskTechTrigTrivialProducer = cms.ESProducer( "L1GtTriggerMaskTechTrigTrivialProducer",
  appendToDataLabel = cms.string( "" ),
  TriggerMask = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
)
MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Mass = cms.double( 0.105 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Mass = cms.double( 0.139 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Mass = cms.double( 0.105 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Mass = cms.double( 0.139 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  compatibiltyWith11 = cms.untracked.bool( True ),
  useDDD = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  AutomaticNormalization = cms.bool( False ),
  NormalizationFactor = cms.double( 1.0 ),
  printDebug = cms.untracked.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  Record = cms.string( "SiStripApvGainRcd" ),
      NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" )
    ),
    cms.PSet(  Record = cms.string( "SiStripApvGain2Rcd" ),
      NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" )
    )
  )
)
SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  PrintDebugOutput = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  UseEmptyRunInfo = cms.bool( False ),
  ReduceGranularity = cms.bool( False ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  )
)
SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
SlaveField0 = cms.ESProducer( "UniformMagneticFieldESProducer",
  ZFieldInTesla = cms.double( 0.0 ),
  label = cms.untracked.string( "slave_0" ),
  appendToDataLabel = cms.string( "" )
)
SlaveField20 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_20" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "2_0T" ) )
)
SlaveField30 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_30" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "3_0T" ) )
)
SlaveField35 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_35" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "3_5T" ) )
)
SlaveField38 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_38" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "3_8T" ) )
)
SlaveField40 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_40" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "4_0T" ) )
)
SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "anyDirection" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( False ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
StripCPEfromTrackAngleESProducer = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "StripCPEfromTrackAngle" ),
  appendToDataLabel = cms.string( "" ),
  TanDiffusionAngle = cms.double( 0.01 ),
  ThicknessRelativeUncertainty = cms.double( 0.02 ),
  NoiseThreshold = cms.double( 2.3 ),
  MaybeNoiseThreshold = cms.double( 3.5 ),
  UncertaintyScaling = cms.double( 1.42 ),
  MinimumUncertainty = cms.double( 0.01 )
)
TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True ),
  fromDDD = cms.bool( False )
)
TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" ),
  appendToDataLabel = cms.string( "" )
)
VBF0 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "0t" ),
  debugBuilder = cms.untracked.bool( False ),
  version = cms.string( "grid_1103l_071212_2t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_0" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF20 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_2t" ),
  debugBuilder = cms.untracked.bool( False ),
  version = cms.string( "grid_1103l_071212_2t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_20" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF30 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_3t" ),
  debugBuilder = cms.untracked.bool( False ),
  version = cms.string( "grid_1103l_071212_3t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_30" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF35 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_3_5t" ),
  debugBuilder = cms.untracked.bool( False ),
  version = cms.string( "grid_1103l_071212_3_5t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_35" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF38 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "090322_3_8t" ),
  debugBuilder = cms.untracked.bool( False ),
  version = cms.string( "grid_1103l_090322_3_8t" ),
  overrideMasterSector = cms.bool( False ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_38" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32( 14100, 14200, 17600, 17800, 17900, 18100, 18300, 18400, 18600, 23100, 23300, 23400, 23600, 23800, 23900, 24100, 28600, 28800, 28900, 29100, 29300, 29400, 29600, 28609, 28809, 28909, 29109, 29309, 29409, 29609, 28610, 28810, 28910, 29110, 29310, 29410, 29610, 28611, 28811, 28911, 29111, 29311, 29411, 29611 ),
  scalingFactors = cms.vdouble( 1.0, 1.0, 0.994, 1.004, 1.004, 1.005, 1.004, 1.004, 0.994, 0.965, 0.958, 0.958, 0.953, 0.958, 0.958, 0.965, 0.918, 0.924, 0.924, 0.906, 0.924, 0.924, 0.918, 0.991, 0.998, 0.998, 0.978, 0.998, 0.998, 0.991, 0.991, 0.998, 0.998, 0.978, 0.998, 0.998, 0.991, 0.991, 0.998, 0.998, 0.978, 0.998, 0.998, 0.991 ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF40 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_4t" ),
  debugBuilder = cms.untracked.bool( False ),
  version = cms.string( "grid_1103l_071212_4t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_40" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( False )
)
caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False )
)
cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  appendToDataLabel = cms.string( "" )
)
ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  includeBadChambers = cms.bool( False )
)
ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  timeThresh = cms.double( 2.0 ),
  appendToDataLabel = cms.string( "" ),
  flagMask = cms.PSet( 
    kGood = cms.vstring( 'kGood' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kTime = cms.vstring( 'kOutOfTime' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' )
  ),
  dbstatusMask = cms.PSet( 
    kGood = cms.vuint32( 0 ),
    kProblematic = cms.vuint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ),
    kRecovered = cms.vuint32(  ),
    kTime = cms.vuint32(  ),
    kWeird = cms.vuint32(  ),
    kBad = cms.vuint32( 11, 12, 13, 14, 15, 16 )
  )
)
hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False )
)
hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  SeverityLevels = cms.VPSet( 
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring( 'HSCP_R1R2',
  'HSCP_FracLeader',
  'HSCP_OuterEnergy',
  'HSCP_ExpFit',
  'ADCSaturationBit' ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
  'HFDigiTime',
  'HBHEPulseShape',
  'HOBit',
  'HFInTimeWindow',
  'ZDCBit',
  'CalibrationBit',
  'TimingErrorBit' ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring( 'HFLongShort',
  'HFS8S1Ratio',
  'HFPET' ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellHot' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellOff',
        'HcalCellDead' ),
      Level = cms.int32( 20 )
    )
  ),
  RecoveredRecHitBits = cms.vstring( 'TimingAddedBit',
    'TimingSubtractedBit' ),
  appendToDataLabel = cms.string( "" ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' )
)
hcal_db_producer = cms.ESProducer( "HcalDbProducer",
  file = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPAK5CaloL1L2L3 = cms.ESProducer( "JetCorrectionESChain",
  appendToDataLabel = cms.string( "" ),
  correctors = cms.vstring( 'hltESPL1FastJetCorrectionESProducer',
    'hltESPL2RelativeCorrectionESProducer',
    'hltESPL3AbsoluteCorrectionESProducer' )
)
hltESPAK5CaloL2L3 = cms.ESProducer( "JetCorrectionESChain",
  appendToDataLabel = cms.string( "" ),
  correctors = cms.vstring( 'hltESPL2RelativeCorrectionESProducer',
    'hltESPL3AbsoluteCorrectionESProducer' )
)
hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2EstimatorForRefit = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  ComponentName = cms.string( "hltESPChi2EstimatorForRefit" ),
  MaxChi2 = cms.double( 100000.0 ),
  nSigma = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator" ),
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkf3HitTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPCkf3HitTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPCkf3HitTrajectoryFilter" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkf3HitTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPCkf3HitTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.9 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 3 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltESPCkfTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPCkfTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPCkfTrajectoryFilter" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkfTrajectoryBuilderForHI = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPCkfTrajectoryBuilderForHI" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForHI" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTrackerForHI" ),
  trajectoryFilterName = cms.string( "hltESPCkfTrajectoryFilterForHI" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( False ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkfTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPCkfTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.9 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 5 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltESPCkfTrajectoryFilterForHI = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPCkfTrajectoryFilterForHI" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 6 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 11.0 )
  )
)
hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" ),
  appendToDataLabel = cms.string( "" )
)
hltESPESUnpackerWorker = cms.ESProducer( "ESUnpackerWorkerESProducer",
  ComponentName = cms.string( "hltESPESUnpackerWorker" ),
  appendToDataLabel = cms.string( "" ),
  DCCDataUnpacker = cms.PSet(  LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ) ),
  RHAlgo = cms.PSet( 
    ESRecoAlgo = cms.int32( 0 ),
    Type = cms.string( "ESRecHitWorker" )
  )
)
hltESPEcalRegionCablingESProducer = cms.ESProducer( "EcalRegionCablingESProducer",
  appendToDataLabel = cms.string( "" ),
  esMapping = cms.PSet(  LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ) )
)
hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" ),
  appendToDataLabel = cms.string( "" )
)
hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "anyDirection" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( True ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( True ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( 10.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 3 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 5 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" ),
  appendToDataLabel = cms.string( "" )
)
hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPHIMixedLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPHIMixedLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg',
    'FPix2_pos+TEC1_pos',
    'FPix2_pos+TEC2_pos',
    'TEC1_pos+TEC2_pos',
    'TEC2_pos+TEC3_pos',
    'FPix2_neg+TEC1_neg',
    'FPix2_neg+TEC2_neg',
    'TEC1_neg+TEC2_neg',
    'TEC2_neg+TEC3_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 1 )
  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPHIPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPHIPixelLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPHIPixelLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPHIPixelLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPHITTRHBuilderWithoutRefit = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPHITTRHBuilderWithoutRefit" ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "Fake" ),
  Matcher = cms.string( "Fake" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 5 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 5 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKFitter" ),
  Smoother = cms.string( "hltESPRKSmoother" ),
  EstimateCut = cms.double( 20.0 ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  MinNumberOfHits = cms.int32( 3 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterial" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterial" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" ),
  appendToDataLabel = cms.string( "" )
)
hltESPL1FastJetCorrectionESProducer = cms.ESProducer( "L1FastjetCorrectionESProducer",
  level = cms.string( "L1FastJet" ),
  algorithm = cms.string( "AK5Calo" ),
  srcRho = cms.InputTag( 'hltKT6CaloJets','rho' ),
  appendToDataLabel = cms.string( "" )
)
hltESPL2RelativeCorrectionESProducer = cms.ESProducer( "LXXXCorrectionESProducer",
  level = cms.string( "L2Relative" ),
  algorithm = cms.string( "AK5Calo" ),
  appendToDataLabel = cms.string( "" )
)
hltESPL3AbsoluteCorrectionESProducer = cms.ESProducer( "LXXXCorrectionESProducer",
  level = cms.string( "L3Absolute" ),
  algorithm = cms.string( "AK5Calo" ),
  appendToDataLabel = cms.string( "" )
)
hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  stripClusterProducer = cms.string( "hltSiStripClusters" )
)
hltESPMeasurementTrackerForHI = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTrackerForHI" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( False ),
  OnDemand = cms.bool( False ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripRawToDigi' ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 2 ),
      maxBad = cms.uint32( 4 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 2 ),
      maxBad = cms.uint32( 4 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 2 ),
      maxBad = cms.uint32( 4 )
    )
  ),
  pixelClusterProducer = cms.string( "hltHISiPixelClusters" ),
  stripClusterProducer = cms.string( "hltHISiStripClustersNonRegional" )
)
hltESPMixedLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPMixedLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg',
    'FPix2_pos+TEC1_pos',
    'FPix2_pos+TEC2_pos',
    'TEC1_pos+TEC2_pos',
    'TEC2_pos+TEC3_pos',
    'FPix2_neg+TEC1_neg',
    'FPix2_neg+TEC2_neg',
    'TEC1_neg+TEC2_neg',
    'TEC2_neg+TEC3_neg' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 1 )
  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPMuTrackJpsiTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPMuTrackJpsiTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPMuTrackJpsiTrajectoryFilter" ),
  maxCand = cms.int32( 1 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPMuTrackJpsiTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPMuTrackJpsiTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 1.0 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 8 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 5 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltESPMuonCkfTrajectoryBuilder = cms.ESProducer( "MuonCkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonCkfTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPMuonCkfTrajectoryFilter" ),
  useSeedLayer = cms.bool( False ),
  rescaleErrorIfFail = cms.double( 1.0 ),
  deltaEta = cms.double( 0.1 ),
  deltaPhi = cms.double( 0.1 ),
  appendToDataLabel = cms.string( "" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( False ),
  alwaysUseInvalidHits = cms.bool( True )
)
hltESPMuonCkfTrajectoryBuilderSeedHit = cms.ESProducer( "MuonCkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonCkfTrajectoryBuilderSeedHit" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPMuonCkfTrajectoryFilter" ),
  useSeedLayer = cms.bool( True ),
  rescaleErrorIfFail = cms.double( 1.0 ),
  deltaEta = cms.double( 0.1 ),
  deltaPhi = cms.double( 0.1 ),
  appendToDataLabel = cms.string( "" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( False ),
  alwaysUseInvalidHits = cms.bool( True )
)
hltESPMuonCkfTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPMuonCkfTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.9 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minimumNumberOfHits = cms.int32( 5 )
  )
)
hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  appendToDataLabel = cms.string( "" ),
  TanLorentzAnglePerTesla = cms.double( 0.106 ),
  PixelErrorParametrization = cms.string( "NOTcmsim" ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  DoCosmics = cms.bool( False ),
  LoadTemplatesFromDB = cms.bool( True ),
  UseErrorsFromTemplates = cms.bool( True ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  TruncatePixelCharge = cms.bool( True ),
  size_cutY = cms.double( 3.0 ),
  size_cutX = cms.double( 3.0 ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  IrradiationBiasCorrection = cms.bool( False ),
  inflate_errors = cms.bool( False ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 )
)
hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" ),
  TanLorentzAnglePerTesla = cms.double( 0.106 ),
  PixelErrorParametrization = cms.string( "" ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  DoCosmics = cms.bool( False ),
  UseClusterSplitter = cms.bool( False ),
  speed = cms.int32( -2 ),
  LoadTemplatesFromDB = cms.bool( True )
)
hltESPPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPixelLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPixelLayerTripletsHITHB = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerTripletsHITHB" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPixelLayerTripletsHITHE = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerTripletsHITHE" ),
  layerList = cms.vstring( 'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 )
  ),
  FPix = cms.PSet( 
    useErrorsFromParam = cms.bool( True ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  appendToDataLabel = cms.string( "" ),
  impactParameterType = cms.int32( 0 ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 ),
  maxImpactParameter = cms.double( 0.03 ),
  deltaRmin = cms.double( 0.0 )
)
hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKSmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Mass = cms.double( 0.105 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPSiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSmartPropagatorOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  appendToDataLabel = cms.string( "" ),
  distance = cms.double( 0.5 )
)
hltESPSoftLeptonByPt = cms.ESProducer( "LeptonTaggerByPtESProducer",
  appendToDataLabel = cms.string( "" ),
  ipSign = cms.string( "any" )
)
hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( False ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( False ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPStraightLinePropagator = cms.ESProducer( "StraightLinePropagatorESProducer",
  ComponentName = cms.string( "hltESPStraightLinePropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrackCounting3D1st = cms.ESProducer( "TrackCountingESProducer",
  appendToDataLabel = cms.string( "" ),
  nthTrack = cms.int32( 1 ),
  impactParameterType = cms.int32( 0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 5.0 ),
  maximumDistanceToJetAxis = cms.double( 0.07 ),
  trackQualityClass = cms.string( "any" )
)
hltESPTrackCounting3D2nd = cms.ESProducer( "TrackCountingESProducer",
  appendToDataLabel = cms.string( "" ),
  nthTrack = cms.int32( 2 ),
  impactParameterType = cms.int32( 0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 5.0 ),
  maximumDistanceToJetAxis = cms.double( 0.07 ),
  trackQualityClass = cms.string( "any" )
)
hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  trackerGeometryLabel = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator9" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 2 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryBuilderL3 = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPTrajectoryBuilderL3" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPTrajectoryFilterL3" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  appendToDataLabel = cms.string( "" ),
  fractionShared = cms.double( 0.5 ),
  allowSharedFirstHit = cms.bool( False )
)
hltESPTrajectoryCleanerBySharedSeeds = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedSeeds" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedSeeds" ),
  appendToDataLabel = cms.string( "" ),
  fractionShared = cms.double( 0.5 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 3 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltESPTrajectoryFilterL3 = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFilterL3" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.5 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 1000000000 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 5 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPbJetRegionalTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPbJetRegionalTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPbJetRegionalTrajectoryFilter" ),
  maxCand = cms.int32( 1 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPbJetRegionalTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPbJetRegionalTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 1.0 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 8 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 5 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltHIAllESPCkf3HitTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltHIAllESPCkf3HitTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltHIAllESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPCkf3HitTrajectoryFilter" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltHIAllESPCkfTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltHIAllESPCkfTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltHIAllESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPCkfTrajectoryFilter" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltHIAllESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltHIAllESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  stripLazyGetterProducer = cms.string( "hltHISiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  ),
  pixelClusterProducer = cms.string( "hltHISiPixelClusters" ),
  stripClusterProducer = cms.string( "hltHISiStripClusters" )
)
hltHIAllESPMuonCkfTrajectoryBuilder = cms.ESProducer( "MuonCkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltHIAllESPMuonCkfTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltHIAllESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPMuonCkfTrajectoryFilter" ),
  useSeedLayer = cms.bool( False ),
  rescaleErrorIfFail = cms.double( 1.0 ),
  deltaEta = cms.double( 0.1 ),
  deltaPhi = cms.double( 0.1 ),
  appendToDataLabel = cms.string( "" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( False ),
  alwaysUseInvalidHits = cms.bool( True )
)
hltHIAllESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltHIAllESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltHIAllESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter1ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter1ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  stripClusterProducer = cms.string( "hltIter1SiStripClusters" )
)
hltIter1ESPPixelLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter1ESPPixelLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0051 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltIter1ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter1ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator16" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter1ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter1ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 2 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter1ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter1ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.2 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 3 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltIter2ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter2ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  stripClusterProducer = cms.string( "hltIter2SiStripClusters" )
)
hltIter2ESPPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter2ESPPixelLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0051 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltIter2ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter2ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator16" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter2ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter2ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 2 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter2ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter2ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 3 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltIter3ESPLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter3ESPLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg',
    'BPix2+FPix1_pos+FPix2_pos',
    'BPix2+FPix1_neg+FPix2_neg',
    'FPix1_pos+FPix2_pos+TEC1_pos',
    'FPix1_neg+FPix2_neg+TEC1_neg',
    'FPix2_pos+TEC2_pos+TEC3_pos',
    'FPix2_neg+TEC2_neg+TEC3_neg',
    'BPix2+BPix3+TIB1',
    'BPix2+BPix3+TIB2',
    'BPix1+BPix3+TIB1',
    'BPix1+BPix3+TIB2',
    'BPix1+BPix2+TIB1',
    'BPix1+BPix2+TIB2' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0051 )
  ),
  TEC = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 1 )
  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ) ),
  TOB = cms.PSet(  )
)
hltIter3ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter3ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  stripClusterProducer = cms.string( "hltIter3SiStripClusters" )
)
hltIter3ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter3ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator16" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter3ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter3ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 1 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter3ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter3ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 0 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 3 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hltIter4ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter4ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  skipClusters = cms.InputTag( "hltIter4ClustersRefRemoval" ),
  UseStripCablingDB = cms.bool( False ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  UseStripNoiseDB = cms.bool( False ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  stripClusterProducer = cms.string( "hltIter4SiStripClusters" )
)
hltIter4ESPPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter4ESPPixelLayerPairs" ),
  layerList = cms.vstring( 'TIB1+TIB2' ),
  BPix = cms.PSet(  ),
  FPix = cms.PSet(  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ) ),
  TOB = cms.PSet(  )
)
hltIter4ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter4ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator16" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter4ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter4ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 1 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" ),
  minNrOfHitsForRebuild = cms.untracked.int32( 4 )
)
hltIter4ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter4ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minPt = cms.double( 0.3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 0 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 6 ),
    nSigmaMinPt = cms.double( 5.0 ),
    chargeSignificance = cms.double( -1.0 )
  )
)
hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False )
)
muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  includeBadChambers = cms.bool( False )
)
navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  appendToDataLabel = cms.string( "" )
)
preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  includeBadChambers = cms.bool( False )
)
siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  )
)
siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer",
  appendToDataLabel = cms.string( "" )
)
siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    record = cms.string( "SiStripLatencyRcd" ),
    label = cms.untracked.string( "" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    record = cms.string( "SiStripLorentzAngleRcd" ),
    label = cms.untracked.string( "deconvolution" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    record = cms.string( "SiStripLorentzAngleRcd" ),
    label = cms.untracked.string( "peak" )
  )
)
sistripconn = cms.ESProducer( "SiStripConnectivity" )

