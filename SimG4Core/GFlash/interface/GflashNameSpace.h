#ifndef GflashNameSpace_H
#define GflashNameSpace_H

namespace Gflash {

  //   enum

  enum CalorimeterNumber {
    kNULL,
    kESPM,              // ECAL Barrel - ESPM
    kENCA,              // ECAL Endcap - ENCA
    kHB,                // HCAL Barrel - HB
    kHE,                // HCAL Endcap - HE
    kNumberCalorimeter
  };
  
  const G4String CalorimeterName[kNumberCalorimeter] = {
    "NULL",
    "ESPM",
    "ENCA"
    "HB",
    "HE"
  };

  //constants needed for GflashHadronShowerProfile

  // number of sub-detectors (calorimeters)  
  const G4int NDET = 4; 
  const G4int NXN  = 9;
  const G4int NMX  = 8;

  // number of shower Type
  const G4int MIPC = 3;
  
  const G4int IT[MIPC][NXN] = {{1,4,7},
			       {1,2,4,5,7,8},
			       {1,2,3,4,5,6,7,8,9}};
  
  const G4int ISTCOL[NMX] = {1,4,7,13,19,28,37,46};
  //  const G4int MDIM[NMX]   = {3,3,6,6,9,9,9,9};
  const G4int NSTRTR[NMX] = {1,7,13,34,55,100,145,190};
  
  // correlation matrix RHO[I][J]
  const G4double rho[54][NXN] = {{1.}, // no pi0`s, 1 GeV : I = [0:2]
				 {.122,1.},
				 {-.186,-.885, 1.},
				 {1.}, // no pi0`s, 5 GeV : I = [3:5]
				 {.169, 1.},
				 {-.042,-.581, 1.},
				 {1.}, //only pi0-first, 2 GeV :  I = [6:11]
				 {.363, 1.},
				 {.210,-.191, 1.},
				 {.363, .563,-.090, 1.},
				 {-.118, .177,-.771, .102, 1.},
				 {-.278,-.380, .020,-.469,-.068, 1.},
				 { 1.}, // only pi0-first, 10 GeV :  I = [12:17]
				 { .731, 1.},
				 {-.144,-.403, 1.},
				 { .461, .660,-.214, 1.},
				 { .230, .344,-.625, .226, 1.},
				 {-.130,-.206, .135,-.327,-.034, 1.},
				 { 1.},// also pi0-back, 10 GeV :  I = [18:26]
				 { .575, 1.},
				 {-.303,-.424, 1.},
				 { .019,-.196, .271, 1.},
				 { .412, .527,-.709,-.131, 1.},
				 { .036,-.049, .244, .634,-.106, 1.},
				 { .059, .164,-.019,-.524, .055,-.422, 1.},
				 {-.150,-.165, .346, .088,-.348, .093, .009, 1.},
				 { .061,-.010,-.272, .121, .170, .167,-.111,-.096, 1.},
				 { 1.}, // also pi0-back, 50 GeV :  I = [27:35]
				 { .905, 1.},
				 {-.374,-.398, 1.},
				 {-.164,-.202, .410, 1.},
				 { .353, .398,-.675,-.248, 1.},
				 {-.152,-.191, .341, .759,-.190, 1.},
				 { .224, .219,-.138,-.597, .133,-.482, 1.},
				 { .001,-.014, .142, .116,-.340, .091,-.065, 1.},
				 { .439, .402,-.208,-.365, .209,-.308, .421,-.074, 1.},
				 { 1.}, // also pi0-back, 100 GEV :  I = [36:44]
				 { .956, 1.},
				 {-.559,-.587, 1.},
				 {-.382,-.397, .417, 1.},
				 { .410, .436,-.623,-.217, 1.},
				 {-.260,-.283, .195, .650,-.200, 1.},
				 { .358, .326,-.149,-.532, .019,-.337, 1.},
				 { .368, .371,-.162, .035,-.057,-.057, .121, 1.},
				 { .493, .451,-.240,-.535, .130,-.409, .583, .168, 1.},
				 { 1.}, // also pi0-back, 200 GEV :  I = [45:53]
				 { .920, 1.},
				 {-.622,-.679, 1.},
				 {-.373,-.459, .591, 1.},
				 { .363, .415,-.611,-.478, 1.},
				 {-.311,-.413, .301, .751,-.253, 1.},
				 { .237, .283, .012,-.397,-.060,-.419, 1.},
				 { .308, .351,-.014, .118,-.292, .029, .150, 1.},
				 { .188, .205, .336,-.196,-.135,-.325, .710, .124, 1.}};
  
  const G4double FLUHAD[3][NDET] = {{0.16,.161,0.150,0.130},
				    {0.,0.,0.,0.},
				    {0.044,0.044,0.053,0.040}};
  const G4double SAMHAD[3][NDET] = {{0.12,0.35,0.18,0.23},
				    {0.,0.,0.,0.},
				    {0.010,0.032,0.038,0.043}};
  const G4double RLTHAD[NDET] = {32.7,23.7,32.7,23.7};
  
  const G4double PBYMIP[NDET] = {1.82,3.20,1.85,2.3};


  //utility functions

}

#endif
